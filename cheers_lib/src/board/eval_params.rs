#[cfg(feature = "eval-tracing")]
use bytemuck::{Pod, Zeroable};

use super::eval_types::*;

#[cfg_attr(feature = "eval-tracing", derive(Pod, Zeroable))]
#[derive(Copy, Clone, Debug, Default, PartialEq, Eq)]
#[repr(C)]
pub struct EvalParams {
    pub piece_values: PieceValues,
    pub knight_mobility: [EvalScore; 9],
    pub bishop_mobility: [EvalScore; 14],
    pub rook_mobility: [EvalScore; 15],
    pub queen_mobility: [EvalScore; 28],
    pub piece_tables: PieceTables,
}

#[cfg(feature = "eval-tracing")]
impl EvalParams {
    pub const LEN: usize = std::mem::size_of::<Self>() / std::mem::size_of::<i16>();
    pub fn to_array(&mut self) -> [i16; Self::LEN] {
        let array = &mut bytemuck::cast::<EvalParams, [i16; Self::LEN]>(*self);
        array
            .chunks_exact_mut(2)
            .for_each(|p| EvalScore::convert(p));
        *array
    }
    pub fn as_array(&self) -> &[i16; Self::LEN] {
        bytemuck::cast_ref::<EvalParams, [i16; Self::LEN]>(self)
    }
    pub fn from_array(mut params: [i16; Self::LEN]) -> Self {
        params.chunks_exact_mut(2).for_each(|p| {
            let score = EvalScore::new(p[0], p[1]);
            p[1] = (score.inner() >> 16) as i16;
            p[0] = score.inner() as i16;
        });
        bytemuck::cast::<[i16; Self::LEN], EvalParams>(params)
    }
}

#[cfg_attr(feature = "eval-tracing", derive(Pod, Zeroable))]
#[derive(Clone, Copy)]
#[repr(C)]
pub struct EvalTrace {
    pub pawn_count: [i16; 2],
    pub knight_count: [i16; 2],
    pub bishop_count: [i16; 2],
    pub rook_count: [i16; 2],
    pub queen_count: [i16; 2],
    // pads to the length of PieceValues
    pub king_count: [i16; 2],

    pub knight_mobility: [[i16; 2]; 9],
    pub bishop_mobility: [[i16; 2]; 14],
    pub rook_mobility: [[i16; 2]; 15],
    pub queen_mobility: [[i16; 2]; 28],

    pub pawn_placement: [[i16; 2]; 64],
    pub knight_placement: [[i16; 2]; 64],
    pub bishop_placement: [[i16; 2]; 64],
    pub rook_placement: [[i16; 2]; 64],
    pub queen_placement: [[i16; 2]; 64],
    pub king_placement: [[i16; 2]; 64],

    pub turn: i16,
}

#[cfg(feature = "eval-tracing")]
impl EvalTrace {
    pub const LEN: usize = std::mem::size_of::<Self>() / std::mem::size_of::<i16>();
    pub fn new() -> Self {
        bytemuck::cast::<[i16; Self::LEN], Self>([0i16; Self::LEN])
    }
    pub fn to_array(&self) -> [i16; Self::LEN] {
        bytemuck::cast::<Self, [i16; Self::LEN]>(*self)
    }
}

#[cfg(feature = "eval-tracing")]
impl Default for EvalTrace {
    fn default() -> Self {
        Self::new()
    }
}

// static assert that eval params and trace are the same length (plus 1 for turn in trace)
#[cfg(feature = "eval-tracing")]
const _PARAMS_TRACE_LEN_EQ: () = if EvalParams::LEN + 1 == EvalTrace::LEN {
    ()
} else {
    panic!("Eval parameters and trace are not equal length!")
};

pub const CHECKMATE_SCORE: i16 = 30000;
pub const DRAW_SCORE: i16 = 0;

pub static EVAL_PARAMS: EvalParams = EvalParams {
    piece_values: PieceValues([
        s!(100, 131),
        s!(417, 229),
        s!(436, 240),
        s!(599, 436),
        s!(1276, 800),
        s!(0, 0),
    ]),
    knight_mobility: [
        s!(0, 0),
        s!(0, 0),
        s!(0, -1),
        s!(1, 1),
        s!(-1, -2),
        s!(0, 0),
        s!(4, -2),
        s!(0, 0),
        s!(3, -2),
    ],
    bishop_mobility: [
        s!(0, 0),
        s!(-36, -31),
        s!(-31, -38),
        s!(-16, -21),
        s!(-9, -15),
        s!(-3, -7),
        s!(5, 0),
        s!(11, 8),
        s!(19, 12),
        s!(19, 17),
        s!(26, 22),
        s!(35, 15),
        s!(33, 22),
        s!(53, 14),
    ],
    rook_mobility: [
        s!(0, 0),
        s!(0, 0),
        s!(-26, -26),
        s!(-18, -19),
        s!(-14, -9),
        s!(-7, -10),
        s!(-6, 0),
        s!(0, 1),
        s!(8, 0),
        s!(11, 5),
        s!(22, 4),
        s!(30, 5),
        s!(35, 9),
        s!(53, 13),
        s!(64, 6),
    ],
    queen_mobility: [
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(-21, -1),
        s!(-163, 12),
        s!(-20, -59),
        s!(-13, -138),
        s!(-11, -81),
        s!(-13, -53),
        s!(-7, -40),
        s!(-5, -49),
        s!(-6, -22),
        s!(-2, -7),
        s!(0, -3),
        s!(3, 6),
        s!(9, 2),
        s!(12, 10),
        s!(9, 21),
        s!(13, 30),
        s!(15, 33),
        s!(19, 32),
        s!(17, 44),
        s!(15, 52),
        s!(21, 44),
        s!(26, 43),
        s!(59, 28),
        s!(-5, 66),
        s!(104, 16),
    ],
    piece_tables: PieceTables([
        [
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(-32, -23),
            s!(2, -32),
            s!(-17, -32),
            s!(-4, -30),
            s!(4, -38),
            s!(28, -41),
            s!(53, -48),
            s!(-4, -50),
            s!(-34, -31),
            s!(-13, -34),
            s!(-6, -49),
            s!(-5, -40),
            s!(11, -46),
            s!(-8, -45),
            s!(32, -47),
            s!(-7, -49),
            s!(-46, -23),
            s!(-13, -31),
            s!(-12, -47),
            s!(6, -52),
            s!(7, -52),
            s!(1, -53),
            s!(0, -44),
            s!(-42, -41),
            s!(-30, -2),
            s!(-7, -14),
            s!(-17, -25),
            s!(-1, -37),
            s!(9, -47),
            s!(-9, -38),
            s!(0, -27),
            s!(-32, -24),
            s!(-43, 64),
            s!(-19, 59),
            s!(1, 46),
            s!(-10, 31),
            s!(9, 15),
            s!(39, 4),
            s!(-8, 35),
            s!(-37, 44),
            s!(23, 133),
            s!(18, 130),
            s!(11, 115),
            s!(32, 83),
            s!(56, 71),
            s!(44, 86),
            s!(-15, 126),
            s!(-70, 126),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
        ],
        [
            s!(-44, -49),
            s!(2, -29),
            s!(-19, -13),
            s!(-2, -5),
            s!(-2, -10),
            s!(6, -6),
            s!(0, -35),
            s!(-72, -25),
            s!(-4, -34),
            s!(-11, -18),
            s!(10, -12),
            s!(32, -6),
            s!(27, -6),
            s!(32, -8),
            s!(16, -22),
            s!(4, -29),
            s!(-5, -20),
            s!(8, 0),
            s!(32, -4),
            s!(32, 18),
            s!(45, 12),
            s!(32, -1),
            s!(33, -14),
            s!(-8, -28),
            s!(3, -11),
            s!(7, 4),
            s!(31, 20),
            s!(27, 24),
            s!(40, 25),
            s!(40, 10),
            s!(15, -3),
            s!(-6, -6),
            s!(26, -14),
            s!(26, 12),
            s!(22, 19),
            s!(63, 25),
            s!(31, 25),
            s!(52, 18),
            s!(15, 12),
            s!(38, -16),
            s!(-2, -22),
            s!(26, -12),
            s!(31, 17),
            s!(70, 11),
            s!(99, -12),
            s!(124, -10),
            s!(65, -20),
            s!(2, -16),
            s!(-69, -26),
            s!(-24, -11),
            s!(74, -22),
            s!(24, -5),
            s!(80, -27),
            s!(72, -27),
            s!(8, -25),
            s!(-4, -47),
            s!(-244, -5),
            s!(-71, -47),
            s!(-49, -15),
            s!(-69, -6),
            s!(25, -29),
            s!(-118, -15),
            s!(-126, -25),
            s!(-140, -73),
        ],
        [
            s!(62, -26),
            s!(25, -8),
            s!(52, -14),
            s!(39, -3),
            s!(33, -5),
            s!(29, -1),
            s!(52, -27),
            s!(50, -19),
            s!(29, -7),
            s!(66, -23),
            s!(38, -18),
            s!(41, -12),
            s!(40, -8),
            s!(61, -18),
            s!(76, -17),
            s!(42, -18),
            s!(60, -19),
            s!(43, -9),
            s!(47, -11),
            s!(29, -2),
            s!(42, -5),
            s!(47, -13),
            s!(35, -19),
            s!(48, -16),
            s!(24, -10),
            s!(29, -10),
            s!(26, -3),
            s!(47, -11),
            s!(47, -10),
            s!(29, -4),
            s!(31, -18),
            s!(17, -11),
            s!(4, 4),
            s!(22, 0),
            s!(31, -8),
            s!(36, -1),
            s!(39, -4),
            s!(8, -8),
            s!(39, -14),
            s!(21, -7),
            s!(7, 3),
            s!(23, -5),
            s!(58, -13),
            s!(25, 0),
            s!(68, -17),
            s!(63, -6),
            s!(67, -12),
            s!(61, -11),
            s!(-2, -9),
            s!(24, -10),
            s!(5, -7),
            s!(5, -17),
            s!(25, -10),
            s!(67, -25),
            s!(16, -6),
            s!(36, -31),
            s!(-9, -3),
            s!(-23, -14),
            s!(-12, -11),
            s!(-39, 2),
            s!(-90, 5),
            s!(-9, -6),
            s!(14, -16),
            s!(-43, 5),
        ],
        [
            s!(-2, 0),
            s!(0, 0),
            s!(14, -2),
            s!(20, 0),
            s!(27, -11),
            s!(18, -6),
            s!(-6, -5),
            s!(14, -30),
            s!(-20, -2),
            s!(-13, -3),
            s!(-11, 2),
            s!(3, -3),
            s!(6, -6),
            s!(11, -8),
            s!(30, -15),
            s!(-29, -5),
            s!(-26, -4),
            s!(-22, -1),
            s!(-8, -3),
            s!(10, -9),
            s!(8, -8),
            s!(8, -14),
            s!(21, -24),
            s!(11, -20),
            s!(-29, 3),
            s!(-36, 6),
            s!(-33, 9),
            s!(-17, 6),
            s!(-6, 1),
            s!(-8, -3),
            s!(1, -10),
            s!(-8, -14),
            s!(-31, 9),
            s!(-15, 3),
            s!(0, 5),
            s!(13, 0),
            s!(-9, 2),
            s!(12, -1),
            s!(37, -11),
            s!(30, -12),
            s!(-7, 8),
            s!(-5, 7),
            s!(-10, 7),
            s!(19, 0),
            s!(35, -8),
            s!(49, -9),
            s!(86, -17),
            s!(53, -14),
            s!(-2, 9),
            s!(-17, 23),
            s!(19, 11),
            s!(53, 0),
            s!(18, 0),
            s!(71, -7),
            s!(87, -13),
            s!(54, -12),
            s!(31, 10),
            s!(42, 2),
            s!(39, 4),
            s!(38, 0),
            s!(73, -8),
            s!(123, -24),
            s!(95, -18),
            s!(31, -1),
        ],
        [
            s!(28, -30),
            s!(20, -35),
            s!(26, -37),
            s!(37, -46),
            s!(25, -27),
            s!(10, -31),
            s!(-1, -28),
            s!(39, -58),
            s!(9, -9),
            s!(18, -18),
            s!(18, -24),
            s!(24, -24),
            s!(27, -32),
            s!(43, -62),
            s!(43, -65),
            s!(33, -30),
            s!(-2, -32),
            s!(12, -48),
            s!(0, 3),
            s!(7, -22),
            s!(5, -3),
            s!(11, -5),
            s!(13, 6),
            s!(5, -4),
            s!(-4, -15),
            s!(-8, 0),
            s!(-8, -4),
            s!(-11, 22),
            s!(0, 9),
            s!(3, 0),
            s!(5, 12),
            s!(-3, 11),
            s!(-24, -4),
            s!(-11, 4),
            s!(-18, 3),
            s!(-18, 24),
            s!(-12, 42),
            s!(-10, 51),
            s!(-7, 36),
            s!(21, 18),
            s!(-20, -13),
            s!(-22, 0),
            s!(2, 13),
            s!(10, 7),
            s!(31, 43),
            s!(62, 0),
            s!(115, -37),
            s!(71, -13),
            s!(-19, 11),
            s!(-34, 6),
            s!(-36, 28),
            s!(-68, 79),
            s!(-50, 60),
            s!(84, 31),
            s!(8, 47),
            s!(136, -70),
            s!(-10, -3),
            s!(-19, 20),
            s!(33, -4),
            s!(34, 12),
            s!(89, -19),
            s!(89, -8),
            s!(-2, 3),
            s!(-16, 43),
        ],
        [
            s!(-73, -20),
            s!(7, -22),
            s!(-13, -8),
            s!(-82, 3),
            s!(-17, -14),
            s!(-48, -1),
            s!(21, -30),
            s!(8, -51),
            s!(25, -27),
            s!(-33, 2),
            s!(-51, 18),
            s!(-92, 31),
            s!(-78, 30),
            s!(-53, 26),
            s!(1, 5),
            s!(2, -12),
            s!(4, -26),
            s!(11, -1),
            s!(-81, 26),
            s!(-93, 37),
            s!(-94, 40),
            s!(-72, 34),
            s!(-27, 16),
            s!(-45, 4),
            s!(35, -31),
            s!(21, -3),
            s!(5, 16),
            s!(-70, 33),
            s!(-61, 36),
            s!(-83, 39),
            s!(-42, 21),
            s!(-87, 11),
            s!(12, -22),
            s!(19, 2),
            s!(43, 11),
            s!(0, 22),
            s!(-18, 23),
            s!(-12, 30),
            s!(5, 23),
            s!(-50, 15),
            s!(52, -16),
            s!(142, -2),
            s!(48, 10),
            s!(71, 6),
            s!(13, 18),
            s!(76, 22),
            s!(88, 25),
            s!(-19, 19),
            s!(55, -20),
            s!(132, -6),
            s!(87, -3),
            s!(63, -2),
            s!(68, 2),
            s!(126, 10),
            s!(17, 25),
            s!(-31, 15),
            s!(93, -58),
            s!(72, -24),
            s!(105, -27),
            s!(80, -19),
            s!(98, -17),
            s!(96, -6),
            s!(51, -5),
            s!(47, -31),
        ],
    ]),
};
