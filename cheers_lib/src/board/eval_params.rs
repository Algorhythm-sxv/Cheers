#[cfg(feature = "eval-tracing")]
use bytemuck::{Pod, Zeroable};

use super::eval_types::*;

#[cfg_attr(feature = "eval-tracing", derive(Pod, Zeroable))]
#[derive(Copy, Clone, Debug, Default, PartialEq, Eq)]
#[repr(C)]
pub struct EvalParams {
    pub piece_values: PieceValues,
    pub piece_tables: PieceTables,
}

#[cfg(feature = "eval-tracing")]
impl EvalParams {
    pub const LEN: usize = std::mem::size_of::<Self>() / std::mem::size_of::<i16>();
    pub fn to_array(&mut self) -> [i16; Self::LEN] {
        let array = &mut bytemuck::cast::<EvalParams, [i16; Self::LEN]>(*self);
        array
            .chunks_exact_mut(2)
            .for_each(|p| EvalScore::convert(p));
        *array
    }
    pub fn as_array(&self) -> &[i16; Self::LEN] {
        bytemuck::cast_ref::<EvalParams, [i16; Self::LEN]>(self)
    }
    pub fn from_array(mut params: [i16; Self::LEN]) -> Self {
        params.chunks_exact_mut(2).for_each(|p| {
            let score = EvalScore::new(p[0], p[1]);
            p[1] = (score.inner() >> 16) as i16;
            p[0] = score.inner() as i16;
        });
        bytemuck::cast::<[i16; Self::LEN], EvalParams>(params)
    }
}

#[cfg_attr(feature = "eval-tracing", derive(Pod, Zeroable))]
#[derive(Clone, Copy)]
#[repr(C)]
pub struct EvalTrace {
    pub pawn_count: [i16; 2],
    pub knight_count: [i16; 2],
    pub bishop_count: [i16; 2],
    pub rook_count: [i16; 2],
    pub queen_count: [i16; 2],
    // pads to the length of PieceValues
    pub king_count: [i16; 2],

    pub pawn_placement: [[i16; 2]; 64],
    pub knight_placement: [[i16; 2]; 64],
    pub bishop_placement: [[i16; 2]; 64],
    pub rook_placement: [[i16; 2]; 64],
    pub queen_placement: [[i16; 2]; 64],
    pub king_placement: [[i16; 2]; 64],

    pub turn: i16,
}

#[cfg(feature = "eval-tracing")]
impl EvalTrace {
    pub const LEN: usize = std::mem::size_of::<Self>() / std::mem::size_of::<i16>();
    pub fn new() -> Self {
        bytemuck::cast::<[i16; Self::LEN], Self>([0i16; Self::LEN])
    }
    pub fn to_array(&self) -> [i16; Self::LEN] {
        bytemuck::cast::<Self, [i16; Self::LEN]>(*self)
    }
}

#[cfg(feature = "eval-tracing")]
impl Default for EvalTrace {
    fn default() -> Self {
        Self::new()
    }
}

pub const CHECKMATE_SCORE: i16 = 30000;
pub const DRAW_SCORE: i16 = 0;

pub static EVAL_PARAMS: EvalParams = EvalParams {
    piece_values: PieceValues([
        s!(81, 72),
        s!(376, 278),
        s!(402, 280),
        s!(613, 440),
        s!(791, 806),
        s!(20000, 20000),
    ]),
    piece_tables: PieceTables([
        [
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(-6, 17),
            s!(4, 14),
            s!(1, 21),
            s!(8, 16),
            s!(7, 22),
            s!(33, 7),
            s!(38, 1),
            s!(7, -6),
            s!(-8, 6),
            s!(-16, 6),
            s!(0, 4),
            s!(-4, 9),
            s!(1, 10),
            s!(-8, 5),
            s!(0, 0),
            s!(-8, -7),
            s!(-12, 12),
            s!(-17, 12),
            s!(-2, 1),
            s!(16, -3),
            s!(7, 1),
            s!(14, -6),
            s!(-19, 6),
            s!(-28, -1),
            s!(1, 29),
            s!(-8, 24),
            s!(-3, 19),
            s!(12, 8),
            s!(11, 8),
            s!(12, 8),
            s!(-13, 20),
            s!(-9, 11),
            s!(-7, 73),
            s!(-4, 66),
            s!(1, 64),
            s!(4, 45),
            s!(0, 44),
            s!(52, 34),
            s!(-15, 53),
            s!(-14, 52),
            s!(16, 190),
            s!(22, 173),
            s!(-4, 170),
            s!(30, 136),
            s!(47, 129),
            s!(45, 131),
            s!(-21, 171),
            s!(-82, 170),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
        ],
        [
            s!(1, -40),
            s!(23, -33),
            s!(-7, -26),
            s!(-1, -17),
            s!(6, -24),
            s!(-4, -19),
            s!(13, -31),
            s!(-42, -15),
            s!(36, -46),
            s!(9, -30),
            s!(25, -35),
            s!(28, -23),
            s!(28, -25),
            s!(16, -27),
            s!(19, -36),
            s!(16, -38),
            s!(25, -34),
            s!(18, -18),
            s!(24, -23),
            s!(7, 0),
            s!(24, -6),
            s!(15, -19),
            s!(35, -36),
            s!(7, -37),
            s!(41, -25),
            s!(25, -18),
            s!(30, -3),
            s!(22, 0),
            s!(32, 3),
            s!(42, -14),
            s!(28, -26),
            s!(18, -17),
            s!(57, -24),
            s!(45, -15),
            s!(28, -3),
            s!(71, 1),
            s!(46, -5),
            s!(59, -5),
            s!(40, -16),
            s!(72, -34),
            s!(28, -35),
            s!(23, -27),
            s!(20, 0),
            s!(58, -4),
            s!(87, -26),
            s!(124, -29),
            s!(63, -36),
            s!(20, -26),
            s!(-27, -26),
            s!(0, -15),
            s!(98, -41),
            s!(50, -23),
            s!(107, -45),
            s!(91, -45),
            s!(47, -36),
            s!(43, -50),
            s!(-168, 4),
            s!(14, -64),
            s!(-3, -26),
            s!(-13, -19),
            s!(71, -36),
            s!(-61, -28),
            s!(-32, -45),
            s!(-65, -64),
        ],
        [
            s!(34, -15),
            s!(32, -12),
            s!(46, -26),
            s!(28, -9),
            s!(26, -10),
            s!(5, -7),
            s!(39, -31),
            s!(11, -8),
            s!(39, -13),
            s!(23, -10),
            s!(45, -16),
            s!(35, -13),
            s!(35, -7),
            s!(47, -19),
            s!(29, -14),
            s!(34, -22),
            s!(63, -24),
            s!(56, -13),
            s!(12, 3),
            s!(29, 0),
            s!(40, -2),
            s!(1, 2),
            s!(32, -26),
            s!(46, -23),
            s!(37, -16),
            s!(25, -11),
            s!(39, -1),
            s!(7, 7),
            s!(16, 8),
            s!(30, -2),
            s!(33, -20),
            s!(20, -14),
            s!(4, 2),
            s!(34, 0),
            s!(28, -3),
            s!(2, 17),
            s!(5, 13),
            s!(14, -4),
            s!(41, -12),
            s!(23, -10),
            s!(15, -10),
            s!(12, -4),
            s!(23, 4),
            s!(10, 6),
            s!(68, -11),
            s!(20, 12),
            s!(53, -10),
            s!(54, -12),
            s!(-6, -9),
            s!(-16, 3),
            s!(1, -8),
            s!(11, -18),
            s!(25, -13),
            s!(64, -22),
            s!(-18, 8),
            s!(42, -34),
            s!(-19, 0),
            s!(-11, -23),
            s!(14, -18),
            s!(-18, -7),
            s!(-68, -3),
            s!(4, -15),
            s!(17, -18),
            s!(-51, 7),
        ],
        [
            s!(-1, 7),
            s!(0, 4),
            s!(8, 4),
            s!(13, 5),
            s!(22, -5),
            s!(21, 0),
            s!(2, -5),
            s!(29, -28),
            s!(-20, 0),
            s!(-15, 2),
            s!(-19, 8),
            s!(-2, 0),
            s!(0, -2),
            s!(10, -4),
            s!(37, -16),
            s!(-26, -3),
            s!(-25, 1),
            s!(-19, 2),
            s!(-14, 3),
            s!(2, -1),
            s!(2, -1),
            s!(14, -9),
            s!(38, -22),
            s!(19, -17),
            s!(-27, 10),
            s!(-39, 13),
            s!(-36, 16),
            s!(-26, 16),
            s!(-20, 13),
            s!(-6, 4),
            s!(17, -6),
            s!(6, -10),
            s!(-32, 16),
            s!(-5, 6),
            s!(-2, 14),
            s!(11, 6),
            s!(-8, 10),
            s!(16, 4),
            s!(48, -7),
            s!(26, -2),
            s!(-1, 11),
            s!(-7, 13),
            s!(-10, 13),
            s!(25, 5),
            s!(35, -1),
            s!(58, -6),
            s!(88, -12),
            s!(63, -12),
            s!(-26, 41),
            s!(-41, 55),
            s!(-8, 44),
            s!(24, 32),
            s!(-7, 34),
            s!(70, 15),
            s!(82, 13),
            s!(44, 15),
            s!(6, 22),
            s!(28, 11),
            s!(26, 14),
            s!(31, 7),
            s!(68, -2),
            s!(113, -17),
            s!(95, -13),
            s!(22, 5),
        ],
        [
            s!(23, -30),
            s!(11, -22),
            s!(15, -22),
            s!(22, -22),
            s!(14, -9),
            s!(7, -25),
            s!(-4, -23),
            s!(49, -62),
            s!(10, -11),
            s!(12, -12),
            s!(13, -16),
            s!(21, -21),
            s!(22, -17),
            s!(35, -44),
            s!(41, -50),
            s!(27, -12),
            s!(3, -37),
            s!(11, -38),
            s!(-3, 22),
            s!(4, 4),
            s!(0, 24),
            s!(8, 17),
            s!(8, 32),
            s!(10, 2),
            s!(5, 1),
            s!(-9, 17),
            s!(-7, 21),
            s!(-18, 54),
            s!(-3, 41),
            s!(12, -2),
            s!(12, 29),
            s!(7, 15),
            s!(-17, -8),
            s!(-13, 26),
            s!(-24, 29),
            s!(-24, 62),
            s!(-20, 78),
            s!(-3, 70),
            s!(-6, 56),
            s!(25, 24),
            s!(-18, -13),
            s!(-25, 11),
            s!(0, 34),
            s!(3, 36),
            s!(30, 73),
            s!(58, 27),
            s!(105, -15),
            s!(71, -5),
            s!(-40, 30),
            s!(-45, 25),
            s!(-48, 48),
            s!(-78, 100),
            s!(-56, 79),
            s!(65, 63),
            s!(10, 61),
            s!(133, -63),
            s!(-82, 85),
            s!(9, 4),
            s!(70, -27),
            s!(64, 0),
            s!(48, 21),
            s!(-4, 66),
            s!(5, 1),
            s!(-13, 43),
        ],
        [
            s!(-23, -54),
            s!(15, -38),
            s!(-6, -21),
            s!(-43, -14),
            s!(-21, -28),
            s!(-38, -19),
            s!(26, -46),
            s!(52, -92),
            s!(32, -40),
            s!(-87, 5),
            s!(-101, 17),
            s!(-131, 30),
            s!(-122, 26),
            s!(-113, 23),
            s!(-55, 4),
            s!(21, -35),
            s!(7, -35),
            s!(-44, 1),
            s!(-116, 23),
            s!(-128, 31),
            s!(-137, 31),
            s!(-117, 23),
            s!(-84, 10),
            s!(-37, -19),
            s!(20, -34),
            s!(-24, 4),
            s!(-39, 17),
            s!(-108, 29),
            s!(-102, 29),
            s!(-126, 29),
            s!(-99, 17),
            s!(-84, -8),
            s!(4, -23),
            s!(-31, 14),
            s!(-4, 20),
            s!(-34, 25),
            s!(-67, 28),
            s!(-56, 31),
            s!(-40, 25),
            s!(-26, -1),
            s!(62, -18),
            s!(97, 16),
            s!(10, 25),
            s!(30, 21),
            s!(-32, 34),
            s!(42, 32),
            s!(46, 33),
            s!(2, 8),
            s!(47, -13),
            s!(86, 13),
            s!(31, 21),
            s!(20, 18),
            s!(17, 21),
            s!(67, 29),
            s!(-37, 39),
            s!(-24, 11),
            s!(154, -78),
            s!(105, -21),
            s!(119, -18),
            s!(76, -8),
            s!(104, -16),
            s!(126, -12),
            s!(89, -14),
            s!(80, -55),
        ],
    ]),
};
