#[cfg(feature = "eval-tracing")]
use bytemuck::{Pod, Zeroable};

use super::eval_types::*;

#[cfg_attr(feature = "eval-tracing", derive(Pod, Zeroable))]
#[derive(Copy, Clone, Debug, PartialEq, Eq)]
#[repr(C)]
pub struct EvalParams {
    pub piece_values: PieceValues,

    pub knight_mobility: [EvalScore; 9],
    pub knight_outpost: [EvalScore; 3],

    pub bishop_mobility: [EvalScore; 14],
    pub bishop_outpost: [EvalScore; 3],

    pub rook_mobility: [EvalScore; 15],
    pub rook_on_open_file: [EvalScore; 3],

    pub queen_mobility: [EvalScore; 28],

    pub pawn_connected: [EvalScore; 3],
    pub pawn_phalanx: [EvalScore; 3],
    pub pawn_isolated: [EvalScore; 2],
    pub pawn_doubled: [EvalScore; 6],
    pub pawn_backward: [EvalScore; 2],

    pub passed_pawn_friendly_king_distance: [EvalScore; 4],
    pub passed_pawn_enemy_king_distance: [EvalScore; 4],
    pub passed_pawn_table: [EvalScore; 64],

    pub piece_tables: PieceTables,
}

#[cfg(feature = "eval-tracing")]
impl EvalParams {
    pub const LEN: usize = std::mem::size_of::<Self>() / std::mem::size_of::<i16>();
    pub fn to_array(&mut self) -> [i16; Self::LEN] {
        let array = &mut bytemuck::cast::<EvalParams, [i16; Self::LEN]>(*self);
        array
            .chunks_exact_mut(2)
            .for_each(|p| EvalScore::convert(p));
        *array
    }
    pub fn as_array(&self) -> &[i16; Self::LEN] {
        bytemuck::cast_ref::<EvalParams, [i16; Self::LEN]>(self)
    }
    pub fn from_array(mut params: [i16; Self::LEN]) -> Self {
        params.chunks_exact_mut(2).for_each(|p| {
            let score = EvalScore::new(p[0], p[1]);
            p[1] = (score.inner() >> 16) as i16;
            p[0] = score.inner() as i16;
        });
        bytemuck::cast::<[i16; Self::LEN], EvalParams>(params)
    }
}

#[cfg_attr(feature = "eval-tracing", derive(Pod, Zeroable))]
#[derive(Clone, Copy)]
#[repr(C)]
pub struct EvalTrace {
    pub pawn_count: [i16; 2],
    pub knight_count: [i16; 2],
    pub bishop_count: [i16; 2],
    pub rook_count: [i16; 2],
    pub queen_count: [i16; 2],
    // pads to the length of PieceValues
    pub king_count: [i16; 2],

    pub knight_mobility: [[i16; 2]; 9],
    pub knight_outpost: [[i16; 2]; 3],

    pub bishop_mobility: [[i16; 2]; 14],
    pub bishop_outpost: [[i16; 2]; 3],

    pub rook_mobility: [[i16; 2]; 15],
    pub rook_on_open_file: [[i16; 2]; 3],

    pub queen_mobility: [[i16; 2]; 28],

    pub pawn_connected: [[i16; 2]; 3],
    pub pawn_phalanx: [[i16; 2]; 3],
    pub pawn_isolated: [[i16; 2]; 2],
    pub pawn_doubled: [[i16; 2]; 6],
    pub pawn_backward: [[i16; 2]; 2],

    pub passed_pawn_friendly_king_distance: [[i16; 2]; 4],
    pub passed_pawn_enemy_king_distance: [[i16; 2]; 4],
    pub passed_pawn_placement: [[i16; 2]; 64],

    pub pawn_placement: [[i16; 2]; 64],
    pub knight_placement: [[i16; 2]; 64],
    pub bishop_placement: [[i16; 2]; 64],
    pub rook_placement: [[i16; 2]; 64],
    pub queen_placement: [[i16; 2]; 64],
    pub king_placement: [[i16; 2]; 64],

    pub turn: i16,
}

#[cfg(feature = "eval-tracing")]
impl EvalTrace {
    pub const LEN: usize = std::mem::size_of::<Self>() / std::mem::size_of::<i16>();
    pub fn new() -> Self {
        bytemuck::cast::<[i16; Self::LEN], Self>([0i16; Self::LEN])
    }
    pub fn to_array(&self) -> [i16; Self::LEN] {
        bytemuck::cast::<Self, [i16; Self::LEN]>(*self)
    }
}

#[cfg(feature = "eval-tracing")]
impl Default for EvalTrace {
    fn default() -> Self {
        Self::new()
    }
}

// static assert that eval params and trace are the same length (plus 1 for turn in trace)
#[cfg(feature = "eval-tracing")]
const _PARAMS_TRACE_LEN_EQ: () = if EvalParams::LEN + 1 == EvalTrace::LEN {
    ()
} else {
    panic!("Eval parameters and trace are not equal length!")
};

pub const CHECKMATE_SCORE: i16 = 30000;
pub const DRAW_SCORE: i16 = 0;

pub static EVAL_PARAMS: EvalParams = EvalParams {
    piece_values: PieceValues([
        s!(74, 115),
        s!(412, 211),
        s!(410, 225),
        s!(543, 395),
        s!(1149, 716),
        s!(0, 0),
    ]),
    knight_mobility: [
        s!(-93, -89),
        s!(-60, -46),
        s!(-36, -21),
        s!(-32, -2),
        s!(-16, -8),
        s!(-11, 3),
        s!(-4, 0),
        s!(5, 2),
        s!(15, -7),
    ],
    knight_outpost: [s!(-15, -1), s!(-3, -12), s!(10, 4)],
    bishop_mobility: [
        s!(-44, -44),
        s!(-58, -26),
        s!(-38, -23),
        s!(-25, -9),
        s!(-17, -3),
        s!(-9, 3),
        s!(-4, 8),
        s!(1, 9),
        s!(6, 11),
        s!(10, 8),
        s!(19, 9),
        s!(34, -1),
        s!(38, 9),
        s!(45, -8),
    ],
    bishop_outpost: [s!(-8, -5), s!(-2, -9), s!(29, -13)],
    rook_mobility: [
        s!(-82, -95),
        s!(-71, -52),
        s!(-20, -29),
        s!(-15, -12),
        s!(-12, -8),
        s!(-6, -9),
        s!(-4, -1),
        s!(1, -2),
        s!(4, 2),
        s!(12, 1),
        s!(15, 5),
        s!(20, 8),
        s!(27, 11),
        s!(29, 12),
        s!(59, -3),
    ],
    rook_on_open_file: [s!(-7, 0), s!(6, 11), s!(28, -5)],
    queen_mobility: [
        s!(0, 0),
        s!(-76, -46),
        s!(-150, 1),
        s!(-59, -124),
        s!(-42, -68),
        s!(-37, -88),
        s!(-31, -59),
        s!(-29, -35),
        s!(-29, -3),
        s!(-23, -15),
        s!(-23, 14),
        s!(-19, 10),
        s!(-12, 19),
        s!(-10, 18),
        s!(-6, 25),
        s!(-4, 28),
        s!(-9, 41),
        s!(0, 37),
        s!(-7, 48),
        s!(-10, 54),
        s!(4, 46),
        s!(13, 48),
        s!(-2, 51),
        s!(58, 9),
        s!(96, -2),
        s!(37, 26),
        s!(196, -67),
        s!(315, -123),
    ],
    pawn_connected: [s!(-19, -20), s!(-2, -8), s!(14, -2)],
    pawn_phalanx: [s!(0, 2), s!(7, 5), s!(8, -6)],
    pawn_isolated: [s!(4, 5), s!(0, 4)],
    pawn_doubled: [
        s!(1, 3),
        s!(0, -6),
        s!(1, -28),
        s!(0, 63),
        s!(0, 0),
        s!(0, 0),
    ],
    pawn_backward: [s!(8, 7), s!(0, 2)],
    passed_pawn_friendly_king_distance: [s!(3, 11), s!(-6, 2), s!(-9, -12), s!(-10, -15)],
    passed_pawn_enemy_king_distance: [s!(15, -55), s!(32, -22), s!(4, 5), s!(-5, 21)],
    passed_pawn_table: [
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(16, -7),
        s!(9, 6),
        s!(11, -17),
        s!(-6, -30),
        s!(-1, -13),
        s!(7, -18),
        s!(52, -15),
        s!(7, -12),
        s!(20, 0),
        s!(20, 6),
        s!(14, -5),
        s!(-16, -5),
        s!(8, -8),
        s!(14, 1),
        s!(19, 8),
        s!(31, -5),
        s!(20, 25),
        s!(11, 26),
        s!(-6, 25),
        s!(-4, 21),
        s!(-16, 24),
        s!(-32, 34),
        s!(-60, 48),
        s!(6, 29),
        s!(24, 48),
        s!(25, 54),
        s!(9, 43),
        s!(-9, 46),
        s!(-7, 44),
        s!(13, 46),
        s!(0, 60),
        s!(-20, 54),
        s!(38, 101),
        s!(23, 83),
        s!(11, 62),
        s!(12, 39),
        s!(-12, 57),
        s!(-7, 88),
        s!(-36, 87),
        s!(-65, 114),
        s!(63, -7),
        s!(91, 0),
        s!(9, 82),
        s!(28, 12),
        s!(14, 4),
        s!(1, 51),
        s!(16, 100),
        s!(-41, 81),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
    ],
    piece_tables: PieceTables([
        [
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(-9, -36),
            s!(-2, -40),
            s!(-3, -29),
            s!(2, -28),
            s!(8, -37),
            s!(36, -42),
            s!(40, -54),
            s!(10, -54),
            s!(-14, -44),
            s!(-20, -46),
            s!(-7, -44),
            s!(-6, -36),
            s!(5, -43),
            s!(-5, -46),
            s!(15, -59),
            s!(-1, -55),
            s!(-12, -40),
            s!(-17, -39),
            s!(0, -50),
            s!(8, -52),
            s!(11, -52),
            s!(13, -56),
            s!(0, -53),
            s!(-18, -51),
            s!(0, -27),
            s!(-8, -32),
            s!(-2, -35),
            s!(9, -43),
            s!(16, -47),
            s!(13, -46),
            s!(-2, -40),
            s!(-2, -40),
            s!(-4, -10),
            s!(-3, 3),
            s!(8, 13),
            s!(-2, 19),
            s!(20, -1),
            s!(66, -30),
            s!(17, -6),
            s!(15, -23),
            s!(0, 141),
            s!(-3, 126),
            s!(12, 52),
            s!(11, 96),
            s!(48, 95),
            s!(66, 57),
            s!(13, 44),
            s!(16, 53),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
        ],
        [
            s!(-33, -15),
            s!(5, -11),
            s!(-25, -3),
            s!(-13, 2),
            s!(-6, -3),
            s!(-3, 2),
            s!(0, -16),
            s!(-39, 4),
            s!(0, -17),
            s!(-11, -5),
            s!(-1, -10),
            s!(12, -3),
            s!(14, -5),
            s!(11, -5),
            s!(15, -9),
            s!(13, -14),
            s!(-10, -9),
            s!(-6, 0),
            s!(1, -2),
            s!(-3, 17),
            s!(9, 12),
            s!(8, -2),
            s!(20, -12),
            s!(-5, -12),
            s!(1, -3),
            s!(-2, 2),
            s!(2, 16),
            s!(3, 18),
            s!(10, 20),
            s!(20, 4),
            s!(11, -7),
            s!(0, 1),
            s!(10, -1),
            s!(8, 6),
            s!(-3, 15),
            s!(32, 20),
            s!(12, 15),
            s!(23, 14),
            s!(5, 5),
            s!(37, -11),
            s!(-17, -7),
            s!(-10, -3),
            s!(-12, 20),
            s!(22, 14),
            s!(46, -4),
            s!(74, -5),
            s!(30, -15),
            s!(-7, -4),
            s!(-63, 0),
            s!(-41, 6),
            s!(45, -15),
            s!(6, 0),
            s!(54, -19),
            s!(40, -19),
            s!(-1, -8),
            s!(0, -23),
            s!(-212, 32),
            s!(-42, -34),
            s!(-57, 0),
            s!(-75, 6),
            s!(12, -11),
            s!(-106, 1),
            s!(-118, -9),
            s!(-117, -27),
        ],
        [
            s!(54, -22),
            s!(31, -9),
            s!(44, -17),
            s!(34, -5),
            s!(30, -6),
            s!(25, -2),
            s!(51, -26),
            s!(53, -19),
            s!(36, -7),
            s!(56, -17),
            s!(43, -12),
            s!(40, -6),
            s!(42, -3),
            s!(57, -12),
            s!(70, -15),
            s!(50, -17),
            s!(51, -17),
            s!(48, -7),
            s!(43, -2),
            s!(36, 4),
            s!(44, 3),
            s!(47, -4),
            s!(37, -15),
            s!(50, -14),
            s!(27, -11),
            s!(22, -5),
            s!(33, 3),
            s!(40, 2),
            s!(47, 0),
            s!(29, 3),
            s!(34, -13),
            s!(25, -12),
            s!(0, 4),
            s!(27, 0),
            s!(24, 0),
            s!(30, 8),
            s!(34, 5),
            s!(12, 0),
            s!(41, -11),
            s!(23, -10),
            s!(3, 1),
            s!(10, 0),
            s!(44, -4),
            s!(7, 9),
            s!(54, -5),
            s!(47, 3),
            s!(47, -8),
            s!(48, -10),
            s!(-12, -4),
            s!(8, -2),
            s!(-4, -1),
            s!(3, -10),
            s!(9, -3),
            s!(51, -16),
            s!(-1, 1),
            s!(39, -30),
            s!(-12, -5),
            s!(-37, -11),
            s!(-8, -11),
            s!(-34, -1),
            s!(-75, 1),
            s!(-19, -6),
            s!(-15, -9),
            s!(-45, 2),
        ],
        [
            s!(-5, 0),
            s!(-4, -1),
            s!(1, -2),
            s!(7, -1),
            s!(16, -11),
            s!(13, -7),
            s!(-3, -9),
            s!(15, -29),
            s!(-21, -5),
            s!(-18, -3),
            s!(-22, 2),
            s!(-8, -4),
            s!(-3, -6),
            s!(3, -9),
            s!(24, -16),
            s!(-26, -8),
            s!(-26, -3),
            s!(-23, 0),
            s!(-17, -2),
            s!(-3, -6),
            s!(-1, -7),
            s!(5, -13),
            s!(25, -22),
            s!(11, -19),
            s!(-28, 3),
            s!(-42, 7),
            s!(-37, 9),
            s!(-27, 9),
            s!(-17, 4),
            s!(-11, -2),
            s!(10, -12),
            s!(-2, -13),
            s!(-33, 8),
            s!(-12, 1),
            s!(-6, 6),
            s!(3, 0),
            s!(-9, 2),
            s!(13, -3),
            s!(39, -12),
            s!(22, -10),
            s!(-10, 5),
            s!(-12, 7),
            s!(-15, 6),
            s!(13, 0),
            s!(23, -7),
            s!(49, -12),
            s!(82, -19),
            s!(51, -17),
            s!(-20, 10),
            s!(-37, 23),
            s!(-5, 13),
            s!(24, 3),
            s!(-6, 4),
            s!(52, -8),
            s!(67, -11),
            s!(35, -9),
            s!(3, 11),
            s!(20, 4),
            s!(18, 6),
            s!(17, 1),
            s!(52, -7),
            s!(94, -20),
            s!(84, -18),
            s!(16, 0),
        ],
        [
            s!(26, -36),
            s!(18, -35),
            s!(21, -36),
            s!(30, -51),
            s!(23, -30),
            s!(11, -35),
            s!(4, -34),
            s!(45, -65),
            s!(12, -18),
            s!(16, -24),
            s!(17, -25),
            s!(23, -25),
            s!(25, -29),
            s!(35, -52),
            s!(35, -55),
            s!(25, -28),
            s!(0, -34),
            s!(13, -41),
            s!(1, 5),
            s!(11, -15),
            s!(7, 3),
            s!(13, -4),
            s!(14, 8),
            s!(8, -5),
            s!(0, -14),
            s!(-3, 0),
            s!(0, -1),
            s!(-8, 27),
            s!(2, 17),
            s!(8, 6),
            s!(13, 11),
            s!(5, 5),
            s!(-17, -16),
            s!(-4, 6),
            s!(-13, 5),
            s!(-12, 29),
            s!(-7, 47),
            s!(-1, 47),
            s!(0, 32),
            s!(25, 9),
            s!(-14, -20),
            s!(-17, -5),
            s!(2, 16),
            s!(9, 9),
            s!(30, 42),
            s!(57, 5),
            s!(106, -36),
            s!(68, -19),
            s!(-24, 4),
            s!(-37, 8),
            s!(-36, 23),
            s!(-61, 70),
            s!(-48, 54),
            s!(63, 31),
            s!(-2, 48),
            s!(120, -68),
            s!(-22, -2),
            s!(-21, 13),
            s!(27, -7),
            s!(32, 5),
            s!(84, -27),
            s!(81, -16),
            s!(-17, 6),
            s!(-29, 38),
        ],
        [
            s!(-66, -9),
            s!(7, -12),
            s!(-14, 0),
            s!(-78, 11),
            s!(-17, -5),
            s!(-39, 6),
            s!(22, -21),
            s!(9, -38),
            s!(14, -20),
            s!(-36, 5),
            s!(-48, 17),
            s!(-78, 27),
            s!(-65, 26),
            s!(-49, 25),
            s!(1, 7),
            s!(4, -7),
            s!(-6, -23),
            s!(5, -4),
            s!(-70, 18),
            s!(-84, 27),
            s!(-81, 29),
            s!(-55, 24),
            s!(-21, 10),
            s!(-38, 1),
            s!(6, -30),
            s!(7, -10),
            s!(-9, 6),
            s!(-69, 20),
            s!(-56, 22),
            s!(-69, 22),
            s!(-33, 7),
            s!(-74, 2),
            s!(-8, -24),
            s!(1, -5),
            s!(22, 2),
            s!(-9, 11),
            s!(-24, 11),
            s!(-12, 15),
            s!(10, 7),
            s!(-37, 2),
            s!(35, -19),
            s!(120, -9),
            s!(32, 0),
            s!(59, -2),
            s!(-3, 9),
            s!(63, 10),
            s!(72, 11),
            s!(-3, 5),
            s!(22, -17),
            s!(97, -6),
            s!(66, -4),
            s!(50, -5),
            s!(50, -1),
            s!(86, 5),
            s!(4, 17),
            s!(-23, 6),
            s!(87, -53),
            s!(50, -17),
            s!(94, -23),
            s!(49, -13),
            s!(73, -14),
            s!(75, -7),
            s!(55, -10),
            s!(41, -28),
        ],
    ]),
};
