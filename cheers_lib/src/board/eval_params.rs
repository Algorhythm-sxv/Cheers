#[cfg(feature = "eval-tracing")]
use bytemuck::{Pod, Zeroable};

use super::eval_types::*;

#[cfg_attr(feature = "eval-tracing", derive(Pod, Zeroable))]
#[derive(Copy, Clone, Debug, PartialEq, Eq)]
#[repr(C)]
pub struct EvalParams {
    pub piece_values: PieceValues,

    pub knight_mobility: [EvalScore; 9],
    pub knight_outpost: [EvalScore; 3],
    pub knight_behind_pawn: EvalScore,

    pub bishop_mobility: [EvalScore; 14],
    pub bishop_outpost: [EvalScore; 3],
    pub bishop_behind_pawn: EvalScore,
    pub bishop_pair: EvalScore,

    pub rook_mobility: [EvalScore; 15],
    pub rook_on_open_file: [EvalScore; 3],
    pub rook_queen_file: EvalScore,

    pub queen_mobility: [EvalScore; 28],
    pub queen_discovery_risk: EvalScore,

    pub king_on_open_file: [EvalScore; 3],
    pub king_ring_knight_attacks: EvalScore,
    pub king_ring_bishop_attacks: EvalScore,
    pub king_ring_rook_attacks: EvalScore,
    pub king_ring_queen_attacks: EvalScore,
    pub king_virtual_mobility: [EvalScore; 28],
    pub king_discovery_risk: EvalScore,

    pub pawn_connected: [EvalScore; 3],
    pub pawn_phalanx: [EvalScore; 3],
    pub pawn_isolated: [EvalScore; 2],
    pub pawn_doubled: [EvalScore; 5],
    pub pawn_backward: [EvalScore; 2],

    pub passed_pawn_friendly_king_distance: [EvalScore; 4],
    pub passed_pawn_enemy_king_distance: [EvalScore; 4],
    pub passed_pawn_table: [EvalScore; 64],

    pub piece_tables: PieceTables,
}

#[cfg(feature = "eval-tracing")]
impl EvalParams {
    pub const LEN: usize = std::mem::size_of::<Self>() / std::mem::size_of::<i16>();
    pub fn to_array(&mut self) -> [i16; Self::LEN] {
        let array = &mut bytemuck::cast::<EvalParams, [i16; Self::LEN]>(*self);
        array
            .chunks_exact_mut(2)
            .for_each(|p| EvalScore::convert(p));
        *array
    }
    pub fn as_array(&self) -> &[i16; Self::LEN] {
        bytemuck::cast_ref::<EvalParams, [i16; Self::LEN]>(self)
    }
    pub fn from_array(mut params: [i16; Self::LEN]) -> Self {
        params.chunks_exact_mut(2).for_each(|p| {
            let score = EvalScore::new(p[0], p[1]);
            p[1] = (score.inner() >> 16) as i16;
            p[0] = score.inner() as i16;
        });
        bytemuck::cast::<[i16; Self::LEN], EvalParams>(params)
    }
}

#[cfg_attr(feature = "eval-tracing", derive(Pod, Zeroable))]
#[derive(Clone, Copy)]
#[repr(C)]
pub struct EvalTrace {
    pub pawn_count: [i16; 2],
    pub knight_count: [i16; 2],
    pub bishop_count: [i16; 2],
    pub rook_count: [i16; 2],
    pub queen_count: [i16; 2],
    // pads to the length of PieceValues
    pub king_count: [i16; 2],

    pub knight_mobility: [[i16; 2]; 9],
    pub knight_outpost: [[i16; 2]; 3],
    pub knight_beind_pawn: [i16; 2],

    pub bishop_mobility: [[i16; 2]; 14],
    pub bishop_outpost: [[i16; 2]; 3],
    pub bishop_beind_pawn: [i16; 2],
    pub bishop_pair: [i16; 2],

    pub rook_mobility: [[i16; 2]; 15],
    pub rook_on_open_file: [[i16; 2]; 3],
    pub rook_queen_file: [i16; 2],

    pub queen_mobility: [[i16; 2]; 28],
    pub queen_discovery_risk: [i16; 2],

    pub king_on_open_file: [[i16; 2]; 3],
    pub king_ring_knight_attacks: [i16; 2],
    pub king_ring_bishop_attacks: [i16; 2],
    pub king_ring_rook_attacks: [i16; 2],
    pub king_ring_queen_attacks: [i16; 2],
    pub king_virtual_mobility: [[i16; 2]; 28],
    pub king_discovery_risk: [i16; 2],

    pub pawn_connected: [[i16; 2]; 3],
    pub pawn_phalanx: [[i16; 2]; 3],
    pub pawn_isolated: [[i16; 2]; 2],
    pub pawn_doubled: [[i16; 2]; 5],
    pub pawn_backward: [[i16; 2]; 2],

    pub passed_pawn_friendly_king_distance: [[i16; 2]; 4],
    pub passed_pawn_enemy_king_distance: [[i16; 2]; 4],
    pub passed_pawn_placement: [[i16; 2]; 64],

    pub pawn_placement: [[i16; 2]; 64],
    pub knight_placement: [[i16; 2]; 64],
    pub bishop_placement: [[i16; 2]; 64],
    pub rook_placement: [[i16; 2]; 64],
    pub queen_placement: [[i16; 2]; 64],
    pub king_placement: [[i16; 2]; 64],

    pub turn: i16,
}

#[cfg(feature = "eval-tracing")]
impl EvalTrace {
    pub const LEN: usize = std::mem::size_of::<Self>() / std::mem::size_of::<i16>();
    pub fn new() -> Self {
        bytemuck::cast::<[i16; Self::LEN], Self>([0i16; Self::LEN])
    }
    pub fn to_array(&self) -> [i16; Self::LEN] {
        bytemuck::cast::<Self, [i16; Self::LEN]>(*self)
    }
}

#[cfg(feature = "eval-tracing")]
impl Default for EvalTrace {
    fn default() -> Self {
        Self::new()
    }
}

// static assert that eval params and trace are the same length (plus 1 for turn in trace)
#[cfg(feature = "eval-tracing")]
const _PARAMS_TRACE_LEN_EQ: () = if EvalParams::LEN + 1 == EvalTrace::LEN {
    ()
} else {
    panic!("Eval parameters and trace are not equal length!")
};

pub const CHECKMATE_SCORE: i16 = 30000;
pub const DRAW_SCORE: i16 = 0;

pub static EVAL_PARAMS: EvalParams = EvalParams {
    piece_values: PieceValues([
        s!(48, 110),
        s!(387, 180),
        s!(354, 202),
        s!(464, 339),
        s!(952, 596),
        s!(0, 0),
    ]),
    knight_mobility: [
        s!(-89, -74),
        s!(-64, -36),
        s!(-45, -16),
        s!(-41, 0),
        s!(-28, -5),
        s!(-24, 4),
        s!(-18, 2),
        s!(-10, 4),
        s!(-2, -3),
    ],
    knight_outpost: [s!(-37, -13), s!(-28, -22), s!(-16, -8)],
    knight_behind_pawn: s!(7, 5),
    bishop_mobility: [
        s!(-42, -33),
        s!(-51, -17),
        s!(-36, -13),
        s!(-25, -3),
        s!(-18, 1),
        s!(-11, 7),
        s!(-7, 12),
        s!(-4, 13),
        s!(0, 15),
        s!(3, 12),
        s!(11, 13),
        s!(20, 5),
        s!(27, 14),
        s!(31, 0),
    ],
    bishop_outpost: [s!(-53, -30), s!(-46, -33), s!(-21, -34)],
    bishop_behind_pawn: s!(7, 5),
    bishop_pair: s!(26, 33),
    rook_mobility: [
        s!(-70, -92),
        s!(-58, -43),
        s!(-15, -27),
        s!(-10, -10),
        s!(-10, -6),
        s!(-7, -7),
        s!(-6, -1),
        s!(-3, -1),
        s!(-1, 2),
        s!(3, 1),
        s!(7, 5),
        s!(10, 7),
        s!(15, 10),
        s!(11, 12),
        s!(36, 0),
    ],
    rook_on_open_file: [s!(-22, -11), s!(-12, -2), s!(6, -15)],
    rook_queen_file: s!(1, 10),
    queen_mobility: [
        s!(0, 0),
        s!(-37, -213),
        s!(-110, -30),
        s!(-46, -105),
        s!(-35, -57),
        s!(-27, -76),
        s!(-22, -58),
        s!(-20, -39),
        s!(-19, -16),
        s!(-15, -26),
        s!(-17, 0),
        s!(-14, -2),
        s!(-10, 5),
        s!(-9, 4),
        s!(-7, 9),
        s!(-5, 11),
        s!(-10, 21),
        s!(-3, 18),
        s!(-9, 26),
        s!(-12, 31),
        s!(-1, 24),
        s!(4, 25),
        s!(-8, 26),
        s!(42, -9),
        s!(71, -20),
        s!(25, 1),
        s!(134, -64),
        s!(481, -239),
    ],
    queen_discovery_risk: s!(-14, 16),
    king_on_open_file: [s!(13, 2), s!(0, 14), s!(-22, 7)],
    king_ring_knight_attacks: s!(4, -3),
    king_ring_bishop_attacks: s!(8, -2),
    king_ring_rook_attacks: s!(13, -4),
    king_ring_queen_attacks: s!(9, 1),
    king_virtual_mobility: [
        s!(0, 0),
        s!(693, -241),
        s!(26, -6),
        s!(34, -7),
        s!(33, -10),
        s!(17, 2),
        s!(10, 0),
        s!(0, 0),
        s!(-4, 3),
        s!(-8, 2),
        s!(-10, 2),
        s!(-12, 4),
        s!(-17, 4),
        s!(-21, 5),
        s!(-27, 7),
        s!(-27, 4),
        s!(-40, 6),
        s!(-38, 3),
        s!(-27, 0),
        s!(-12, -6),
        s!(-12, -8),
        s!(-6, -12),
        s!(-7, -16),
        s!(-35, -16),
        s!(-20, -20),
        s!(-17, -25),
        s!(-73, -18),
        s!(-12, -31),
    ],
    king_discovery_risk: s!(-11, -2),
    pawn_connected: [s!(-13, -12), s!(0, -1), s!(13, 3)],
    pawn_phalanx: [s!(0, 3), s!(6, 6), s!(5, -2)],
    pawn_isolated: [s!(7, 9), s!(4, 9)],
    pawn_doubled: [s!(0, -2), s!(0, 2), s!(0, -3), s!(0, -19), s!(0, 459)],
    pawn_backward: [s!(6, 13), s!(0, 10)],
    passed_pawn_friendly_king_distance: [s!(-3, 9), s!(-7, 2), s!(-12, -9), s!(-12, -12)],
    passed_pawn_enemy_king_distance: [s!(5, -30), s!(24, -10), s!(1, 10), s!(-6, 22)],
    passed_pawn_table: [
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(17, -11),
        s!(13, -1),
        s!(12, -19),
        s!(1, -30),
        s!(7, -20),
        s!(14, -21),
        s!(48, -18),
        s!(15, -16),
        s!(22, -5),
        s!(19, 0),
        s!(17, -10),
        s!(-6, -11),
        s!(13, -15),
        s!(16, -5),
        s!(22, 0),
        s!(29, -10),
        s!(22, 14),
        s!(14, 15),
        s!(0, 14),
        s!(3, 10),
        s!(-8, 11),
        s!(-17, 19),
        s!(-38, 30),
        s!(12, 16),
        s!(25, 32),
        s!(24, 38),
        s!(12, 29),
        s!(-2, 32),
        s!(1, 28),
        s!(15, 30),
        s!(10, 40),
        s!(-11, 37),
        s!(36, 76),
        s!(23, 61),
        s!(14, 44),
        s!(16, 26),
        s!(-1, 39),
        s!(-14, 66),
        s!(-27, 63),
        s!(-53, 87),
        s!(54, -9),
        s!(77, -6),
        s!(10, 62),
        s!(32, 2),
        s!(11, -2),
        s!(7, 33),
        s!(3, 74),
        s!(-17, 62),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
    ],
    piece_tables: PieceTables([
        [
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(-3, -67),
            s!(3, -70),
            s!(1, -62),
            s!(5, -62),
            s!(2, -64),
            s!(26, -70),
            s!(27, -79),
            s!(10, -81),
            s!(-7, -74),
            s!(-10, -76),
            s!(-1, -74),
            s!(0, -68),
            s!(1, -70),
            s!(0, -75),
            s!(9, -83),
            s!(0, -82),
            s!(-4, -71),
            s!(-6, -70),
            s!(5, -78),
            s!(14, -81),
            s!(12, -78),
            s!(14, -82),
            s!(2, -78),
            s!(-11, -79),
            s!(5, -59),
            s!(2, -65),
            s!(5, -66),
            s!(18, -74),
            s!(18, -74),
            s!(21, -74),
            s!(2, -68),
            s!(3, -69),
            s!(2, -45),
            s!(5, -34),
            s!(18, -27),
            s!(7, -22),
            s!(33, -40),
            s!(72, -63),
            s!(28, -42),
            s!(25, -57),
            s!(10, 74),
            s!(8, 65),
            s!(22, 3),
            s!(15, 41),
            s!(61, 38),
            s!(63, 10),
            s!(32, 0),
            s!(11, 3),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
        ],
        [
            s!(-36, -8),
            s!(-10, -8),
            s!(-35, 2),
            s!(-23, 8),
            s!(-17, 0),
            s!(-27, 5),
            s!(-14, -8),
            s!(-41, 6),
            s!(-12, -11),
            s!(-23, -1),
            s!(-11, -5),
            s!(-1, 1),
            s!(-1, 0),
            s!(-8, 0),
            s!(-6, -5),
            s!(-3, -8),
            s!(-16, -5),
            s!(-12, 3),
            s!(-9, 1),
            s!(-13, 17),
            s!(-3, 13),
            s!(-2, 1),
            s!(6, -6),
            s!(-11, -8),
            s!(-5, 1),
            s!(-11, 6),
            s!(-5, 16),
            s!(-4, 19),
            s!(2, 20),
            s!(7, 8),
            s!(0, -1),
            s!(-7, 5),
            s!(2, 3),
            s!(1, 8),
            s!(-11, 16),
            s!(19, 21),
            s!(-2, 21),
            s!(9, 18),
            s!(-9, 12),
            s!(19, -4),
            s!(-21, -3),
            s!(-17, 1),
            s!(-17, 21),
            s!(6, 18),
            s!(25, 3),
            s!(52, 0),
            s!(11, -5),
            s!(-19, 1),
            s!(-56, 2),
            s!(-39, 10),
            s!(32, -8),
            s!(-1, 5),
            s!(40, -10),
            s!(28, -11),
            s!(0, -4),
            s!(-8, -13),
            s!(-178, 31),
            s!(-35, -25),
            s!(-51, 3),
            s!(-56, 7),
            s!(1, -2),
            s!(-80, 3),
            s!(-89, -6),
            s!(-100, -18),
        ],
        [
            s!(48, -16),
            s!(27, -3),
            s!(39, -15),
            s!(33, -2),
            s!(28, -3),
            s!(15, 0),
            s!(39, -17),
            s!(52, -14),
            s!(25, -1),
            s!(48, -12),
            s!(40, -8),
            s!(35, -2),
            s!(38, 0),
            s!(45, -6),
            s!(57, -12),
            s!(41, -12),
            s!(45, -12),
            s!(42, -2),
            s!(39, 0),
            s!(34, 5),
            s!(40, 3),
            s!(46, -1),
            s!(38, -11),
            s!(48, -10),
            s!(26, -6),
            s!(22, -3),
            s!(30, 4),
            s!(38, 1),
            s!(44, 2),
            s!(33, 3),
            s!(36, -8),
            s!(22, -6),
            s!(7, 4),
            s!(26, 3),
            s!(23, 3),
            s!(22, 11),
            s!(32, 5),
            s!(14, 3),
            s!(34, -5),
            s!(18, -3),
            s!(12, 2),
            s!(16, 0),
            s!(43, -1),
            s!(7, 10),
            s!(47, -2),
            s!(41, 5),
            s!(37, -2),
            s!(35, -4),
            s!(-1, -2),
            s!(15, 0),
            s!(2, 0),
            s!(16, -7),
            s!(11, 0),
            s!(51, -10),
            s!(4, 3),
            s!(36, -22),
            s!(-3, 0),
            s!(-18, -7),
            s!(2, -7),
            s!(-21, 0),
            s!(-53, 4),
            s!(-2, -3),
            s!(-1, -4),
            s!(-19, 3),
        ],
        [
            s!(-3, -1),
            s!(-2, -4),
            s!(1, -4),
            s!(1, -3),
            s!(3, -9),
            s!(-4, -7),
            s!(-16, -7),
            s!(7, -22),
            s!(-17, -7),
            s!(-12, -6),
            s!(-15, -1),
            s!(-5, -7),
            s!(-3, -9),
            s!(-4, -10),
            s!(6, -14),
            s!(-29, -8),
            s!(-19, -6),
            s!(-15, -4),
            s!(-11, -5),
            s!(-1, -8),
            s!(-2, -9),
            s!(1, -14),
            s!(9, -19),
            s!(2, -17),
            s!(-20, 0),
            s!(-30, 2),
            s!(-28, 4),
            s!(-19, 3),
            s!(-15, 0),
            s!(-14, -4),
            s!(-4, -10),
            s!(-5, -13),
            s!(-24, 3),
            s!(-5, -2),
            s!(-3, 1),
            s!(6, -3),
            s!(-7, 0),
            s!(5, -4),
            s!(12, -8),
            s!(9, -8),
            s!(-4, 1),
            s!(-7, 2),
            s!(-11, 1),
            s!(13, -4),
            s!(20, -8),
            s!(27, -9),
            s!(46, -13),
            s!(23, -11),
            s!(-21, 7),
            s!(-33, 17),
            s!(-11, 10),
            s!(10, 2),
            s!(-16, 3),
            s!(34, -7),
            s!(38, -7),
            s!(17, -7),
            s!(1, 7),
            s!(10, 2),
            s!(6, 5),
            s!(6, 0),
            s!(34, -6),
            s!(68, -17),
            s!(57, -14),
            s!(0, 0),
        ],
        [
            s!(16, -32),
            s!(7, -30),
            s!(9, -28),
            s!(14, -39),
            s!(8, -25),
            s!(-8, -30),
            s!(-9, -30),
            s!(31, -56),
            s!(6, -19),
            s!(9, -24),
            s!(10, -23),
            s!(14, -19),
            s!(16, -23),
            s!(15, -44),
            s!(18, -49),
            s!(12, -24),
            s!(0, -37),
            s!(9, -37),
            s!(-1, 1),
            s!(4, -16),
            s!(2, -1),
            s!(7, -8),
            s!(7, 0),
            s!(4, -14),
            s!(6, -24),
            s!(-7, -3),
            s!(-4, -4),
            s!(-11, 16),
            s!(-1, 8),
            s!(3, -2),
            s!(7, -1),
            s!(3, -10),
            s!(-13, -18),
            s!(-6, 4),
            s!(-17, 2),
            s!(-22, 25),
            s!(-12, 30),
            s!(-7, 28),
            s!(-5, 15),
            s!(10, -5),
            s!(-13, -22),
            s!(-16, -7),
            s!(0, 8),
            s!(-4, 7),
            s!(12, 30),
            s!(19, 5),
            s!(60, -30),
            s!(22, -14),
            s!(-26, 0),
            s!(-35, 0),
            s!(-37, 13),
            s!(-59, 51),
            s!(-57, 39),
            s!(30, 23),
            s!(-12, 32),
            s!(81, -60),
            s!(-26, -6),
            s!(-23, 4),
            s!(20, -17),
            s!(16, -3),
            s!(55, -29),
            s!(41, -11),
            s!(-15, -7),
            s!(-22, 19),
        ],
        [
            s!(-60, -9),
            s!(5, -10),
            s!(-6, 0),
            s!(-33, 7),
            s!(-5, -4),
            s!(-32, 5),
            s!(11, -16),
            s!(-11, -28),
            s!(8, -18),
            s!(-13, 4),
            s!(-19, 14),
            s!(-36, 22),
            s!(-29, 20),
            s!(-21, 18),
            s!(15, 3),
            s!(1, -9),
            s!(5, -22),
            s!(20, -2),
            s!(-31, 19),
            s!(-39, 27),
            s!(-39, 27),
            s!(-25, 21),
            s!(0, 5),
            s!(-26, -3),
            s!(21, -28),
            s!(28, -7),
            s!(10, 12),
            s!(-32, 28),
            s!(-26, 28),
            s!(-42, 22),
            s!(-13, 5),
            s!(-52, -3),
            s!(4, -24),
            s!(18, -1),
            s!(34, 10),
            s!(12, 23),
            s!(-1, 23),
            s!(2, 19),
            s!(20, 6),
            s!(-20, -3),
            s!(34, -20),
            s!(113, -6),
            s!(40, 9),
            s!(65, 7),
            s!(11, 17),
            s!(65, 16),
            s!(73, 9),
            s!(6, -1),
            s!(16, -17),
            s!(89, -3),
            s!(69, -1),
            s!(52, 0),
            s!(56, 1),
            s!(83, 5),
            s!(20, 13),
            s!(-17, 0),
            s!(67, -48),
            s!(46, -18),
            s!(78, -22),
            s!(46, -12),
            s!(69, -14),
            s!(69, -11),
            s!(43, -13),
            s!(19, -28),
        ],
    ]),
};
