#[cfg(feature = "eval-tracing")]
use bytemuck::{Pod, Zeroable};

use super::eval_types::*;

#[cfg_attr(feature = "eval-tracing", derive(Pod, Zeroable))]
#[derive(Copy, Clone, Debug, PartialEq, Eq)]
#[repr(C)]
pub struct EvalParams {
    pub piece_values: PieceValues,

    pub knight_mobility: [EvalScore; 9],

    pub bishop_mobility: [EvalScore; 14],

    pub rook_mobility: [EvalScore; 15],

    pub queen_mobility: [EvalScore; 28],

    pub pawn_connected: [EvalScore; 3],
    pub pawn_phalanx: [EvalScore; 3],

    pub passed_pawn_table: [EvalScore; 64],

    pub piece_tables: PieceTables,
}

#[cfg(feature = "eval-tracing")]
impl EvalParams {
    pub const LEN: usize = std::mem::size_of::<Self>() / std::mem::size_of::<i16>();
    pub fn to_array(&mut self) -> [i16; Self::LEN] {
        let array = &mut bytemuck::cast::<EvalParams, [i16; Self::LEN]>(*self);
        array
            .chunks_exact_mut(2)
            .for_each(|p| EvalScore::convert(p));
        *array
    }
    pub fn as_array(&self) -> &[i16; Self::LEN] {
        bytemuck::cast_ref::<EvalParams, [i16; Self::LEN]>(self)
    }
    pub fn from_array(mut params: [i16; Self::LEN]) -> Self {
        params.chunks_exact_mut(2).for_each(|p| {
            let score = EvalScore::new(p[0], p[1]);
            p[1] = (score.inner() >> 16) as i16;
            p[0] = score.inner() as i16;
        });
        bytemuck::cast::<[i16; Self::LEN], EvalParams>(params)
    }
}

#[cfg_attr(feature = "eval-tracing", derive(Pod, Zeroable))]
#[derive(Clone, Copy)]
#[repr(C)]
pub struct EvalTrace {
    pub pawn_count: [i16; 2],
    pub knight_count: [i16; 2],
    pub bishop_count: [i16; 2],
    pub rook_count: [i16; 2],
    pub queen_count: [i16; 2],
    // pads to the length of PieceValues
    pub king_count: [i16; 2],

    pub knight_mobility: [[i16; 2]; 9],
    pub bishop_mobility: [[i16; 2]; 14],
    pub rook_mobility: [[i16; 2]; 15],
    pub queen_mobility: [[i16; 2]; 28],

    pub pawn_connected: [[i16; 2]; 3],
    pub pawn_phalanx: [[i16; 2]; 3],

    pub passed_pawn_placement: [[i16; 2]; 64],

    pub pawn_placement: [[i16; 2]; 64],
    pub knight_placement: [[i16; 2]; 64],
    pub bishop_placement: [[i16; 2]; 64],
    pub rook_placement: [[i16; 2]; 64],
    pub queen_placement: [[i16; 2]; 64],
    pub king_placement: [[i16; 2]; 64],

    pub turn: i16,
}

#[cfg(feature = "eval-tracing")]
impl EvalTrace {
    pub const LEN: usize = std::mem::size_of::<Self>() / std::mem::size_of::<i16>();
    pub fn new() -> Self {
        bytemuck::cast::<[i16; Self::LEN], Self>([0i16; Self::LEN])
    }
    pub fn to_array(&self) -> [i16; Self::LEN] {
        bytemuck::cast::<Self, [i16; Self::LEN]>(*self)
    }
}

#[cfg(feature = "eval-tracing")]
impl Default for EvalTrace {
    fn default() -> Self {
        Self::new()
    }
}

// static assert that eval params and trace are the same length (plus 1 for turn in trace)
#[cfg(feature = "eval-tracing")]
const _PARAMS_TRACE_LEN_EQ: () = if EvalParams::LEN + 1 == EvalTrace::LEN {
    ()
} else {
    panic!("Eval parameters and trace are not equal length!")
};

pub const CHECKMATE_SCORE: i16 = 30000;
pub const DRAW_SCORE: i16 = 0;

pub static EVAL_PARAMS: EvalParams = EvalParams {
    piece_values: PieceValues([
        s!(91, 117),
        s!(415, 215),
        s!(430, 238),
        s!(580, 419),
        s!(1232, 768),
        s!(0, 0),
    ]),
    knight_mobility: [
        s!(-92, -84),
        s!(-54, -40),
        s!(-27, -15),
        s!(-23, 5),
        s!(-5, -2),
        s!(0, 10),
        s!(7, 7),
        s!(17, 7),
        s!(29, -4),
    ],
    bishop_mobility: [
        s!(-40, -49),
        s!(-55, -34),
        s!(-35, -31),
        s!(-22, -15),
        s!(-13, -8),
        s!(-4, 0),
        s!(0, 5),
        s!(6, 5),
        s!(12, 8),
        s!(15, 5),
        s!(24, 6),
        s!(40, -5),
        s!(45, 5),
        s!(48, -11),
    ],
    rook_mobility: [
        s!(-94, -66),
        s!(-78, -49),
        s!(-23, -27),
        s!(-15, -9),
        s!(-11, -5),
        s!(-4, -6),
        s!(-1, 1),
        s!(8, 1),
        s!(14, 5),
        s!(26, 3),
        s!(35, 7),
        s!(44, 8),
        s!(52, 12),
        s!(54, 13),
        s!(86, -1),
    ],
    queen_mobility: [
        s!(0, 0),
        s!(-85, -32),
        s!(-151, -19),
        s!(-68, -122),
        s!(-47, -66),
        s!(-38, -94),
        s!(-31, -64),
        s!(-29, -40),
        s!(-28, -7),
        s!(-21, -20),
        s!(-21, 11),
        s!(-17, 8),
        s!(-9, 17),
        s!(-7, 17),
        s!(-3, 24),
        s!(-2, 28),
        s!(-6, 42),
        s!(3, 36),
        s!(-4, 49),
        s!(-7, 56),
        s!(9, 47),
        s!(16, 52),
        s!(1, 53),
        s!(66, 11),
        s!(97, 2),
        s!(40, 33),
        s!(163, -39),
        s!(208, -63),
    ],
    pawn_connected: [s!(-13, -16), s!(9, 0), s!(29, 9)],
    pawn_phalanx: [s!(-6, -3), s!(5, 3), s!(6, -8)],
    passed_pawn_table: [
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(-1, 1),
        s!(-10, 19),
        s!(0, -2),
        s!(-13, -14),
        s!(-4, 9),
        s!(17, 0),
        s!(64, 2),
        s!(1, 5),
        s!(2, 9),
        s!(5, 16),
        s!(1, 7),
        s!(-29, 7),
        s!(5, 5),
        s!(33, 10),
        s!(30, 19),
        s!(29, 6),
        s!(6, 31),
        s!(-2, 31),
        s!(-18, 29),
        s!(-19, 27),
        s!(-23, 26),
        s!(-31, 35),
        s!(-64, 51),
        s!(-1, 33),
        s!(8, 53),
        s!(12, 57),
        s!(0, 42),
        s!(-17, 40),
        s!(-13, 35),
        s!(19, 38),
        s!(-8, 57),
        s!(-29, 53),
        s!(24, 108),
        s!(16, 83),
        s!(9, 53),
        s!(14, 23),
        s!(-2, 36),
        s!(-3, 76),
        s!(-47, 80),
        s!(-83, 113),
        s!(57, -3),
        s!(89, -8),
        s!(8, 71),
        s!(21, -5),
        s!(0, -15),
        s!(-2, 31),
        s!(-5, 93),
        s!(-57, 65),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
    ],
    piece_tables: PieceTables([
        [
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(-16, -22),
            s!(1, -28),
            s!(-3, -19),
            s!(2, -16),
            s!(8, -26),
            s!(33, -29),
            s!(44, -43),
            s!(6, -41),
            s!(-24, -29),
            s!(-20, -35),
            s!(-11, -33),
            s!(-11, -25),
            s!(2, -32),
            s!(-15, -34),
            s!(15, -48),
            s!(-9, -42),
            s!(-22, -25),
            s!(-14, -28),
            s!(-3, -39),
            s!(5, -42),
            s!(11, -41),
            s!(5, -46),
            s!(3, -42),
            s!(-25, -39),
            s!(-7, -11),
            s!(-7, -19),
            s!(-5, -23),
            s!(6, -33),
            s!(15, -35),
            s!(6, -34),
            s!(2, -28),
            s!(-9, -26),
            s!(-15, 7),
            s!(-6, 20),
            s!(4, 30),
            s!(-7, 35),
            s!(17, 12),
            s!(64, -18),
            s!(19, 6),
            s!(12, -7),
            s!(-15, 161),
            s!(-11, 154),
            s!(8, 73),
            s!(6, 118),
            s!(52, 117),
            s!(55, 83),
            s!(11, 65),
            s!(-2, 91),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
        ],
        [
            s!(-31, -21),
            s!(10, -16),
            s!(-22, -7),
            s!(-8, -1),
            s!(-3, -6),
            s!(-3, 0),
            s!(4, -19),
            s!(-40, 0),
            s!(5, -24),
            s!(-10, -11),
            s!(1, -14),
            s!(16, -6),
            s!(17, -7),
            s!(14, -8),
            s!(19, -14),
            s!(17, -19),
            s!(-4, -15),
            s!(-4, -1),
            s!(4, -1),
            s!(0, 17),
            s!(12, 14),
            s!(10, -2),
            s!(22, -14),
            s!(-2, -18),
            s!(7, -6),
            s!(2, 0),
            s!(6, 18),
            s!(10, 20),
            s!(14, 22),
            s!(23, 7),
            s!(11, -7),
            s!(3, 0),
            s!(21, -7),
            s!(14, 7),
            s!(3, 16),
            s!(45, 19),
            s!(17, 18),
            s!(28, 16),
            s!(7, 6),
            s!(45, -15),
            s!(-5, -17),
            s!(10, -12),
            s!(0, 18),
            s!(38, 11),
            s!(62, -10),
            s!(92, -8),
            s!(47, -21),
            s!(2, -11),
            s!(-54, -11),
            s!(-31, -2),
            s!(62, -25),
            s!(20, -9),
            s!(73, -30),
            s!(59, -30),
            s!(11, -18),
            s!(11, -34),
            s!(-211, 20),
            s!(-39, -43),
            s!(-51, -9),
            s!(-72, 0),
            s!(20, -21),
            s!(-102, -9),
            s!(-118, -18),
            s!(-110, -40),
        ],
        [
            s!(55, -25),
            s!(30, -11),
            s!(47, -19),
            s!(36, -7),
            s!(31, -8),
            s!(24, -3),
            s!(52, -30),
            s!(53, -21),
            s!(38, -11),
            s!(58, -21),
            s!(43, -16),
            s!(41, -8),
            s!(42, -6),
            s!(60, -14),
            s!(72, -18),
            s!(51, -21),
            s!(55, -21),
            s!(48, -9),
            s!(44, -5),
            s!(37, 2),
            s!(44, 2),
            s!(48, -6),
            s!(36, -18),
            s!(51, -18),
            s!(28, -15),
            s!(24, -7),
            s!(33, 1),
            s!(44, 0),
            s!(49, -1),
            s!(29, 1),
            s!(32, -15),
            s!(25, -14),
            s!(0, 1),
            s!(27, -1),
            s!(29, -1),
            s!(38, 5),
            s!(37, 3),
            s!(12, -1),
            s!(40, -13),
            s!(22, -12),
            s!(7, -2),
            s!(19, -6),
            s!(52, -8),
            s!(17, 4),
            s!(63, -10),
            s!(55, 0),
            s!(51, -10),
            s!(56, -14),
            s!(-8, -9),
            s!(16, -9),
            s!(-1, -6),
            s!(7, -15),
            s!(15, -8),
            s!(64, -23),
            s!(4, -4),
            s!(43, -35),
            s!(-11, -10),
            s!(-35, -18),
            s!(-7, -16),
            s!(-40, -4),
            s!(-80, -1),
            s!(-18, -9),
            s!(-8, -15),
            s!(-43, -1),
        ],
        [
            s!(-11, 0),
            s!(-4, 1),
            s!(10, -3),
            s!(16, -1),
            s!(25, -11),
            s!(9, -6),
            s!(-5, -6),
            s!(11, -31),
            s!(-27, -1),
            s!(-16, -2),
            s!(-16, 2),
            s!(-3, -3),
            s!(2, -7),
            s!(1, -6),
            s!(24, -15),
            s!(-32, -6),
            s!(-32, -1),
            s!(-21, -1),
            s!(-12, -2),
            s!(3, -7),
            s!(1, -5),
            s!(0, -10),
            s!(23, -22),
            s!(8, -18),
            s!(-32, 6),
            s!(-39, 7),
            s!(-33, 10),
            s!(-20, 9),
            s!(-13, 5),
            s!(-14, 1),
            s!(10, -10),
            s!(-6, -10),
            s!(-33, 10),
            s!(-8, 2),
            s!(6, 4),
            s!(15, -1),
            s!(1, 1),
            s!(16, -1),
            s!(40, -10),
            s!(22, -8),
            s!(-5, 7),
            s!(-1, 6),
            s!(-3, 4),
            s!(31, -3),
            s!(39, -9),
            s!(56, -11),
            s!(90, -17),
            s!(59, -16),
            s!(-12, 10),
            s!(-26, 22),
            s!(4, 13),
            s!(37, 1),
            s!(4, 3),
            s!(62, -8),
            s!(80, -12),
            s!(36, -8),
            s!(12, 12),
            s!(26, 5),
            s!(27, 6),
            s!(20, 3),
            s!(58, -6),
            s!(98, -19),
            s!(87, -18),
            s!(11, 2),
        ],
        [
            s!(26, -38),
            s!(22, -41),
            s!(26, -41),
            s!(34, -53),
            s!(27, -34),
            s!(11, -37),
            s!(0, -35),
            s!(47, -69),
            s!(12, -19),
            s!(14, -23),
            s!(16, -25),
            s!(23, -26),
            s!(26, -30),
            s!(38, -57),
            s!(33, -55),
            s!(29, -32),
            s!(0, -36),
            s!(13, -43),
            s!(0, 5),
            s!(11, -16),
            s!(6, 4),
            s!(13, -3),
            s!(14, 7),
            s!(8, -6),
            s!(-1, -14),
            s!(-4, 0),
            s!(-1, -1),
            s!(-8, 28),
            s!(2, 18),
            s!(7, 7),
            s!(11, 14),
            s!(2, 9),
            s!(-19, -12),
            s!(-5, 6),
            s!(-14, 5),
            s!(-13, 31),
            s!(-10, 51),
            s!(-3, 54),
            s!(-2, 38),
            s!(25, 14),
            s!(-15, -18),
            s!(-18, -4),
            s!(2, 18),
            s!(10, 11),
            s!(31, 45),
            s!(61, 6),
            s!(111, -34),
            s!(71, -17),
            s!(-22, 5),
            s!(-41, 9),
            s!(-39, 25),
            s!(-65, 75),
            s!(-51, 57),
            s!(77, 29),
            s!(0, 48),
            s!(130, -71),
            s!(-18, -6),
            s!(-23, 13),
            s!(27, -7),
            s!(26, 9),
            s!(83, -24),
            s!(79, -13),
            s!(-27, 12),
            s!(-26, 37),
        ],
        [
            s!(-70, -19),
            s!(7, -19),
            s!(-13, -4),
            s!(-82, 4),
            s!(-16, -12),
            s!(-40, 0),
            s!(24, -29),
            s!(8, -49),
            s!(12, -23),
            s!(-45, 6),
            s!(-59, 20),
            s!(-88, 30),
            s!(-76, 29),
            s!(-58, 27),
            s!(-4, 7),
            s!(0, -11),
            s!(-5, -23),
            s!(-1, 0),
            s!(-81, 26),
            s!(-94, 36),
            s!(-98, 40),
            s!(-72, 34),
            s!(-34, 17),
            s!(-50, 5),
            s!(21, -30),
            s!(10, -3),
            s!(-1, 16),
            s!(-70, 32),
            s!(-62, 35),
            s!(-83, 37),
            s!(-45, 20),
            s!(-86, 10),
            s!(0, -21),
            s!(9, 1),
            s!(32, 10),
            s!(-1, 20),
            s!(-23, 23),
            s!(-11, 28),
            s!(10, 19),
            s!(-46, 11),
            s!(49, -20),
            s!(136, -5),
            s!(41, 7),
            s!(70, 4),
            s!(8, 17),
            s!(75, 19),
            s!(82, 20),
            s!(-8, 11),
            s!(43, -24),
            s!(117, -8),
            s!(80, -4),
            s!(56, -2),
            s!(63, 1),
            s!(107, 9),
            s!(14, 20),
            s!(-18, 7),
            s!(114, -64),
            s!(63, -23),
            s!(108, -29),
            s!(76, -19),
            s!(99, -20),
            s!(94, -9),
            s!(55, -10),
            s!(57, -35),
        ],
    ]),
};
