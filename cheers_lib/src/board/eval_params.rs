#[cfg(feature = "eval-tracing")]
use bytemuck::{Pod, Zeroable};

use super::eval_types::*;

#[cfg_attr(feature = "eval-tracing", derive(Pod, Zeroable))]
#[derive(Copy, Clone, Debug, PartialEq, Eq)]
#[repr(C)]
pub struct EvalParams {
    pub piece_values: PieceValues,

    pub knight_mobility: [EvalScore; 9],
    pub knight_outpost: [EvalScore; 3],

    pub bishop_mobility: [EvalScore; 14],
    pub bishop_outpost: [EvalScore; 3],

    pub rook_mobility: [EvalScore; 15],
    pub rook_on_open_file: [EvalScore; 3],

    pub queen_mobility: [EvalScore; 28],
    pub queen_discovery_risk: EvalScore,

    pub king_on_open_file: [EvalScore; 3],
    pub king_ring_attacks: [EvalScore; 16],
    pub king_virtual_mobility: [EvalScore; 28],

    pub pawn_connected: [EvalScore; 3],
    pub pawn_phalanx: [EvalScore; 3],
    pub pawn_isolated: [EvalScore; 2],
    pub pawn_doubled: [EvalScore; 6],
    pub pawn_backward: [EvalScore; 2],

    pub passed_pawn_friendly_king_distance: [EvalScore; 4],
    pub passed_pawn_enemy_king_distance: [EvalScore; 4],
    pub passed_pawn_table: [EvalScore; 64],

    pub piece_tables: PieceTables,
}

#[cfg(feature = "eval-tracing")]
impl EvalParams {
    pub const LEN: usize = std::mem::size_of::<Self>() / std::mem::size_of::<i16>();
    pub fn to_array(&mut self) -> [i16; Self::LEN] {
        let array = &mut bytemuck::cast::<EvalParams, [i16; Self::LEN]>(*self);
        array
            .chunks_exact_mut(2)
            .for_each(|p| EvalScore::convert(p));
        *array
    }
    pub fn as_array(&self) -> &[i16; Self::LEN] {
        bytemuck::cast_ref::<EvalParams, [i16; Self::LEN]>(self)
    }
    pub fn from_array(mut params: [i16; Self::LEN]) -> Self {
        params.chunks_exact_mut(2).for_each(|p| {
            let score = EvalScore::new(p[0], p[1]);
            p[1] = (score.inner() >> 16) as i16;
            p[0] = score.inner() as i16;
        });
        bytemuck::cast::<[i16; Self::LEN], EvalParams>(params)
    }
}

#[cfg_attr(feature = "eval-tracing", derive(Pod, Zeroable))]
#[derive(Clone, Copy)]
#[repr(C)]
pub struct EvalTrace {
    pub pawn_count: [i16; 2],
    pub knight_count: [i16; 2],
    pub bishop_count: [i16; 2],
    pub rook_count: [i16; 2],
    pub queen_count: [i16; 2],
    // pads to the length of PieceValues
    pub king_count: [i16; 2],

    pub knight_mobility: [[i16; 2]; 9],
    pub knight_outpost: [[i16; 2]; 3],

    pub bishop_mobility: [[i16; 2]; 14],
    pub bishop_outpost: [[i16; 2]; 3],

    pub rook_mobility: [[i16; 2]; 15],
    pub rook_on_open_file: [[i16; 2]; 3],

    pub queen_mobility: [[i16; 2]; 28],
    pub queen_discovery_risk: [i16; 2],

    pub king_on_open_file: [[i16; 2]; 3],
    pub king_ring_attacks: [[i16; 2]; 16],
    pub king_virtual_mobility: [[i16; 2]; 28],

    pub pawn_connected: [[i16; 2]; 3],
    pub pawn_phalanx: [[i16; 2]; 3],
    pub pawn_isolated: [[i16; 2]; 2],
    pub pawn_doubled: [[i16; 2]; 6],
    pub pawn_backward: [[i16; 2]; 2],

    pub passed_pawn_friendly_king_distance: [[i16; 2]; 4],
    pub passed_pawn_enemy_king_distance: [[i16; 2]; 4],
    pub passed_pawn_placement: [[i16; 2]; 64],

    pub pawn_placement: [[i16; 2]; 64],
    pub knight_placement: [[i16; 2]; 64],
    pub bishop_placement: [[i16; 2]; 64],
    pub rook_placement: [[i16; 2]; 64],
    pub queen_placement: [[i16; 2]; 64],
    pub king_placement: [[i16; 2]; 64],

    pub turn: i16,
}

#[cfg(feature = "eval-tracing")]
impl EvalTrace {
    pub const LEN: usize = std::mem::size_of::<Self>() / std::mem::size_of::<i16>();
    pub fn new() -> Self {
        bytemuck::cast::<[i16; Self::LEN], Self>([0i16; Self::LEN])
    }
    pub fn to_array(&self) -> [i16; Self::LEN] {
        bytemuck::cast::<Self, [i16; Self::LEN]>(*self)
    }
}

#[cfg(feature = "eval-tracing")]
impl Default for EvalTrace {
    fn default() -> Self {
        Self::new()
    }
}

// static assert that eval params and trace are the same length (plus 1 for turn in trace)
#[cfg(feature = "eval-tracing")]
const _PARAMS_TRACE_LEN_EQ: () = if EvalParams::LEN + 1 == EvalTrace::LEN {
    ()
} else {
    panic!("Eval parameters and trace are not equal length!")
};

pub const CHECKMATE_SCORE: i16 = 30000;
pub const DRAW_SCORE: i16 = 0;

pub static EVAL_PARAMS: EvalParams = EvalParams {
    piece_values: PieceValues([
        s!(50, 113),
        s!(399, 189),
        s!(381, 211),
        s!(503, 363),
        s!(1032, 663),
        s!(0, 0),
    ]),
    knight_mobility: [
        s!(-94, -80),
        s!(-66, -38),
        s!(-45, -15),
        s!(-41, 2),
        s!(-27, -2),
        s!(-23, 8),
        s!(-16, 5),
        s!(-7, 7),
        s!(1, -1),
    ],
    knight_outpost: [s!(-22, -9), s!(-12, -19), s!(0, -3)],
    bishop_mobility: [
        s!(-37, -30),
        s!(-46, -13),
        s!(-29, -12),
        s!(-17, 0),
        s!(-9, 4),
        s!(-2, 11),
        s!(1, 17),
        s!(5, 17),
        s!(10, 20),
        s!(14, 17),
        s!(22, 18),
        s!(32, 9),
        s!(35, 19),
        s!(39, 3),
    ],
    bishop_outpost: [s!(-35, -23), s!(-29, -27), s!(-2, -29)],
    rook_mobility: [
        s!(-71, -106),
        s!(-67, -40),
        s!(-17, -24),
        s!(-13, -6),
        s!(-12, -3),
        s!(-8, -4),
        s!(-7, 2),
        s!(-2, 2),
        s!(0, 6),
        s!(5, 5),
        s!(8, 9),
        s!(11, 11),
        s!(17, 15),
        s!(15, 16),
        s!(42, 2),
    ],
    rook_on_open_file: [s!(-15, -8), s!(-3, 2), s!(15, -12)],
    queen_mobility: [
        s!(0, 0),
        s!(-66, -75),
        s!(-127, -5),
        s!(-50, -118),
        s!(-35, -56),
        s!(-28, -74),
        s!(-23, -50),
        s!(-21, -29),
        s!(-20, -3),
        s!(-15, -14),
        s!(-16, 13),
        s!(-13, 10),
        s!(-8, 18),
        s!(-6, 17),
        s!(-4, 23),
        s!(-2, 27),
        s!(-6, 38),
        s!(1, 33),
        s!(-6, 44),
        s!(-9, 49),
        s!(2, 42),
        s!(10, 43),
        s!(-4, 46),
        s!(51, 7),
        s!(97, -11),
        s!(20, 26),
        s!(136, -43),
        s!(463, -205),
    ],
    queen_discovery_risk: s!(-9, -4),
    king_on_open_file: [s!(14, 2), s!(0, 15), s!(-26, 7)],
    king_ring_attacks: [
        s!(49, -14),
        s!(44, -10),
        s!(34, -5),
        s!(18, -7),
        s!(-26, 12),
        s!(-124, 58),
        s!(-157, 71),
        s!(-191, 83),
        s!(-314, 92),
        s!(-307, 78),
        s!(11, 143),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
    ],
    king_virtual_mobility: [
        s!(0, 0),
        s!(23, 47),
        s!(29, -2),
        s!(37, -6),
        s!(35, -8),
        s!(17, 6),
        s!(11, 1),
        s!(1, 2),
        s!(-4, 6),
        s!(-8, 5),
        s!(-9, 4),
        s!(-11, 6),
        s!(-15, 6),
        s!(-20, 7),
        s!(-25, 9),
        s!(-25, 6),
        s!(-38, 8),
        s!(-35, 5),
        s!(-23, 0),
        s!(-8, -5),
        s!(-8, -7),
        s!(0, -11),
        s!(-1, -16),
        s!(-34, -15),
        s!(-18, -19),
        s!(-17, -24),
        s!(-79, -17),
        s!(-14, -31),
    ],
    pawn_connected: [s!(-10, -13), s!(4, -2), s!(18, 3)],
    pawn_phalanx: [s!(0, 2), s!(6, 5), s!(7, -4)],
    pawn_isolated: [s!(10, 10), s!(6, 10)],
    pawn_doubled: [
        s!(0, 3),
        s!(0, -7),
        s!(0, -29),
        s!(0, 87),
        s!(0, 0),
        s!(0, 0),
    ],
    pawn_backward: [s!(5, 14), s!(-1, 10)],
    passed_pawn_friendly_king_distance: [s!(-5, 11), s!(-7, 3), s!(-12, -9), s!(-13, -13)],
    passed_pawn_enemy_king_distance: [s!(7, -34), s!(25, -12), s!(2, 10), s!(-5, 24)],
    passed_pawn_table: [
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(18, -12),
        s!(13, -1),
        s!(11, -21),
        s!(0, -35),
        s!(8, -22),
        s!(16, -24),
        s!(49, -19),
        s!(16, -17),
        s!(22, -5),
        s!(21, 0),
        s!(18, -11),
        s!(-8, -12),
        s!(12, -16),
        s!(17, -6),
        s!(21, 0),
        s!(29, -10),
        s!(24, 16),
        s!(15, 16),
        s!(0, 16),
        s!(3, 11),
        s!(-10, 12),
        s!(-22, 22),
        s!(-40, 33),
        s!(12, 18),
        s!(28, 36),
        s!(26, 42),
        s!(12, 32),
        s!(-2, 35),
        s!(2, 31),
        s!(19, 33),
        s!(14, 44),
        s!(-12, 41),
        s!(39, 84),
        s!(24, 68),
        s!(13, 49),
        s!(17, 28),
        s!(-2, 43),
        s!(-17, 74),
        s!(-32, 70),
        s!(-58, 95),
        s!(68, -16),
        s!(86, -7),
        s!(12, 66),
        s!(31, 0),
        s!(14, -3),
        s!(11, 36),
        s!(7, 81),
        s!(-23, 65),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
    ],
    piece_tables: PieceTables([
        [
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(-3, -60),
            s!(5, -63),
            s!(4, -55),
            s!(6, -52),
            s!(4, -56),
            s!(30, -63),
            s!(31, -73),
            s!(11, -74),
            s!(-7, -66),
            s!(-10, -69),
            s!(-1, -66),
            s!(0, -60),
            s!(4, -63),
            s!(0, -67),
            s!(12, -77),
            s!(0, -75),
            s!(-4, -63),
            s!(-8, -62),
            s!(7, -72),
            s!(15, -74),
            s!(13, -71),
            s!(18, -76),
            s!(1, -71),
            s!(-13, -72),
            s!(6, -51),
            s!(1, -56),
            s!(4, -58),
            s!(18, -66),
            s!(19, -67),
            s!(22, -67),
            s!(1, -60),
            s!(3, -62),
            s!(2, -35),
            s!(5, -23),
            s!(18, -14),
            s!(8, -8),
            s!(36, -28),
            s!(79, -54),
            s!(33, -32),
            s!(26, -47),
            s!(0, 104),
            s!(5, 88),
            s!(21, 20),
            s!(19, 62),
            s!(66, 57),
            s!(68, 27),
            s!(36, 14),
            s!(19, 21),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
        ],
        [
            s!(-31, -7),
            s!(0, -5),
            s!(-27, 3),
            s!(-18, 9),
            s!(-12, 1),
            s!(-15, 7),
            s!(-5, -6),
            s!(-37, 11),
            s!(-3, -9),
            s!(-14, 0),
            s!(-3, -3),
            s!(5, 3),
            s!(7, 2),
            s!(0, 1),
            s!(7, -3),
            s!(7, -5),
            s!(-12, -2),
            s!(-7, 6),
            s!(-2, 4),
            s!(-5, 21),
            s!(4, 17),
            s!(3, 3),
            s!(13, -5),
            s!(-7, -5),
            s!(0, 3),
            s!(-4, 8),
            s!(0, 21),
            s!(0, 23),
            s!(7, 25),
            s!(14, 11),
            s!(1, 1),
            s!(-2, 8),
            s!(8, 5),
            s!(7, 10),
            s!(-6, 20),
            s!(25, 25),
            s!(0, 25),
            s!(14, 22),
            s!(-10, 15),
            s!(27, -2),
            s!(-19, 0),
            s!(-11, 3),
            s!(-18, 27),
            s!(11, 22),
            s!(24, 8),
            s!(58, 4),
            s!(11, -2),
            s!(-21, 4),
            s!(-58, 5),
            s!(-40, 13),
            s!(37, -6),
            s!(1, 8),
            s!(44, -8),
            s!(32, -9),
            s!(2, -1),
            s!(-7, -13),
            s!(-198, 36),
            s!(-38, -25),
            s!(-54, 6),
            s!(-65, 12),
            s!(-1, 0),
            s!(-87, 6),
            s!(-90, -5),
            s!(-107, -19),
        ],
        [
            s!(59, -14),
            s!(38, -2),
            s!(51, -13),
            s!(40, 0),
            s!(35, -2),
            s!(28, 3),
            s!(51, -18),
            s!(63, -14),
            s!(41, 0),
            s!(62, -11),
            s!(50, -7),
            s!(46, 0),
            s!(48, 0),
            s!(56, -6),
            s!(73, -11),
            s!(57, -10),
            s!(56, -10),
            s!(54, -1),
            s!(49, 1),
            s!(45, 7),
            s!(51, 6),
            s!(55, -1),
            s!(46, -10),
            s!(57, -8),
            s!(37, -6),
            s!(29, 0),
            s!(41, 7),
            s!(47, 5),
            s!(53, 5),
            s!(40, 6),
            s!(42, -7),
            s!(34, -5),
            s!(12, 7),
            s!(37, 3),
            s!(30, 6),
            s!(37, 12),
            s!(39, 10),
            s!(18, 6),
            s!(48, -6),
            s!(27, -2),
            s!(14, 4),
            s!(22, 2),
            s!(52, 0),
            s!(13, 14),
            s!(58, 0),
            s!(50, 9),
            s!(44, 0),
            s!(44, -2),
            s!(1, 0),
            s!(20, 1),
            s!(9, 2),
            s!(19, -5),
            s!(16, 3),
            s!(60, -9),
            s!(9, 6),
            s!(45, -22),
            s!(-1, 0),
            s!(-22, -4),
            s!(4, -4),
            s!(-17, 3),
            s!(-56, 7),
            s!(1, -1),
            s!(22, -6),
            s!(-20, 6),
        ],
        [
            s!(-1, 1),
            s!(0, -1),
            s!(5, -2),
            s!(6, -2),
            s!(7, -8),
            s!(0, -5),
            s!(-12, -5),
            s!(11, -22),
            s!(-16, -4),
            s!(-11, -4),
            s!(-13, 0),
            s!(-2, -5),
            s!(0, -7),
            s!(-1, -7),
            s!(14, -13),
            s!(-28, -5),
            s!(-19, -3),
            s!(-15, -1),
            s!(-10, -2),
            s!(2, -7),
            s!(1, -7),
            s!(5, -12),
            s!(17, -19),
            s!(9, -17),
            s!(-21, 2),
            s!(-32, 6),
            s!(-28, 8),
            s!(-18, 6),
            s!(-14, 4),
            s!(-11, 0),
            s!(4, -8),
            s!(0, -12),
            s!(-25, 7),
            s!(-6, 1),
            s!(0, 4),
            s!(9, 0),
            s!(-6, 2),
            s!(11, -1),
            s!(20, -6),
            s!(15, -7),
            s!(-5, 5),
            s!(-5, 6),
            s!(-11, 5),
            s!(16, 0),
            s!(24, -5),
            s!(34, -6),
            s!(63, -13),
            s!(30, -10),
            s!(-16, 10),
            s!(-32, 22),
            s!(-5, 13),
            s!(19, 5),
            s!(-10, 6),
            s!(40, -4),
            s!(46, -5),
            s!(21, -4),
            s!(4, 11),
            s!(17, 4),
            s!(14, 7),
            s!(13, 3),
            s!(45, -4),
            s!(81, -16),
            s!(71, -13),
            s!(6, 1),
        ],
        [
            s!(34, -36),
            s!(25, -33),
            s!(27, -34),
            s!(33, -46),
            s!(26, -32),
            s!(8, -35),
            s!(4, -30),
            s!(51, -62),
            s!(22, -20),
            s!(25, -24),
            s!(26, -24),
            s!(30, -22),
            s!(33, -27),
            s!(33, -48),
            s!(35, -53),
            s!(30, -27),
            s!(7, -31),
            s!(24, -39),
            s!(13, 2),
            s!(20, -15),
            s!(18, -2),
            s!(22, -8),
            s!(24, 0),
            s!(16, -8),
            s!(10, -14),
            s!(5, 0),
            s!(11, -3),
            s!(1, 22),
            s!(13, 11),
            s!(18, 0),
            s!(21, 4),
            s!(13, -2),
            s!(-4, -17),
            s!(6, 5),
            s!(-2, 3),
            s!(-8, 31),
            s!(1, 38),
            s!(2, 38),
            s!(6, 22),
            s!(21, 4),
            s!(-4, -20),
            s!(-5, -7),
            s!(13, 11),
            s!(8, 12),
            s!(29, 36),
            s!(24, 15),
            s!(72, -22),
            s!(17, 1),
            s!(-13, 2),
            s!(-25, 4),
            s!(-30, 22),
            s!(-52, 63),
            s!(-53, 52),
            s!(40, 35),
            s!(-10, 43),
            s!(94, -54),
            s!(-15, -3),
            s!(-11, 9),
            s!(17, -2),
            s!(9, 16),
            s!(71, -23),
            s!(51, -2),
            s!(1, -4),
            s!(-10, 26),
        ],
        [
            s!(-74, -9),
            s!(-1, -11),
            s!(-15, 1),
            s!(-44, 9),
            s!(-12, -4),
            s!(-42, 6),
            s!(6, -16),
            s!(-18, -31),
            s!(1, -19),
            s!(-20, 5),
            s!(-25, 16),
            s!(-47, 25),
            s!(-38, 23),
            s!(-30, 21),
            s!(10, 4),
            s!(-6, -9),
            s!(0, -24),
            s!(28, -4),
            s!(-31, 20),
            s!(-45, 29),
            s!(-40, 28),
            s!(-25, 22),
            s!(-1, 5),
            s!(-34, -3),
            s!(21, -31),
            s!(30, -8),
            s!(9, 13),
            s!(-33, 29),
            s!(-29, 30),
            s!(-48, 24),
            s!(-14, 5),
            s!(-63, -3),
            s!(0, -26),
            s!(20, -2),
            s!(35, 11),
            s!(11, 24),
            s!(-3, 25),
            s!(0, 21),
            s!(21, 6),
            s!(-26, -3),
            s!(34, -21),
            s!(126, -7),
            s!(42, 9),
            s!(69, 7),
            s!(8, 18),
            s!(68, 17),
            s!(78, 10),
            s!(2, -1),
            s!(17, -19),
            s!(99, -4),
            s!(74, -2),
            s!(52, 0),
            s!(55, 1),
            s!(87, 6),
            s!(19, 15),
            s!(-21, 0),
            s!(75, -53),
            s!(46, -20),
            s!(87, -25),
            s!(49, -13),
            s!(71, -16),
            s!(70, -11),
            s!(46, -14),
            s!(16, -30),
        ],
    ]),
};
