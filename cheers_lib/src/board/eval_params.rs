#[cfg(feature = "eval-tracing")]
use bytemuck::{Pod, Zeroable};

use super::eval_types::*;

#[cfg_attr(feature = "eval-tracing", derive(Pod, Zeroable))]
#[derive(Copy, Clone, Debug, PartialEq, Eq)]
#[repr(C)]
pub struct EvalParams {
    pub piece_values: PieceValues,

    pub knight_mobility: [EvalScore; 9],
    pub knight_outpost: [EvalScore; 3],

    pub bishop_mobility: [EvalScore; 14],
    pub bishop_outpost: [EvalScore; 3],

    pub rook_mobility: [EvalScore; 15],
    pub rook_on_open_file: [EvalScore; 3],

    pub queen_mobility: [EvalScore; 28],

    pub king_on_open_file: [EvalScore; 3],
    pub king_ring_attacks: [EvalScore; 16],
    pub king_virtual_mobility: [EvalScore; 28],

    pub pawn_connected: [EvalScore; 3],
    pub pawn_phalanx: [EvalScore; 3],
    pub pawn_isolated: [EvalScore; 2],
    pub pawn_doubled: [EvalScore; 6],
    pub pawn_backward: [EvalScore; 2],

    pub passed_pawn_friendly_king_distance: [EvalScore; 4],
    pub passed_pawn_enemy_king_distance: [EvalScore; 4],
    pub passed_pawn_table: [EvalScore; 64],

    pub piece_tables: PieceTables,
}

#[cfg(feature = "eval-tracing")]
impl EvalParams {
    pub const LEN: usize = std::mem::size_of::<Self>() / std::mem::size_of::<i16>();
    pub fn to_array(&mut self) -> [i16; Self::LEN] {
        let array = &mut bytemuck::cast::<EvalParams, [i16; Self::LEN]>(*self);
        array
            .chunks_exact_mut(2)
            .for_each(|p| EvalScore::convert(p));
        *array
    }
    pub fn as_array(&self) -> &[i16; Self::LEN] {
        bytemuck::cast_ref::<EvalParams, [i16; Self::LEN]>(self)
    }
    pub fn from_array(mut params: [i16; Self::LEN]) -> Self {
        params.chunks_exact_mut(2).for_each(|p| {
            let score = EvalScore::new(p[0], p[1]);
            p[1] = (score.inner() >> 16) as i16;
            p[0] = score.inner() as i16;
        });
        bytemuck::cast::<[i16; Self::LEN], EvalParams>(params)
    }
}

#[cfg_attr(feature = "eval-tracing", derive(Pod, Zeroable))]
#[derive(Clone, Copy)]
#[repr(C)]
pub struct EvalTrace {
    pub pawn_count: [i16; 2],
    pub knight_count: [i16; 2],
    pub bishop_count: [i16; 2],
    pub rook_count: [i16; 2],
    pub queen_count: [i16; 2],
    // pads to the length of PieceValues
    pub king_count: [i16; 2],

    pub knight_mobility: [[i16; 2]; 9],
    pub knight_outpost: [[i16; 2]; 3],

    pub bishop_mobility: [[i16; 2]; 14],
    pub bishop_outpost: [[i16; 2]; 3],

    pub rook_mobility: [[i16; 2]; 15],
    pub rook_on_open_file: [[i16; 2]; 3],

    pub queen_mobility: [[i16; 2]; 28],

    pub king_on_open_file: [[i16; 2]; 3],
    pub king_ring_attacks: [[i16; 2]; 16],
    pub king_virtual_mobility: [[i16; 2]; 28],

    pub pawn_connected: [[i16; 2]; 3],
    pub pawn_phalanx: [[i16; 2]; 3],
    pub pawn_isolated: [[i16; 2]; 2],
    pub pawn_doubled: [[i16; 2]; 6],
    pub pawn_backward: [[i16; 2]; 2],

    pub passed_pawn_friendly_king_distance: [[i16; 2]; 4],
    pub passed_pawn_enemy_king_distance: [[i16; 2]; 4],
    pub passed_pawn_placement: [[i16; 2]; 64],

    pub pawn_placement: [[i16; 2]; 64],
    pub knight_placement: [[i16; 2]; 64],
    pub bishop_placement: [[i16; 2]; 64],
    pub rook_placement: [[i16; 2]; 64],
    pub queen_placement: [[i16; 2]; 64],
    pub king_placement: [[i16; 2]; 64],

    pub turn: i16,
}

#[cfg(feature = "eval-tracing")]
impl EvalTrace {
    pub const LEN: usize = std::mem::size_of::<Self>() / std::mem::size_of::<i16>();
    pub fn new() -> Self {
        bytemuck::cast::<[i16; Self::LEN], Self>([0i16; Self::LEN])
    }
    pub fn to_array(&self) -> [i16; Self::LEN] {
        bytemuck::cast::<Self, [i16; Self::LEN]>(*self)
    }
}

#[cfg(feature = "eval-tracing")]
impl Default for EvalTrace {
    fn default() -> Self {
        Self::new()
    }
}

// static assert that eval params and trace are the same length (plus 1 for turn in trace)
#[cfg(feature = "eval-tracing")]
const _PARAMS_TRACE_LEN_EQ: () = if EvalParams::LEN + 1 == EvalTrace::LEN {
    ()
} else {
    panic!("Eval parameters and trace are not equal length!")
};

pub const CHECKMATE_SCORE: i16 = 30000;
pub const DRAW_SCORE: i16 = 0;

pub static EVAL_PARAMS: EvalParams = EvalParams {
    piece_values: PieceValues([
        s!(53, 110),
        s!(411, 192),
        s!(387, 213),
        s!(513, 372),
        s!(1062, 679),
        s!(0, 0),
    ]),
    knight_mobility: [
        s!(-90, -84),
        s!(-62, -40),
        s!(-40, -16),
        s!(-36, 1),
        s!(-22, -4),
        s!(-17, 7),
        s!(-10, 4),
        s!(-1, 6),
        s!(8, -2),
    ],
    knight_outpost: [s!(-28, -4), s!(-18, -14), s!(-4, 1)],
    bishop_mobility: [
        s!(-38, -32),
        s!(-47, -14),
        s!(-30, -13),
        s!(-18, -1),
        s!(-9, 4),
        s!(-2, 11),
        s!(2, 16),
        s!(6, 17),
        s!(11, 20),
        s!(14, 17),
        s!(23, 18),
        s!(33, 8),
        s!(36, 19),
        s!(41, 2),
    ],
    bishop_outpost: [s!(-28, -19), s!(-21, -23), s!(6, -25)],
    rook_mobility: [
        s!(-73, -108),
        s!(-67, -44),
        s!(-16, -27),
        s!(-11, -8),
        s!(-10, -5),
        s!(-6, -6),
        s!(-5, 0),
        s!(0, 1),
        s!(1, 5),
        s!(8, 3),
        s!(11, 8),
        s!(14, 10),
        s!(20, 13),
        s!(17, 15),
        s!(46, 0),
    ],
    rook_on_open_file: [s!(-13, -4), s!(0, 6), s!(19, -8)],
    queen_mobility: [
        s!(0, 0),
        s!(-70, -71),
        s!(-131, -5),
        s!(-51, -129),
        s!(-37, -57),
        s!(-30, -76),
        s!(-25, -50),
        s!(-23, -29),
        s!(-22, -2),
        s!(-16, -14),
        s!(-17, 14),
        s!(-14, 12),
        s!(-9, 20),
        s!(-7, 19),
        s!(-5, 25),
        s!(-3, 28),
        s!(-7, 40),
        s!(0, 35),
        s!(-7, 46),
        s!(-11, 52),
        s!(2, 44),
        s!(10, 45),
        s!(-4, 49),
        s!(52, 8),
        s!(98, -9),
        s!(20, 28),
        s!(144, -46),
        s!(445, -195),
    ],
    king_on_open_file: [s!(12, 0), s!(-1, 13), s!(-28, 5)],
    king_ring_attacks: [
        s!(53, -13),
        s!(48, -8),
        s!(38, -3),
        s!(21, -5),
        s!(-25, 14),
        s!(-126, 62),
        s!(-160, 75),
        s!(-196, 88),
        s!(-292, 65),
        s!(-280, 48),
        s!(11, 120),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
    ],
    king_virtual_mobility: [
        s!(0, 0),
        s!(10, 21),
        s!(25, 0),
        s!(36, -5),
        s!(34, -7),
        s!(16, 7),
        s!(9, 2),
        s!(0, 3),
        s!(-6, 7),
        s!(-10, 6),
        s!(-11, 5),
        s!(-13, 7),
        s!(-18, 7),
        s!(-23, 8),
        s!(-28, 10),
        s!(-28, 7),
        s!(-41, 9),
        s!(-38, 6),
        s!(-26, 1),
        s!(-10, -4),
        s!(-10, -6),
        s!(-2, -11),
        s!(-2, -15),
        s!(-36, -15),
        s!(-20, -19),
        s!(-18, -24),
        s!(-78, -17),
        s!(-12, -31),
    ],
    pawn_connected: [s!(-14, -15), s!(1, -3), s!(16, 2)],
    pawn_phalanx: [s!(-1, 7), s!(6, 11), s!(7, 0)],
    pawn_isolated: [s!(10, 5), s!(6, 5)],
    pawn_doubled: [
        s!(0, 3),
        s!(0, -7),
        s!(0, -30),
        s!(0, 83),
        s!(0, 0),
        s!(0, 0),
    ],
    pawn_backward: [s!(5, 9), s!(-2, 5)],
    passed_pawn_friendly_king_distance: [s!(-4, 10), s!(-6, 2), s!(-11, -10), s!(-12, -14)],
    passed_pawn_enemy_king_distance: [s!(5, -38), s!(24, -15), s!(0, 8), s!(-7, 22)],
    passed_pawn_table: [
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(20, -9),
        s!(14, 2),
        s!(12, -18),
        s!(0, -32),
        s!(9, -19),
        s!(17, -21),
        s!(52, -17),
        s!(17, -14),
        s!(23, -2),
        s!(23, 3),
        s!(19, -8),
        s!(-8, -9),
        s!(13, -13),
        s!(18, -2),
        s!(23, 3),
        s!(31, -7),
        s!(25, 20),
        s!(16, 20),
        s!(0, 20),
        s!(3, 15),
        s!(-10, 16),
        s!(-22, 26),
        s!(-41, 38),
        s!(13, 23),
        s!(29, 41),
        s!(28, 47),
        s!(13, 37),
        s!(-2, 39),
        s!(2, 35),
        s!(20, 38),
        s!(15, 49),
        s!(-12, 46),
        s!(41, 90),
        s!(26, 74),
        s!(14, 54),
        s!(18, 32),
        s!(-2, 48),
        s!(-17, 79),
        s!(-33, 76),
        s!(-59, 102),
        s!(71, -12),
        s!(90, -4),
        s!(14, 72),
        s!(32, 5),
        s!(15, 0),
        s!(12, 40),
        s!(9, 88),
        s!(-22, 71),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
    ],
    piece_tables: PieceTables([
        [
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(-1, -48),
            s!(7, -52),
            s!(6, -43),
            s!(8, -40),
            s!(6, -44),
            s!(34, -51),
            s!(35, -61),
            s!(14, -63),
            s!(-5, -55),
            s!(-8, -57),
            s!(1, -55),
            s!(3, -48),
            s!(6, -51),
            s!(2, -56),
            s!(15, -66),
            s!(3, -64),
            s!(-2, -52),
            s!(-6, -51),
            s!(9, -61),
            s!(18, -63),
            s!(15, -59),
            s!(21, -65),
            s!(3, -60),
            s!(-11, -61),
            s!(9, -39),
            s!(3, -44),
            s!(7, -46),
            s!(21, -55),
            s!(22, -55),
            s!(25, -55),
            s!(4, -48),
            s!(5, -50),
            s!(4, -23),
            s!(7, -10),
            s!(21, 0),
            s!(10, 4),
            s!(39, -16),
            s!(84, -42),
            s!(36, -19),
            s!(29, -35),
            s!(2, 120),
            s!(8, 105),
            s!(24, 35),
            s!(23, 77),
            s!(70, 73),
            s!(73, 42),
            s!(40, 28),
            s!(21, 35),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
        ],
        [
            s!(-34, -8),
            s!(0, -6),
            s!(-29, 2),
            s!(-20, 8),
            s!(-13, 0),
            s!(-16, 6),
            s!(-6, -7),
            s!(-39, 10),
            s!(-4, -11),
            s!(-16, 0),
            s!(-4, -5),
            s!(4, 2),
            s!(6, 1),
            s!(0, 0),
            s!(7, -4),
            s!(6, -6),
            s!(-14, -4),
            s!(-9, 5),
            s!(-4, 3),
            s!(-6, 21),
            s!(3, 16),
            s!(2, 2),
            s!(13, -6),
            s!(-9, -7),
            s!(-1, 2),
            s!(-5, 7),
            s!(-1, 20),
            s!(-1, 23),
            s!(6, 24),
            s!(13, 11),
            s!(0, 0),
            s!(-3, 7),
            s!(7, 3),
            s!(6, 10),
            s!(-8, 20),
            s!(25, 25),
            s!(-1, 25),
            s!(13, 21),
            s!(-11, 14),
            s!(27, -4),
            s!(-21, -2),
            s!(-13, 1),
            s!(-20, 26),
            s!(10, 21),
            s!(24, 7),
            s!(59, 3),
            s!(10, -3),
            s!(-23, 3),
            s!(-61, 4),
            s!(-43, 12),
            s!(38, -7),
            s!(0, 7),
            s!(44, -10),
            s!(32, -11),
            s!(1, -2),
            s!(-8, -14),
            s!(-206, 35),
            s!(-41, -27),
            s!(-57, 5),
            s!(-69, 11),
            s!(-2, 0),
            s!(-91, 5),
            s!(-93, -6),
            s!(-112, -21),
        ],
        [
            s!(59, -14),
            s!(38, -2),
            s!(51, -13),
            s!(40, 0),
            s!(35, -2),
            s!(28, 3),
            s!(51, -18),
            s!(64, -15),
            s!(41, 0),
            s!(63, -11),
            s!(50, -7),
            s!(46, 0),
            s!(49, 0),
            s!(57, -6),
            s!(74, -11),
            s!(58, -10),
            s!(57, -10),
            s!(54, -1),
            s!(49, 2),
            s!(45, 7),
            s!(52, 6),
            s!(55, -1),
            s!(46, -10),
            s!(57, -8),
            s!(36, -6),
            s!(28, 0),
            s!(41, 8),
            s!(47, 6),
            s!(53, 5),
            s!(40, 6),
            s!(42, -7),
            s!(34, -5),
            s!(11, 7),
            s!(37, 3),
            s!(29, 6),
            s!(36, 13),
            s!(39, 10),
            s!(17, 7),
            s!(49, -5),
            s!(27, -2),
            s!(13, 5),
            s!(21, 3),
            s!(52, 0),
            s!(12, 15),
            s!(59, 0),
            s!(50, 9),
            s!(44, 0),
            s!(44, -1),
            s!(0, 0),
            s!(20, 1),
            s!(8, 2),
            s!(19, -5),
            s!(15, 3),
            s!(61, -9),
            s!(8, 6),
            s!(45, -23),
            s!(-2, 0),
            s!(-25, -4),
            s!(3, -4),
            s!(-19, 4),
            s!(-59, 8),
            s!(0, 0),
            s!(21, -6),
            s!(-22, 6),
        ],
        [
            s!(0, 1),
            s!(1, -1),
            s!(7, -2),
            s!(8, -2),
            s!(9, -8),
            s!(1, -5),
            s!(-11, -5),
            s!(13, -22),
            s!(-15, -4),
            s!(-9, -3),
            s!(-12, 1),
            s!(0, -5),
            s!(2, -7),
            s!(0, -7),
            s!(16, -13),
            s!(-28, -5),
            s!(-17, -3),
            s!(-14, -1),
            s!(-8, -2),
            s!(4, -7),
            s!(3, -7),
            s!(7, -12),
            s!(20, -19),
            s!(11, -17),
            s!(-20, 3),
            s!(-31, 6),
            s!(-27, 8),
            s!(-17, 7),
            s!(-13, 4),
            s!(-9, 0),
            s!(6, -9),
            s!(0, -12),
            s!(-24, 7),
            s!(-4, 1),
            s!(1, 5),
            s!(11, 0),
            s!(-4, 3),
            s!(13, -1),
            s!(22, -6),
            s!(17, -7),
            s!(-3, 5),
            s!(-3, 6),
            s!(-9, 6),
            s!(18, 0),
            s!(27, -5),
            s!(37, -6),
            s!(67, -13),
            s!(33, -10),
            s!(-15, 11),
            s!(-32, 23),
            s!(-3, 14),
            s!(21, 5),
            s!(-9, 7),
            s!(43, -4),
            s!(49, -5),
            s!(24, -4),
            s!(6, 11),
            s!(19, 5),
            s!(17, 8),
            s!(15, 3),
            s!(49, -4),
            s!(85, -16),
            s!(75, -13),
            s!(8, 2),
        ],
        [
            s!(32, -36),
            s!(22, -33),
            s!(25, -35),
            s!(30, -48),
            s!(24, -33),
            s!(5, -36),
            s!(0, -31),
            s!(49, -64),
            s!(19, -20),
            s!(22, -25),
            s!(24, -25),
            s!(28, -23),
            s!(30, -28),
            s!(31, -49),
            s!(33, -55),
            s!(27, -28),
            s!(4, -32),
            s!(21, -40),
            s!(10, 3),
            s!(17, -15),
            s!(15, -1),
            s!(20, -8),
            s!(21, 1),
            s!(13, -8),
            s!(7, -14),
            s!(2, 0),
            s!(8, -3),
            s!(-1, 23),
            s!(10, 12),
            s!(15, 1),
            s!(19, 5),
            s!(11, -1),
            s!(-7, -17),
            s!(3, 5),
            s!(-5, 4),
            s!(-11, 33),
            s!(-1, 39),
            s!(0, 40),
            s!(3, 23),
            s!(18, 5),
            s!(-7, -20),
            s!(-8, -7),
            s!(10, 11),
            s!(5, 13),
            s!(27, 38),
            s!(22, 16),
            s!(71, -23),
            s!(15, 1),
            s!(-17, 2),
            s!(-29, 5),
            s!(-35, 23),
            s!(-57, 65),
            s!(-58, 54),
            s!(38, 37),
            s!(-14, 45),
            s!(94, -55),
            s!(-19, -2),
            s!(-15, 10),
            s!(15, -2),
            s!(5, 17),
            s!(70, -23),
            s!(49, -2),
            s!(-1, -4),
            s!(-14, 27),
        ],
        [
            s!(-76, -9),
            s!(-1, -10),
            s!(-15, 2),
            s!(-45, 10),
            s!(-12, -3),
            s!(-43, 7),
            s!(7, -16),
            s!(-18, -31),
            s!(2, -19),
            s!(-21, 6),
            s!(-25, 17),
            s!(-49, 27),
            s!(-39, 25),
            s!(-30, 22),
            s!(11, 5),
            s!(-5, -9),
            s!(1, -24),
            s!(29, -3),
            s!(-32, 22),
            s!(-46, 30),
            s!(-41, 30),
            s!(-26, 23),
            s!(0, 6),
            s!(-35, -2),
            s!(23, -32),
            s!(31, -7),
            s!(9, 14),
            s!(-35, 31),
            s!(-30, 32),
            s!(-50, 26),
            s!(-14, 6),
            s!(-65, -2),
            s!(0, -26),
            s!(20, -1),
            s!(36, 12),
            s!(10, 26),
            s!(-4, 26),
            s!(0, 22),
            s!(22, 7),
            s!(-26, -2),
            s!(36, -21),
            s!(131, -7),
            s!(44, 10),
            s!(71, 8),
            s!(8, 20),
            s!(70, 19),
            s!(81, 11),
            s!(3, 0),
            s!(20, -19),
            s!(103, -4),
            s!(77, -1),
            s!(54, 0),
            s!(57, 2),
            s!(91, 7),
            s!(20, 16),
            s!(-21, 0),
            s!(84, -55),
            s!(50, -20),
            s!(95, -25),
            s!(49, -12),
            s!(73, -15),
            s!(74, -11),
            s!(50, -14),
            s!(21, -31),
        ],
    ]),
};
