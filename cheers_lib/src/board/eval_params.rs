#[cfg(feature = "eval-tracing")]
use bytemuck::{Pod, Zeroable};

use super::eval_types::*;

#[cfg_attr(feature = "eval-tracing", derive(Pod, Zeroable))]
#[derive(Copy, Clone, Debug, PartialEq, Eq)]
#[repr(C)]
pub struct EvalParams {
    pub piece_values: PieceValues,

    pub knight_mobility: [EvalScore; 9],
    pub knight_outpost: [EvalScore; 3],

    pub bishop_mobility: [EvalScore; 14],
    pub bishop_outpost: [EvalScore; 3],

    pub rook_mobility: [EvalScore; 15],
    pub rook_on_open_file: [EvalScore; 3],
    pub rook_queen_file: EvalScore,

    pub queen_mobility: [EvalScore; 28],
    pub queen_discovery_risk: EvalScore,

    pub king_on_open_file: [EvalScore; 3],
    pub king_ring_attacks: [EvalScore; 16],
    pub king_virtual_mobility: [EvalScore; 28],
    pub king_discovery_risk: EvalScore,

    pub pawn_connected: [EvalScore; 3],
    pub pawn_phalanx: [EvalScore; 3],
    pub pawn_isolated: [EvalScore; 2],
    pub pawn_doubled: [EvalScore; 5],
    pub pawn_backward: [EvalScore; 2],

    pub passed_pawn_friendly_king_distance: [EvalScore; 4],
    pub passed_pawn_enemy_king_distance: [EvalScore; 4],
    pub passed_pawn_table: [EvalScore; 64],

    pub piece_tables: PieceTables,
}

#[cfg(feature = "eval-tracing")]
impl EvalParams {
    pub const LEN: usize = std::mem::size_of::<Self>() / std::mem::size_of::<i16>();
    pub fn to_array(&mut self) -> [i16; Self::LEN] {
        let array = &mut bytemuck::cast::<EvalParams, [i16; Self::LEN]>(*self);
        array
            .chunks_exact_mut(2)
            .for_each(|p| EvalScore::convert(p));
        *array
    }
    pub fn as_array(&self) -> &[i16; Self::LEN] {
        bytemuck::cast_ref::<EvalParams, [i16; Self::LEN]>(self)
    }
    pub fn from_array(mut params: [i16; Self::LEN]) -> Self {
        params.chunks_exact_mut(2).for_each(|p| {
            let score = EvalScore::new(p[0], p[1]);
            p[1] = (score.inner() >> 16) as i16;
            p[0] = score.inner() as i16;
        });
        bytemuck::cast::<[i16; Self::LEN], EvalParams>(params)
    }
}

#[cfg_attr(feature = "eval-tracing", derive(Pod, Zeroable))]
#[derive(Clone, Copy)]
#[repr(C)]
pub struct EvalTrace {
    pub pawn_count: [i16; 2],
    pub knight_count: [i16; 2],
    pub bishop_count: [i16; 2],
    pub rook_count: [i16; 2],
    pub queen_count: [i16; 2],
    // pads to the length of PieceValues
    pub king_count: [i16; 2],

    pub knight_mobility: [[i16; 2]; 9],
    pub knight_outpost: [[i16; 2]; 3],

    pub bishop_mobility: [[i16; 2]; 14],
    pub bishop_outpost: [[i16; 2]; 3],

    pub rook_mobility: [[i16; 2]; 15],
    pub rook_on_open_file: [[i16; 2]; 3],
    pub rook_queen_file: [i16; 2],

    pub queen_mobility: [[i16; 2]; 28],
    pub queen_discovery_risk: [i16; 2],

    pub king_on_open_file: [[i16; 2]; 3],
    pub king_ring_attacks: [[i16; 2]; 16],
    pub king_virtual_mobility: [[i16; 2]; 28],
    pub king_discovery_risk: [i16; 2],

    pub pawn_connected: [[i16; 2]; 3],
    pub pawn_phalanx: [[i16; 2]; 3],
    pub pawn_isolated: [[i16; 2]; 2],
    pub pawn_doubled: [[i16; 2]; 5],
    pub pawn_backward: [[i16; 2]; 2],

    pub passed_pawn_friendly_king_distance: [[i16; 2]; 4],
    pub passed_pawn_enemy_king_distance: [[i16; 2]; 4],
    pub passed_pawn_placement: [[i16; 2]; 64],

    pub pawn_placement: [[i16; 2]; 64],
    pub knight_placement: [[i16; 2]; 64],
    pub bishop_placement: [[i16; 2]; 64],
    pub rook_placement: [[i16; 2]; 64],
    pub queen_placement: [[i16; 2]; 64],
    pub king_placement: [[i16; 2]; 64],

    pub turn: i16,
}

#[cfg(feature = "eval-tracing")]
impl EvalTrace {
    pub const LEN: usize = std::mem::size_of::<Self>() / std::mem::size_of::<i16>();
    pub fn new() -> Self {
        bytemuck::cast::<[i16; Self::LEN], Self>([0i16; Self::LEN])
    }
    pub fn to_array(&self) -> [i16; Self::LEN] {
        bytemuck::cast::<Self, [i16; Self::LEN]>(*self)
    }
}

#[cfg(feature = "eval-tracing")]
impl Default for EvalTrace {
    fn default() -> Self {
        Self::new()
    }
}

// static assert that eval params and trace are the same length (plus 1 for turn in trace)
#[cfg(feature = "eval-tracing")]
const _PARAMS_TRACE_LEN_EQ: () = if EvalParams::LEN + 1 == EvalTrace::LEN {
    ()
} else {
    panic!("Eval parameters and trace are not equal length!")
};

pub const CHECKMATE_SCORE: i16 = 30000;
pub const DRAW_SCORE: i16 = 0;

pub static EVAL_PARAMS: EvalParams = EvalParams {
    piece_values: PieceValues([
        s!(50, 112),
        s!(395, 184),
        s!(375, 207),
        s!(479, 348),
        s!(967, 627),
        s!(0, 0),
    ]),
    knight_mobility: [
        s!(-89, -77),
        s!(-65, -37),
        s!(-45, -15),
        s!(-41, 0),
        s!(-29, -3),
        s!(-24, 6),
        s!(-18, 4),
        s!(-9, 5),
        s!(-1, -2),
    ],
    knight_outpost: [s!(-35, -13), s!(-26, -22), s!(-13, -7)],
    bishop_mobility: [
        s!(-42, -29),
        s!(-50, -13),
        s!(-34, -12),
        s!(-23, -1),
        s!(-15, 3),
        s!(-8, 10),
        s!(-4, 15),
        s!(0, 15),
        s!(4, 18),
        s!(7, 15),
        s!(15, 16),
        s!(25, 8),
        s!(28, 18),
        s!(33, 2),
    ],
    bishop_outpost: [s!(-41, -28), s!(-35, -32), s!(-9, -34)],
    rook_mobility: [
        s!(-68, -97),
        s!(-62, -41),
        s!(-15, -24),
        s!(-11, -8),
        s!(-10, -5),
        s!(-6, -5),
        s!(-6, 0),
        s!(-1, 0),
        s!(0, 4),
        s!(6, 3),
        s!(9, 7),
        s!(13, 9),
        s!(18, 12),
        s!(16, 13),
        s!(44, 0),
    ],
    rook_on_open_file: [s!(-21, -11), s!(-10, -1), s!(7, -15)],
    rook_queen_file: s!(0, 12),
    queen_mobility: [
        s!(0, 0),
        s!(-26, -276),
        s!(-117, -18),
        s!(-48, -114),
        s!(-35, -57),
        s!(-28, -74),
        s!(-23, -52),
        s!(-22, -32),
        s!(-21, -7),
        s!(-16, -18),
        s!(-17, 7),
        s!(-14, 5),
        s!(-9, 12),
        s!(-7, 11),
        s!(-5, 17),
        s!(-4, 20),
        s!(-8, 31),
        s!(0, 26),
        s!(-7, 37),
        s!(-11, 42),
        s!(0, 34),
        s!(7, 36),
        s!(-6, 39),
        s!(46, 2),
        s!(92, -16),
        s!(17, 19),
        s!(106, -35),
        s!(523, -244),
    ],
    queen_discovery_risk: s!(-14, 18),
    king_on_open_file: [s!(13, 4), s!(0, 15), s!(-24, 8)],
    king_ring_attacks: [
        s!(48, -21),
        s!(44, -17),
        s!(35, -13),
        s!(20, -15),
        s!(-22, 2),
        s!(-114, 46),
        s!(-145, 58),
        s!(-173, 66),
        s!(-456, 238),
        s!(-450, 368),
        s!(-153, 401),
        s!(-115, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
    ],
    king_virtual_mobility: [
        s!(0, 0),
        s!(282, -33),
        s!(25, -4),
        s!(33, -7),
        s!(31, -9),
        s!(15, 4),
        s!(9, 0),
        s!(0, 0),
        s!(-5, 4),
        s!(-9, 3),
        s!(-10, 2),
        s!(-12, 4),
        s!(-16, 4),
        s!(-20, 5),
        s!(-25, 7),
        s!(-25, 4),
        s!(-37, 6),
        s!(-35, 3),
        s!(-23, -1),
        s!(-10, -6),
        s!(-9, -9),
        s!(-3, -13),
        s!(-3, -17),
        s!(-34, -16),
        s!(-20, -20),
        s!(-18, -24),
        s!(-76, -18),
        s!(-14, -31),
    ],
    king_discovery_risk: s!(-13, -3),
    pawn_connected: [s!(-14, -13), s!(0, -3), s!(14, 2)],
    pawn_phalanx: [s!(0, 4), s!(6, 7), s!(6, -2)],
    pawn_isolated: [s!(9, 11), s!(5, 10)],
    pawn_doubled: [s!(0, -2), s!(0, 2), s!(0, -3), s!(0, -19), s!(0, 204)],
    pawn_backward: [s!(6, 15), s!(0, 11)],
    passed_pawn_friendly_king_distance: [s!(-5, 9), s!(-8, 2), s!(-12, -9), s!(-13, -13)],
    passed_pawn_enemy_king_distance: [s!(4, -31), s!(23, -10), s!(1, 11), s!(-6, 23)],
    passed_pawn_table: [
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(19, -12),
        s!(14, -1),
        s!(13, -20),
        s!(1, -33),
        s!(9, -21),
        s!(16, -22),
        s!(47, -18),
        s!(17, -17),
        s!(23, -5),
        s!(22, 0),
        s!(19, -11),
        s!(-6, -11),
        s!(13, -15),
        s!(17, -6),
        s!(22, 0),
        s!(30, -10),
        s!(25, 14),
        s!(17, 14),
        s!(1, 14),
        s!(5, 10),
        s!(-7, 11),
        s!(-18, 20),
        s!(-35, 31),
        s!(13, 17),
        s!(28, 33),
        s!(27, 39),
        s!(14, 30),
        s!(0, 32),
        s!(4, 28),
        s!(19, 31),
        s!(15, 41),
        s!(-10, 38),
        s!(39, 78),
        s!(26, 63),
        s!(15, 45),
        s!(17, 26),
        s!(0, 40),
        s!(-14, 69),
        s!(-29, 65),
        s!(-52, 89),
        s!(66, -14),
        s!(83, -7),
        s!(12, 63),
        s!(32, 0),
        s!(14, -3),
        s!(12, 33),
        s!(7, 77),
        s!(-21, 62),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
    ],
    piece_tables: PieceTables([
        [
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(-3, -69),
            s!(4, -72),
            s!(3, -64),
            s!(5, -62),
            s!(3, -65),
            s!(28, -72),
            s!(29, -81),
            s!(10, -83),
            s!(-7, -75),
            s!(-10, -77),
            s!(-1, -75),
            s!(0, -69),
            s!(3, -72),
            s!(0, -76),
            s!(11, -85),
            s!(0, -84),
            s!(-4, -72),
            s!(-7, -71),
            s!(6, -81),
            s!(14, -83),
            s!(12, -79),
            s!(17, -85),
            s!(1, -80),
            s!(-12, -81),
            s!(6, -61),
            s!(0, -66),
            s!(4, -67),
            s!(17, -75),
            s!(18, -75),
            s!(20, -75),
            s!(1, -69),
            s!(2, -71),
            s!(2, -46),
            s!(4, -34),
            s!(17, -26),
            s!(7, -21),
            s!(33, -39),
            s!(74, -64),
            s!(30, -42),
            s!(24, -57),
            s!(0, 82),
            s!(5, 70),
            s!(22, 5),
            s!(18, 45),
            s!(62, 41),
            s!(64, 12),
            s!(34, 0),
            s!(19, 5),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
        ],
        [
            s!(-34, -8),
            s!(-3, -6),
            s!(-29, 2),
            s!(-21, 7),
            s!(-15, 0),
            s!(-18, 6),
            s!(-8, -6),
            s!(-38, 8),
            s!(-7, -10),
            s!(-17, 0),
            s!(-6, -5),
            s!(1, 2),
            s!(3, 1),
            s!(-3, 0),
            s!(3, -4),
            s!(2, -6),
            s!(-15, -4),
            s!(-11, 4),
            s!(-6, 2),
            s!(-9, 18),
            s!(0, 14),
            s!(0, 2),
            s!(9, -6),
            s!(-11, -7),
            s!(-4, 1),
            s!(-8, 6),
            s!(-4, 18),
            s!(-4, 21),
            s!(2, 22),
            s!(9, 9),
            s!(-1, 0),
            s!(-6, 6),
            s!(3, 3),
            s!(2, 8),
            s!(-10, 17),
            s!(20, 22),
            s!(-4, 23),
            s!(9, 19),
            s!(-12, 12),
            s!(21, -4),
            s!(-21, -2),
            s!(-15, 1),
            s!(-21, 24),
            s!(7, 19),
            s!(20, 5),
            s!(51, 2),
            s!(7, -4),
            s!(-23, 2),
            s!(-59, 3),
            s!(-41, 10),
            s!(31, -7),
            s!(-3, 6),
            s!(38, -9),
            s!(26, -10),
            s!(-1, -3),
            s!(-10, -13),
            s!(-190, 32),
            s!(-40, -25),
            s!(-56, 4),
            s!(-65, 10),
            s!(-3, 0),
            s!(-85, 4),
            s!(-86, -6),
            s!(-104, -20),
        ],
        [
            s!(52, -14),
            s!(33, -4),
            s!(45, -14),
            s!(35, -2),
            s!(30, -3),
            s!(24, 1),
            s!(46, -18),
            s!(57, -15),
            s!(31, -1),
            s!(55, -12),
            s!(44, -8),
            s!(40, -1),
            s!(43, 0),
            s!(50, -6),
            s!(66, -12),
            s!(50, -10),
            s!(50, -10),
            s!(44, -2),
            s!(43, 0),
            s!(39, 5),
            s!(45, 4),
            s!(49, -2),
            s!(40, -11),
            s!(50, -9),
            s!(27, -6),
            s!(23, -1),
            s!(32, 5),
            s!(41, 3),
            s!(47, 3),
            s!(35, 4),
            s!(36, -7),
            s!(24, -4),
            s!(7, 6),
            s!(26, 3),
            s!(25, 4),
            s!(25, 11),
            s!(34, 8),
            s!(14, 4),
            s!(37, -3),
            s!(21, -3),
            s!(10, 3),
            s!(17, 1),
            s!(44, 0),
            s!(9, 12),
            s!(51, 0),
            s!(42, 7),
            s!(37, 0),
            s!(39, -3),
            s!(-1, 0),
            s!(16, 0),
            s!(5, 0),
            s!(15, -6),
            s!(12, 2),
            s!(53, -10),
            s!(5, 4),
            s!(39, -22),
            s!(-3, 0),
            s!(-24, -5),
            s!(3, -5),
            s!(-19, 2),
            s!(-56, 6),
            s!(-1, -2),
            s!(19, -7),
            s!(-20, 4),
        ],
        [
            s!(-2, 0),
            s!(-1, -3),
            s!(2, -4),
            s!(3, -3),
            s!(5, -9),
            s!(-1, -7),
            s!(-13, -7),
            s!(9, -22),
            s!(-16, -6),
            s!(-11, -5),
            s!(-14, 0),
            s!(-4, -6),
            s!(-1, -9),
            s!(-2, -9),
            s!(10, -14),
            s!(-28, -7),
            s!(-19, -4),
            s!(-15, -3),
            s!(-11, -4),
            s!(0, -8),
            s!(0, -8),
            s!(4, -14),
            s!(11, -19),
            s!(6, -18),
            s!(-21, 0),
            s!(-31, 3),
            s!(-28, 5),
            s!(-20, 4),
            s!(-16, 2),
            s!(-11, -2),
            s!(0, -9),
            s!(-2, -13),
            s!(-24, 4),
            s!(-6, -1),
            s!(-2, 2),
            s!(6, -1),
            s!(-7, 0),
            s!(9, -3),
            s!(14, -7),
            s!(12, -8),
            s!(-6, 2),
            s!(-6, 3),
            s!(-12, 3),
            s!(14, -2),
            s!(22, -7),
            s!(30, -8),
            s!(54, -14),
            s!(28, -12),
            s!(-18, 8),
            s!(-32, 18),
            s!(-7, 10),
            s!(15, 2),
            s!(-11, 4),
            s!(34, -5),
            s!(43, -7),
            s!(18, -6),
            s!(0, 9),
            s!(11, 3),
            s!(8, 6),
            s!(6, 2),
            s!(40, -6),
            s!(73, -16),
            s!(64, -14),
            s!(0, 0),
        ],
        [
            s!(29, -37),
            s!(18, -34),
            s!(20, -34),
            s!(25, -44),
            s!(19, -32),
            s!(3, -35),
            s!(-1, -32),
            s!(44, -62),
            s!(16, -22),
            s!(19, -27),
            s!(20, -25),
            s!(23, -23),
            s!(26, -27),
            s!(27, -48),
            s!(28, -53),
            s!(23, -29),
            s!(9, -40),
            s!(18, -40),
            s!(8, 0),
            s!(14, -16),
            s!(12, -4),
            s!(18, -11),
            s!(17, -1),
            s!(15, -16),
            s!(15, -28),
            s!(2, -5),
            s!(5, -5),
            s!(-1, 15),
            s!(7, 7),
            s!(14, -3),
            s!(18, -1),
            s!(13, -11),
            s!(-5, -23),
            s!(1, 1),
            s!(-5, 0),
            s!(-11, 26),
            s!(-2, 32),
            s!(2, 29),
            s!(2, 17),
            s!(19, -3),
            s!(-8, -22),
            s!(-9, -10),
            s!(7, 7),
            s!(3, 7),
            s!(24, 30),
            s!(22, 8),
            s!(63, -25),
            s!(13, -3),
            s!(-19, 0),
            s!(-29, 1),
            s!(-34, 18),
            s!(-55, 56),
            s!(-55, 45),
            s!(32, 30),
            s!(-15, 37),
            s!(82, -53),
            s!(-19, -6),
            s!(-14, 5),
            s!(17, -9),
            s!(6, 10),
            s!(64, -26),
            s!(42, -5),
            s!(0, -9),
            s!(-14, 21),
        ],
        [
            s!(-70, -9),
            s!(-2, -10),
            s!(-15, 1),
            s!(-42, 8),
            s!(-12, -4),
            s!(-40, 5),
            s!(5, -16),
            s!(-18, -29),
            s!(1, -18),
            s!(-20, 5),
            s!(-25, 15),
            s!(-45, 24),
            s!(-36, 21),
            s!(-28, 19),
            s!(9, 4),
            s!(-6, -9),
            s!(1, -23),
            s!(24, -4),
            s!(-29, 19),
            s!(-43, 27),
            s!(-38, 26),
            s!(-23, 20),
            s!(-1, 5),
            s!(-32, -3),
            s!(19, -30),
            s!(27, -7),
            s!(8, 12),
            s!(-32, 27),
            s!(-28, 28),
            s!(-46, 23),
            s!(-14, 4),
            s!(-60, -3),
            s!(-1, -25),
            s!(17, -2),
            s!(32, 10),
            s!(10, 22),
            s!(-4, 23),
            s!(0, 19),
            s!(19, 6),
            s!(-25, -3),
            s!(31, -20),
            s!(118, -7),
            s!(39, 9),
            s!(64, 7),
            s!(6, 17),
            s!(63, 16),
            s!(72, 9),
            s!(2, -1),
            s!(15, -18),
            s!(92, -4),
            s!(69, -2),
            s!(48, 0),
            s!(51, 1),
            s!(81, 6),
            s!(18, 14),
            s!(-21, 0),
            s!(66, -50),
            s!(42, -19),
            s!(81, -23),
            s!(44, -12),
            s!(66, -15),
            s!(66, -11),
            s!(44, -14),
            s!(15, -28),
        ],
    ]),
};
