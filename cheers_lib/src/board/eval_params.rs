#[cfg(feature = "eval-tracing")]
use bytemuck::{Pod, Zeroable};

use super::eval_types::*;

#[cfg_attr(feature = "eval-tracing", derive(Pod, Zeroable))]
#[derive(Copy, Clone, Debug, Default, PartialEq, Eq)]
#[repr(C)]
pub struct EvalParams {
    pub piece_values: PieceValues,
    pub knight_mobility: [EvalScore; 9],
    pub bishop_mobility: [EvalScore; 14],
    pub rook_mobility: [EvalScore; 15],
    pub queen_mobility: [EvalScore; 28],
    pub piece_tables: PieceTables,
}

#[cfg(feature = "eval-tracing")]
impl EvalParams {
    pub const LEN: usize = std::mem::size_of::<Self>() / std::mem::size_of::<i16>();
    pub fn to_array(&mut self) -> [i16; Self::LEN] {
        let array = &mut bytemuck::cast::<EvalParams, [i16; Self::LEN]>(*self);
        array
            .chunks_exact_mut(2)
            .for_each(|p| EvalScore::convert(p));
        *array
    }
    pub fn as_array(&self) -> &[i16; Self::LEN] {
        bytemuck::cast_ref::<EvalParams, [i16; Self::LEN]>(self)
    }
    pub fn from_array(mut params: [i16; Self::LEN]) -> Self {
        params.chunks_exact_mut(2).for_each(|p| {
            let score = EvalScore::new(p[0], p[1]);
            p[1] = (score.inner() >> 16) as i16;
            p[0] = score.inner() as i16;
        });
        bytemuck::cast::<[i16; Self::LEN], EvalParams>(params)
    }
}

#[cfg_attr(feature = "eval-tracing", derive(Pod, Zeroable))]
#[derive(Clone, Copy)]
#[repr(C)]
pub struct EvalTrace {
    pub pawn_count: [i16; 2],
    pub knight_count: [i16; 2],
    pub bishop_count: [i16; 2],
    pub rook_count: [i16; 2],
    pub queen_count: [i16; 2],
    // pads to the length of PieceValues
    pub king_count: [i16; 2],

    pub knight_mobility: [[i16; 2]; 9],
    pub bishop_mobility: [[i16; 2]; 14],
    pub rook_mobility: [[i16; 2]; 15],
    pub queen_mobility: [[i16; 2]; 28],

    pub pawn_placement: [[i16; 2]; 64],
    pub knight_placement: [[i16; 2]; 64],
    pub bishop_placement: [[i16; 2]; 64],
    pub rook_placement: [[i16; 2]; 64],
    pub queen_placement: [[i16; 2]; 64],
    pub king_placement: [[i16; 2]; 64],

    pub turn: i16,
}

#[cfg(feature = "eval-tracing")]
impl EvalTrace {
    pub const LEN: usize = std::mem::size_of::<Self>() / std::mem::size_of::<i16>();
    pub fn new() -> Self {
        bytemuck::cast::<[i16; Self::LEN], Self>([0i16; Self::LEN])
    }
    pub fn to_array(&self) -> [i16; Self::LEN] {
        bytemuck::cast::<Self, [i16; Self::LEN]>(*self)
    }
}

#[cfg(feature = "eval-tracing")]
impl Default for EvalTrace {
    fn default() -> Self {
        Self::new()
    }
}

// static assert that eval params and trace are the same length (plus 1 for turn in trace)
#[cfg(feature = "eval-tracing")]
const _PARAMS_TRACE_LEN_EQ: () = if EvalParams::LEN + 1 == EvalTrace::LEN {
    ()
} else {
    panic!("Eval parameters and trace are not equal length!")
};

pub const CHECKMATE_SCORE: i16 = 30000;
pub const DRAW_SCORE: i16 = 0;

pub static EVAL_PARAMS: EvalParams = EvalParams {
    piece_values: PieceValues([
        s!(93, 129),
        s!(420, 224),
        s!(443, 241),
        s!(609, 432),
        s!(1285, 799),
        s!(0, 0),
    ]),
    knight_mobility: [
        s!(-114, -59),
        s!(-46, -47),
        s!(-26, -19),
        s!(-20, 5),
        s!(0, -3),
        s!(1, 7),
        s!(12, 8),
        s!(24, 12),
        s!(33, 1),
    ],
    bishop_mobility: [
        s!(-19, -21),
        s!(-86, -60),
        s!(-34, -31),
        s!(-19, -14),
        s!(-7, -5),
        s!(3, 0),
        s!(9, 6),
        s!(14, 9),
        s!(21, 13),
        s!(23, 10),
        s!(32, 10),
        s!(45, 0),
        s!(58, 7),
        s!(63, -7),
    ],
    rook_mobility: [
        s!(11, 4),
        s!(8, -94),
        s!(-30, -23),
        s!(-22, -14),
        s!(-17, -6),
        s!(-10, -5),
        s!(-6, 2),
        s!(0, 5),
        s!(7, 6),
        s!(20, 5),
        s!(27, 7),
        s!(42, 7),
        s!(54, 9),
        s!(59, 11),
        s!(83, -1),
    ],
    queen_mobility: [
        s!(0, 0),
        s!(0, 0),
        s!(-32, -12),
        s!(-51, -1),
        s!(-134, 34),
        s!(-29, -136),
        s!(-26, -102),
        s!(-23, -57),
        s!(-19, -38),
        s!(-13, -24),
        s!(-9, -28),
        s!(-5, 0),
        s!(0, 1),
        s!(5, 3),
        s!(10, 6),
        s!(12, 13),
        s!(6, 30),
        s!(13, 29),
        s!(12, 32),
        s!(0, 49),
        s!(11, 40),
        s!(28, 44),
        s!(11, 44),
        s!(50, 20),
        s!(91, -2),
        s!(51, 18),
        s!(40, 28),
        s!(119, -18),
    ],
    piece_tables: PieceTables([
        [
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(-26, -22),
            s!(5, -31),
            s!(-9, -33),
            s!(2, -31),
            s!(10, -38),
            s!(34, -40),
            s!(56, -47),
            s!(1, -49),
            s!(-33, -29),
            s!(-10, -34),
            s!(-10, -45),
            s!(-6, -38),
            s!(13, -44),
            s!(-15, -41),
            s!(35, -46),
            s!(-8, -45),
            s!(-41, -22),
            s!(-19, -28),
            s!(-16, -44),
            s!(0, -49),
            s!(0, -49),
            s!(-1, -51),
            s!(-5, -40),
            s!(-39, -40),
            s!(-32, 0),
            s!(-20, -10),
            s!(-24, -22),
            s!(-11, -34),
            s!(-3, -43),
            s!(-12, -35),
            s!(-15, -23),
            s!(-31, -22),
            s!(-41, 65),
            s!(-26, 62),
            s!(-18, 52),
            s!(-22, 34),
            s!(-7, 20),
            s!(33, 7),
            s!(-11, 37),
            s!(-35, 46),
            s!(16, 135),
            s!(5, 133),
            s!(-6, 119),
            s!(11, 87),
            s!(39, 75),
            s!(31, 89),
            s!(-19, 128),
            s!(-71, 128),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
        ],
        [
            s!(-21, -23),
            s!(21, -20),
            s!(-16, -9),
            s!(-1, -1),
            s!(2, -7),
            s!(4, -1),
            s!(17, -25),
            s!(-38, -1),
            s!(15, -27),
            s!(-8, -12),
            s!(5, -16),
            s!(29, -12),
            s!(22, -11),
            s!(27, -12),
            s!(17, -15),
            s!(25, -19),
            s!(3, -17),
            s!(0, -3),
            s!(11, -8),
            s!(6, 12),
            s!(21, 8),
            s!(7, -5),
            s!(28, -16),
            s!(-2, -22),
            s!(16, -9),
            s!(11, -2),
            s!(13, 13),
            s!(21, 15),
            s!(25, 18),
            s!(33, 2),
            s!(18, -10),
            s!(11, -1),
            s!(33, -11),
            s!(23, 6),
            s!(12, 10),
            s!(56, 15),
            s!(27, 13),
            s!(34, 12),
            s!(15, 6),
            s!(50, -15),
            s!(3, -18),
            s!(18, -17),
            s!(8, 12),
            s!(50, 5),
            s!(75, -16),
            s!(105, -14),
            s!(61, -27),
            s!(10, -13),
            s!(-39, -20),
            s!(-19, -6),
            s!(80, -29),
            s!(28, -12),
            s!(89, -34),
            s!(76, -34),
            s!(21, -21),
            s!(24, -41),
            s!(-203, 22),
            s!(-35, -48),
            s!(-46, -11),
            s!(-63, -3),
            s!(33, -25),
            s!(-97, -12),
            s!(-114, -19),
            s!(-105, -42),
        ],
        [
            s!(65, -29),
            s!(30, -12),
            s!(51, -17),
            s!(37, -8),
            s!(30, -9),
            s!(27, -5),
            s!(50, -31),
            s!(55, -21),
            s!(38, -13),
            s!(60, -23),
            s!(40, -18),
            s!(39, -10),
            s!(39, -8),
            s!(58, -17),
            s!(71, -18),
            s!(48, -19),
            s!(61, -23),
            s!(46, -10),
            s!(43, -6),
            s!(36, 0),
            s!(44, 0),
            s!(44, -7),
            s!(35, -20),
            s!(51, -18),
            s!(29, -16),
            s!(25, -8),
            s!(29, 1),
            s!(46, -3),
            s!(50, -2),
            s!(28, 1),
            s!(31, -17),
            s!(28, -18),
            s!(-3, 1),
            s!(25, 0),
            s!(29, -2),
            s!(37, 6),
            s!(38, 3),
            s!(10, -3),
            s!(39, -13),
            s!(18, -11),
            s!(3, -1),
            s!(16, -6),
            s!(53, -8),
            s!(17, 5),
            s!(61, -11),
            s!(56, 0),
            s!(57, -11),
            s!(57, -15),
            s!(-6, -13),
            s!(18, -10),
            s!(0, -7),
            s!(7, -17),
            s!(19, -9),
            s!(60, -24),
            s!(11, -7),
            s!(43, -36),
            s!(-12, -8),
            s!(-31, -18),
            s!(-10, -16),
            s!(-43, -2),
            s!(-88, 0),
            s!(-15, -12),
            s!(3, -20),
            s!(-41, -1),
        ],
        [
            s!(-9, -1),
            s!(-3, 0),
            s!(13, -4),
            s!(19, -1),
            s!(26, -13),
            s!(12, -8),
            s!(-9, -5),
            s!(8, -31),
            s!(-27, -1),
            s!(-14, -4),
            s!(-15, 2),
            s!(0, -3),
            s!(4, -7),
            s!(7, -8),
            s!(27, -15),
            s!(-36, -4),
            s!(-30, -3),
            s!(-20, -1),
            s!(-11, -3),
            s!(7, -9),
            s!(5, -8),
            s!(5, -13),
            s!(24, -24),
            s!(8, -20),
            s!(-32, 5),
            s!(-34, 7),
            s!(-32, 10),
            s!(-14, 7),
            s!(-8, 3),
            s!(-9, -1),
            s!(10, -12),
            s!(-4, -14),
            s!(-31, 10),
            s!(-7, 2),
            s!(7, 5),
            s!(20, 0),
            s!(4, 1),
            s!(17, -1),
            s!(43, -12),
            s!(27, -10),
            s!(-4, 7),
            s!(4, 6),
            s!(2, 6),
            s!(40, -3),
            s!(50, -11),
            s!(65, -12),
            s!(88, -17),
            s!(63, -16),
            s!(-9, 11),
            s!(-21, 24),
            s!(14, 13),
            s!(48, 0),
            s!(15, 1),
            s!(71, -8),
            s!(89, -14),
            s!(45, -11),
            s!(18, 13),
            s!(34, 5),
            s!(36, 6),
            s!(30, 2),
            s!(69, -8),
            s!(117, -23),
            s!(94, -19),
            s!(25, 0),
        ],
        [
            s!(27, -40),
            s!(23, -43),
            s!(26, -44),
            s!(34, -53),
            s!(25, -34),
            s!(10, -38),
            s!(-2, -36),
            s!(42, -70),
            s!(12, -17),
            s!(14, -20),
            s!(13, -22),
            s!(19, -22),
            s!(23, -29),
            s!(37, -59),
            s!(35, -59),
            s!(32, -36),
            s!(-2, -36),
            s!(11, -42),
            s!(-4, 11),
            s!(7, -13),
            s!(3, 5),
            s!(9, 0),
            s!(11, 10),
            s!(6, -3),
            s!(-3, -14),
            s!(-6, 0),
            s!(-5, 1),
            s!(-11, 32),
            s!(1, 20),
            s!(4, 8),
            s!(9, 17),
            s!(2, 9),
            s!(-22, -9),
            s!(-7, 5),
            s!(-17, 7),
            s!(-15, 33),
            s!(-10, 53),
            s!(-7, 58),
            s!(-1, 37),
            s!(25, 17),
            s!(-20, -15),
            s!(-22, 0),
            s!(6, 16),
            s!(12, 12),
            s!(33, 48),
            s!(68, 3),
            s!(114, -33),
            s!(74, -16),
            s!(-22, 5),
            s!(-38, 6),
            s!(-38, 26),
            s!(-66, 79),
            s!(-52, 62),
            s!(79, 34),
            s!(5, 47),
            s!(139, -76),
            s!(-5, -15),
            s!(-23, 16),
            s!(27, -4),
            s!(33, 7),
            s!(84, -22),
            s!(82, -10),
            s!(-7, 0),
            s!(-11, 31),
        ],
        [
            s!(-77, -19),
            s!(4, -21),
            s!(-15, -7),
            s!(-83, 3),
            s!(-17, -13),
            s!(-48, -1),
            s!(20, -29),
            s!(5, -50),
            s!(22, -27),
            s!(-38, 3),
            s!(-52, 18),
            s!(-94, 31),
            s!(-81, 31),
            s!(-55, 26),
            s!(0, 6),
            s!(0, -12),
            s!(4, -26),
            s!(10, -1),
            s!(-82, 26),
            s!(-93, 36),
            s!(-97, 40),
            s!(-75, 35),
            s!(-27, 16),
            s!(-47, 4),
            s!(38, -32),
            s!(20, -3),
            s!(6, 15),
            s!(-71, 33),
            s!(-62, 36),
            s!(-81, 38),
            s!(-44, 21),
            s!(-84, 10),
            s!(11, -21),
            s!(21, 1),
            s!(43, 11),
            s!(1, 21),
            s!(-18, 23),
            s!(-10, 30),
            s!(6, 22),
            s!(-47, 15),
            s!(54, -16),
            s!(144, -2),
            s!(48, 9),
            s!(70, 6),
            s!(12, 18),
            s!(76, 22),
            s!(89, 24),
            s!(-18, 19),
            s!(58, -20),
            s!(133, -7),
            s!(88, -3),
            s!(65, -2),
            s!(71, 2),
            s!(124, 10),
            s!(20, 25),
            s!(-27, 15),
            s!(106, -59),
            s!(75, -24),
            s!(111, -27),
            s!(85, -19),
            s!(102, -17),
            s!(100, -7),
            s!(56, -6),
            s!(52, -32),
        ],
    ]),
};
