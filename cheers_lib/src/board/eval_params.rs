#[cfg(feature = "eval-tracing")]
use bytemuck::{Pod, Zeroable};

use super::eval_types::*;

#[cfg_attr(feature = "eval-tracing", derive(Pod, Zeroable))]
#[derive(Copy, Clone, Debug, PartialEq, Eq)]
#[repr(C)]
pub struct EvalParams {
    pub piece_values: PieceValues,

    pub knight_mobility: [EvalScore; 9],
    pub knight_outpost: [EvalScore; 3],

    pub bishop_mobility: [EvalScore; 14],
    pub bishop_outpost: [EvalScore; 3],

    pub rook_mobility: [EvalScore; 15],

    pub queen_mobility: [EvalScore; 28],

    pub pawn_connected: [EvalScore; 3],
    pub pawn_phalanx: [EvalScore; 3],
    pub pawn_isolated: [EvalScore; 2],
    pub pawn_doubled: [EvalScore; 6],
    pub pawn_backward: [EvalScore; 2],

    pub passed_pawn_friendly_king_distance: [EvalScore; 4],
    pub passed_pawn_enemy_king_distance: [EvalScore; 4],
    pub passed_pawn_table: [EvalScore; 64],

    pub piece_tables: PieceTables,
}

#[cfg(feature = "eval-tracing")]
impl EvalParams {
    pub const LEN: usize = std::mem::size_of::<Self>() / std::mem::size_of::<i16>();
    pub fn to_array(&mut self) -> [i16; Self::LEN] {
        let array = &mut bytemuck::cast::<EvalParams, [i16; Self::LEN]>(*self);
        array
            .chunks_exact_mut(2)
            .for_each(|p| EvalScore::convert(p));
        *array
    }
    pub fn as_array(&self) -> &[i16; Self::LEN] {
        bytemuck::cast_ref::<EvalParams, [i16; Self::LEN]>(self)
    }
    pub fn from_array(mut params: [i16; Self::LEN]) -> Self {
        params.chunks_exact_mut(2).for_each(|p| {
            let score = EvalScore::new(p[0], p[1]);
            p[1] = (score.inner() >> 16) as i16;
            p[0] = score.inner() as i16;
        });
        bytemuck::cast::<[i16; Self::LEN], EvalParams>(params)
    }
}

#[cfg_attr(feature = "eval-tracing", derive(Pod, Zeroable))]
#[derive(Clone, Copy)]
#[repr(C)]
pub struct EvalTrace {
    pub pawn_count: [i16; 2],
    pub knight_count: [i16; 2],
    pub bishop_count: [i16; 2],
    pub rook_count: [i16; 2],
    pub queen_count: [i16; 2],
    // pads to the length of PieceValues
    pub king_count: [i16; 2],

    pub knight_mobility: [[i16; 2]; 9],
    pub knight_outpost: [[i16; 2]; 3],

    pub bishop_mobility: [[i16; 2]; 14],
    pub bishop_outpost: [[i16; 2]; 3],

    pub rook_mobility: [[i16; 2]; 15],
    pub queen_mobility: [[i16; 2]; 28],

    pub pawn_connected: [[i16; 2]; 3],
    pub pawn_phalanx: [[i16; 2]; 3],
    pub pawn_isolated: [[i16; 2]; 2],
    pub pawn_doubled: [[i16; 2]; 6],
    pub pawn_backward: [[i16; 2]; 2],

    pub passed_pawn_friendly_king_distance: [[i16; 2]; 4],
    pub passed_pawn_enemy_king_distance: [[i16; 2]; 4],
    pub passed_pawn_placement: [[i16; 2]; 64],

    pub pawn_placement: [[i16; 2]; 64],
    pub knight_placement: [[i16; 2]; 64],
    pub bishop_placement: [[i16; 2]; 64],
    pub rook_placement: [[i16; 2]; 64],
    pub queen_placement: [[i16; 2]; 64],
    pub king_placement: [[i16; 2]; 64],

    pub turn: i16,
}

#[cfg(feature = "eval-tracing")]
impl EvalTrace {
    pub const LEN: usize = std::mem::size_of::<Self>() / std::mem::size_of::<i16>();
    pub fn new() -> Self {
        bytemuck::cast::<[i16; Self::LEN], Self>([0i16; Self::LEN])
    }
    pub fn to_array(&self) -> [i16; Self::LEN] {
        bytemuck::cast::<Self, [i16; Self::LEN]>(*self)
    }
}

#[cfg(feature = "eval-tracing")]
impl Default for EvalTrace {
    fn default() -> Self {
        Self::new()
    }
}

// static assert that eval params and trace are the same length (plus 1 for turn in trace)
#[cfg(feature = "eval-tracing")]
const _PARAMS_TRACE_LEN_EQ: () = if EvalParams::LEN + 1 == EvalTrace::LEN {
    ()
} else {
    panic!("Eval parameters and trace are not equal length!")
};

pub const CHECKMATE_SCORE: i16 = 30000;
pub const DRAW_SCORE: i16 = 0;

pub static EVAL_PARAMS: EvalParams = EvalParams {
    piece_values: PieceValues([
        s!(75, 116),
        s!(412, 211),
        s!(413, 227),
        s!(552, 399),
        s!(1163, 727),
        s!(0, 0),
    ]),
    knight_mobility: [
        s!(-94, -88),
        s!(-59, -45),
        s!(-35, -20),
        s!(-31, -1),
        s!(-15, -7),
        s!(-10, 4),
        s!(-2, 1),
        s!(7, 3),
        s!(17, -5),
    ],
    knight_outpost: [s!(-12, 0), s!(0, -10), s!(13, 6)],
    bishop_mobility: [
        s!(-45, -46),
        s!(-59, -28),
        s!(-40, -25),
        s!(-27, -10),
        s!(-18, -4),
        s!(-10, 2),
        s!(-4, 7),
        s!(0, 8),
        s!(6, 10),
        s!(9, 7),
        s!(18, 8),
        s!(34, -2),
        s!(38, 8),
        s!(46, -10),
    ],
    bishop_outpost: [s!(-5, -2), s!(1, -7), s!(33, -10)],
    rook_mobility: [
        s!(-82, -91),
        s!(-77, -47),
        s!(-25, -27),
        s!(-18, -10),
        s!(-14, -7),
        s!(-7, -7),
        s!(-5, 0),
        s!(4, 0),
        s!(10, 3),
        s!(22, 1),
        s!(30, 5),
        s!(39, 6),
        s!(48, 9),
        s!(51, 9),
        s!(82, -6),
    ],
    queen_mobility: [
        s!(0, 0),
        s!(-79, -43),
        s!(-152, -1),
        s!(-63, -123),
        s!(-47, -65),
        s!(-40, -87),
        s!(-33, -58),
        s!(-31, -35),
        s!(-30, -2),
        s!(-24, -15),
        s!(-24, 14),
        s!(-19, 10),
        s!(-12, 19),
        s!(-10, 18),
        s!(-6, 25),
        s!(-4, 29),
        s!(-8, 41),
        s!(0, 36),
        s!(-6, 47),
        s!(-9, 54),
        s!(6, 45),
        s!(15, 48),
        s!(1, 50),
        s!(61, 9),
        s!(99, -2),
        s!(41, 25),
        s!(195, -65),
        s!(297, -113),
    ],
    pawn_connected: [s!(-21, -19), s!(-4, -7), s!(13, -1)],
    pawn_phalanx: [s!(0, 2), s!(7, 5), s!(8, -6)],
    pawn_isolated: [s!(4, 4), s!(0, 3)],
    pawn_doubled: [
        s!(0, 2),
        s!(0, -5),
        s!(4, -26),
        s!(0, 60),
        s!(0, 0),
        s!(0, 0),
    ],
    pawn_backward: [s!(7, 6), s!(0, 1)],
    passed_pawn_friendly_king_distance: [s!(6, 13), s!(-4, 3), s!(-9, -11), s!(-10, -14)],
    passed_pawn_enemy_king_distance: [s!(18, -55), s!(34, -21), s!(4, 6), s!(-4, 22)],
    passed_pawn_table: [
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(16, -10),
        s!(6, 4),
        s!(9, -20),
        s!(-10, -33),
        s!(-4, -15),
        s!(5, -20),
        s!(51, -18),
        s!(4, -15),
        s!(20, -1),
        s!(20, 4),
        s!(12, -7),
        s!(-20, -7),
        s!(3, -10),
        s!(13, 0),
        s!(18, 5),
        s!(30, -8),
        s!(21, 23),
        s!(9, 25),
        s!(-9, 24),
        s!(-8, 20),
        s!(-20, 22),
        s!(-34, 32),
        s!(-63, 46),
        s!(5, 26),
        s!(25, 46),
        s!(25, 53),
        s!(5, 43),
        s!(-12, 46),
        s!(-11, 43),
        s!(12, 44),
        s!(-2, 59),
        s!(-20, 52),
        s!(37, 101),
        s!(21, 82),
        s!(8, 61),
        s!(9, 39),
        s!(-16, 56),
        s!(-7, 87),
        s!(-40, 86),
        s!(-66, 113),
        s!(63, -8),
        s!(90, -1),
        s!(7, 79),
        s!(25, 10),
        s!(6, 2),
        s!(2, 49),
        s!(14, 97),
        s!(-43, 78),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
    ],
    piece_tables: PieceTables([
        [
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(-12, -35),
            s!(-1, -39),
            s!(0, -29),
            s!(5, -27),
            s!(10, -36),
            s!(34, -40),
            s!(41, -53),
            s!(9, -52),
            s!(-19, -42),
            s!(-20, -45),
            s!(-6, -43),
            s!(-4, -36),
            s!(7, -43),
            s!(-7, -44),
            s!(15, -57),
            s!(-3, -53),
            s!(-18, -38),
            s!(-17, -38),
            s!(0, -49),
            s!(9, -52),
            s!(13, -51),
            s!(9, -55),
            s!(0, -52),
            s!(-21, -49),
            s!(-7, -24),
            s!(-9, -31),
            s!(-2, -34),
            s!(9, -43),
            s!(16, -46),
            s!(9, -44),
            s!(-2, -39),
            s!(-5, -38),
            s!(-12, -7),
            s!(-5, 5),
            s!(7, 15),
            s!(-4, 20),
            s!(18, 0),
            s!(62, -28),
            s!(18, -5),
            s!(12, -21),
            s!(-11, 144),
            s!(-7, 129),
            s!(8, 56),
            s!(6, 99),
            s!(45, 98),
            s!(56, 60),
            s!(12, 47),
            s!(7, 58),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
        ],
        [
            s!(-32, -17),
            s!(8, -12),
            s!(-21, -4),
            s!(-10, 1),
            s!(-4, -5),
            s!(-4, 1),
            s!(3, -16),
            s!(-40, 4),
            s!(2, -19),
            s!(-11, -7),
            s!(0, -11),
            s!(13, -4),
            s!(15, -6),
            s!(13, -6),
            s!(16, -11),
            s!(15, -15),
            s!(-9, -10),
            s!(-6, 0),
            s!(1, -3),
            s!(-2, 16),
            s!(10, 11),
            s!(8, -3),
            s!(19, -13),
            s!(-5, -13),
            s!(2, -4),
            s!(-2, 2),
            s!(2, 16),
            s!(4, 17),
            s!(11, 19),
            s!(20, 3),
            s!(10, -8),
            s!(0, 1),
            s!(12, -1),
            s!(9, 5),
            s!(-3, 14),
            s!(33, 19),
            s!(13, 15),
            s!(25, 13),
            s!(5, 4),
            s!(38, -12),
            s!(-13, -9),
            s!(-8, -4),
            s!(-12, 20),
            s!(22, 13),
            s!(47, -5),
            s!(75, -6),
            s!(33, -16),
            s!(-5, -5),
            s!(-64, 0),
            s!(-40, 5),
            s!(47, -16),
            s!(7, -1),
            s!(56, -20),
            s!(44, -20),
            s!(1, -10),
            s!(1, -24),
            s!(-216, 32),
            s!(-40, -36),
            s!(-60, -1),
            s!(-77, 6),
            s!(9, -11),
            s!(-108, 0),
            s!(-119, -11),
            s!(-116, -29),
        ],
        [
            s!(54, -23),
            s!(32, -10),
            s!(46, -17),
            s!(37, -6),
            s!(32, -8),
            s!(25, -2),
            s!(51, -27),
            s!(52, -19),
            s!(37, -9),
            s!(56, -18),
            s!(42, -13),
            s!(40, -6),
            s!(42, -4),
            s!(60, -13),
            s!(70, -15),
            s!(50, -18),
            s!(53, -18),
            s!(48, -8),
            s!(42, -3),
            s!(36, 3),
            s!(43, 3),
            s!(47, -5),
            s!(36, -16),
            s!(50, -15),
            s!(26, -12),
            s!(22, -6),
            s!(32, 2),
            s!(40, 1),
            s!(47, 0),
            s!(29, 2),
            s!(33, -13),
            s!(25, -12),
            s!(0, 3),
            s!(26, 0),
            s!(25, 0),
            s!(30, 8),
            s!(33, 5),
            s!(11, 0),
            s!(40, -11),
            s!(22, -10),
            s!(4, 0),
            s!(11, -1),
            s!(44, -4),
            s!(8, 8),
            s!(54, -6),
            s!(48, 2),
            s!(46, -8),
            s!(50, -11),
            s!(-11, -4),
            s!(8, -3),
            s!(-5, -2),
            s!(3, -10),
            s!(8, -3),
            s!(54, -17),
            s!(-1, 0),
            s!(39, -31),
            s!(-15, -5),
            s!(-40, -12),
            s!(-9, -12),
            s!(-38, -2),
            s!(-76, 0),
            s!(-21, -7),
            s!(-9, -10),
            s!(-46, 2),
        ],
        [
            s!(-11, 0),
            s!(-5, 0),
            s!(9, -3),
            s!(15, -1),
            s!(22, -11),
            s!(7, -6),
            s!(-5, -6),
            s!(9, -29),
            s!(-26, -3),
            s!(-16, -2),
            s!(-15, 2),
            s!(-3, -4),
            s!(1, -6),
            s!(0, -6),
            s!(22, -14),
            s!(-32, -6),
            s!(-31, -1),
            s!(-21, 0),
            s!(-13, -2),
            s!(2, -6),
            s!(0, -6),
            s!(0, -10),
            s!(23, -21),
            s!(5, -17),
            s!(-31, 5),
            s!(-39, 7),
            s!(-31, 9),
            s!(-19, 8),
            s!(-12, 3),
            s!(-13, 0),
            s!(9, -11),
            s!(-6, -11),
            s!(-31, 8),
            s!(-6, 0),
            s!(3, 4),
            s!(13, -1),
            s!(0, 1),
            s!(15, -3),
            s!(36, -11),
            s!(19, -9),
            s!(-4, 5),
            s!(-2, 5),
            s!(-3, 3),
            s!(29, -4),
            s!(37, -10),
            s!(53, -13),
            s!(83, -19),
            s!(56, -18),
            s!(-12, 9),
            s!(-27, 21),
            s!(3, 11),
            s!(33, 1),
            s!(1, 2),
            s!(58, -9),
            s!(73, -12),
            s!(37, -9),
            s!(9, 11),
            s!(26, 3),
            s!(24, 6),
            s!(20, 1),
            s!(54, -7),
            s!(89, -18),
            s!(78, -16),
            s!(14, 0),
        ],
        [
            s!(27, -37),
            s!(22, -39),
            s!(25, -39),
            s!(33, -51),
            s!(27, -33),
            s!(12, -35),
            s!(4, -36),
            s!(45, -67),
            s!(13, -19),
            s!(15, -22),
            s!(16, -23),
            s!(22, -24),
            s!(25, -29),
            s!(36, -54),
            s!(34, -56),
            s!(28, -31),
            s!(0, -34),
            s!(13, -40),
            s!(1, 6),
            s!(11, -14),
            s!(7, 4),
            s!(13, -3),
            s!(14, 8),
            s!(8, -6),
            s!(0, -14),
            s!(-3, 0),
            s!(0, 0),
            s!(-7, 27),
            s!(2, 17),
            s!(7, 6),
            s!(12, 11),
            s!(4, 6),
            s!(-16, -14),
            s!(-4, 7),
            s!(-13, 5),
            s!(-11, 30),
            s!(-8, 48),
            s!(-2, 50),
            s!(0, 34),
            s!(25, 10),
            s!(-13, -18),
            s!(-17, -4),
            s!(3, 17),
            s!(10, 10),
            s!(30, 43),
            s!(58, 6),
            s!(105, -33),
            s!(69, -18),
            s!(-21, 4),
            s!(-37, 9),
            s!(-35, 23),
            s!(-60, 70),
            s!(-49, 55),
            s!(73, 27),
            s!(0, 47),
            s!(126, -71),
            s!(-20, -3),
            s!(-23, 15),
            s!(25, -6),
            s!(29, 6),
            s!(82, -26),
            s!(80, -15),
            s!(-15, 5),
            s!(-24, 35),
        ],
        [
            s!(-69, -8),
            s!(7, -11),
            s!(-11, 1),
            s!(-76, 11),
            s!(-14, -4),
            s!(-36, 5),
            s!(25, -21),
            s!(9, -38),
            s!(11, -19),
            s!(-40, 6),
            s!(-52, 18),
            s!(-79, 28),
            s!(-67, 27),
            s!(-51, 26),
            s!(-1, 8),
            s!(2, -7),
            s!(-9, -22),
            s!(3, -3),
            s!(-72, 19),
            s!(-85, 28),
            s!(-84, 30),
            s!(-57, 25),
            s!(-24, 11),
            s!(-40, 1),
            s!(7, -30),
            s!(6, -10),
            s!(-9, 7),
            s!(-70, 21),
            s!(-57, 22),
            s!(-71, 23),
            s!(-35, 8),
            s!(-73, 2),
            s!(-7, -24),
            s!(2, -5),
            s!(22, 2),
            s!(-10, 11),
            s!(-24, 12),
            s!(-11, 15),
            s!(11, 7),
            s!(-38, 2),
            s!(36, -19),
            s!(121, -9),
            s!(33, 1),
            s!(60, -2),
            s!(-4, 10),
            s!(64, 11),
            s!(75, 11),
            s!(-2, 6),
            s!(25, -17),
            s!(98, -6),
            s!(68, -4),
            s!(51, -5),
            s!(50, 0),
            s!(87, 6),
            s!(4, 18),
            s!(-23, 6),
            s!(90, -53),
            s!(51, -16),
            s!(96, -23),
            s!(50, -13),
            s!(75, -14),
            s!(77, -6),
            s!(56, -9),
            s!(43, -28),
        ],
    ]),
};
