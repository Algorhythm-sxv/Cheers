#[cfg(feature = "eval-tracing")]
use bytemuck::{Pod, Zeroable};

use super::eval_types::*;

#[cfg_attr(feature = "eval-tracing", derive(Pod, Zeroable))]
#[derive(Copy, Clone, Debug, PartialEq, Eq)]
#[repr(C)]
pub struct EvalParams {
    pub piece_values: PieceValues,

    pub knight_mobility: [EvalScore; 9],

    pub bishop_mobility: [EvalScore; 14],

    pub rook_mobility: [EvalScore; 15],

    pub queen_mobility: [EvalScore; 28],

    pub pawn_connected: [EvalScore; 3],
    pub pawn_phalanx: [EvalScore; 3],
    pub pawn_isolated: [EvalScore; 2],
    pub pawn_doubled: [EvalScore; 6],
    pub pawn_backward: [EvalScore; 2],

    pub passed_pawn_friendly_king_distance: [EvalScore; 4],
    pub passed_pawn_enemy_king_distance: [EvalScore; 4],
    pub passed_pawn_table: [EvalScore; 64],

    pub piece_tables: PieceTables,
}

#[cfg(feature = "eval-tracing")]
impl EvalParams {
    pub const LEN: usize = std::mem::size_of::<Self>() / std::mem::size_of::<i16>();
    pub fn to_array(&mut self) -> [i16; Self::LEN] {
        let array = &mut bytemuck::cast::<EvalParams, [i16; Self::LEN]>(*self);
        array
            .chunks_exact_mut(2)
            .for_each(|p| EvalScore::convert(p));
        *array
    }
    pub fn as_array(&self) -> &[i16; Self::LEN] {
        bytemuck::cast_ref::<EvalParams, [i16; Self::LEN]>(self)
    }
    pub fn from_array(mut params: [i16; Self::LEN]) -> Self {
        params.chunks_exact_mut(2).for_each(|p| {
            let score = EvalScore::new(p[0], p[1]);
            p[1] = (score.inner() >> 16) as i16;
            p[0] = score.inner() as i16;
        });
        bytemuck::cast::<[i16; Self::LEN], EvalParams>(params)
    }
}

#[cfg_attr(feature = "eval-tracing", derive(Pod, Zeroable))]
#[derive(Clone, Copy)]
#[repr(C)]
pub struct EvalTrace {
    pub pawn_count: [i16; 2],
    pub knight_count: [i16; 2],
    pub bishop_count: [i16; 2],
    pub rook_count: [i16; 2],
    pub queen_count: [i16; 2],
    // pads to the length of PieceValues
    pub king_count: [i16; 2],

    pub knight_mobility: [[i16; 2]; 9],
    pub bishop_mobility: [[i16; 2]; 14],
    pub rook_mobility: [[i16; 2]; 15],
    pub queen_mobility: [[i16; 2]; 28],

    pub pawn_connected: [[i16; 2]; 3],
    pub pawn_phalanx: [[i16; 2]; 3],
    pub pawn_isolated: [[i16; 2]; 2],
    pub pawn_doubled: [[i16; 2]; 6],
    pub pawn_backward: [[i16; 2]; 2],

    pub passed_pawn_friendly_king_distance: [[i16; 2]; 4],
    pub passed_pawn_enemy_king_distance: [[i16; 2]; 4],
    pub passed_pawn_placement: [[i16; 2]; 64],

    pub pawn_placement: [[i16; 2]; 64],
    pub knight_placement: [[i16; 2]; 64],
    pub bishop_placement: [[i16; 2]; 64],
    pub rook_placement: [[i16; 2]; 64],
    pub queen_placement: [[i16; 2]; 64],
    pub king_placement: [[i16; 2]; 64],

    pub turn: i16,
}

#[cfg(feature = "eval-tracing")]
impl EvalTrace {
    pub const LEN: usize = std::mem::size_of::<Self>() / std::mem::size_of::<i16>();
    pub fn new() -> Self {
        bytemuck::cast::<[i16; Self::LEN], Self>([0i16; Self::LEN])
    }
    pub fn to_array(&self) -> [i16; Self::LEN] {
        bytemuck::cast::<Self, [i16; Self::LEN]>(*self)
    }
}

#[cfg(feature = "eval-tracing")]
impl Default for EvalTrace {
    fn default() -> Self {
        Self::new()
    }
}

// static assert that eval params and trace are the same length (plus 1 for turn in trace)
#[cfg(feature = "eval-tracing")]
const _PARAMS_TRACE_LEN_EQ: () = if EvalParams::LEN + 1 == EvalTrace::LEN {
    ()
} else {
    panic!("Eval parameters and trace are not equal length!")
};

pub const CHECKMATE_SCORE: i16 = 30000;
pub const DRAW_SCORE: i16 = 0;

pub static EVAL_PARAMS: EvalParams = EvalParams {
    piece_values: PieceValues([
        s!(72, 116),
        s!(407, 209),
        s!(417, 230),
        s!(557, 404),
        s!(1179, 738),
        s!(0, 0),
    ]),
    knight_mobility: [
        s!(-92, -86),
        s!(-57, -42),
        s!(-32, -18),
        s!(-28, 1),
        s!(-11, -6),
        s!(-7, 5),
        s!(1, 2),
        s!(10, 3),
        s!(21, -8),
    ],
    bishop_mobility: [
        s!(-47, -48),
        s!(-59, -31),
        s!(-40, -28),
        s!(-26, -13),
        s!(-18, -7),
        s!(-9, 0),
        s!(-4, 4),
        s!(0, 5),
        s!(6, 8),
        s!(9, 5),
        s!(18, 5),
        s!(33, -6),
        s!(36, 5),
        s!(42, -13),
    ],
    rook_mobility: [
        s!(-83, -87),
        s!(-74, -48),
        s!(-22, -27),
        s!(-15, -10),
        s!(-11, -7),
        s!(-4, -7),
        s!(-2, 0),
        s!(7, 0),
        s!(13, 4),
        s!(25, 2),
        s!(33, 6),
        s!(42, 7),
        s!(51, 10),
        s!(54, 10),
        s!(86, -5),
    ],
    queen_mobility: [
        s!(0, 0),
        s!(-78, -40),
        s!(-154, -6),
        s!(-66, -123),
        s!(-48, -64),
        s!(-40, -90),
        s!(-33, -59),
        s!(-31, -36),
        s!(-30, -4),
        s!(-23, -16),
        s!(-24, 14),
        s!(-19, 10),
        s!(-12, 19),
        s!(-10, 18),
        s!(-6, 25),
        s!(-4, 29),
        s!(-9, 42),
        s!(0, 37),
        s!(-7, 49),
        s!(-9, 55),
        s!(6, 46),
        s!(14, 49),
        s!(0, 51),
        s!(60, 10),
        s!(98, -1),
        s!(41, 26),
        s!(191, -63),
        s!(279, -103),
    ],
    pawn_connected: [s!(-14, -20), s!(2, -7), s!(20, -1)],
    pawn_phalanx: [s!(-1, 1), s!(7, 4), s!(8, -7)],
    pawn_isolated: [s!(4, 3), s!(-3, 3)],
    pawn_doubled: [
        s!(0, 2),
        s!(0, -5),
        s!(6, -26),
        s!(0, 57),
        s!(0, 0),
        s!(0, 0),
    ],
    pawn_backward: [s!(5, 5), s!(-2, 1)],
    passed_pawn_friendly_king_distance: [s!(7, 13), s!(-2, 3), s!(-7, -11), s!(-8, -15)],
    passed_pawn_enemy_king_distance: [s!(20, -57), s!(35, -23), s!(5, 6), s!(-3, 21)],
    passed_pawn_table: [
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(17, -10),
        s!(7, 5),
        s!(11, -20),
        s!(-11, -32),
        s!(-5, -15),
        s!(6, -20),
        s!(52, -18),
        s!(4, -15),
        s!(20, -1),
        s!(21, 4),
        s!(11, -7),
        s!(-21, -6),
        s!(3, -9),
        s!(13, 0),
        s!(18, 6),
        s!(30, -7),
        s!(23, 24),
        s!(11, 25),
        s!(-8, 25),
        s!(-9, 21),
        s!(-20, 23),
        s!(-35, 33),
        s!(-65, 48),
        s!(5, 27),
        s!(25, 48),
        s!(26, 54),
        s!(5, 44),
        s!(-14, 48),
        s!(-12, 44),
        s!(13, 46),
        s!(-1, 60),
        s!(-20, 53),
        s!(36, 103),
        s!(21, 84),
        s!(7, 63),
        s!(8, 40),
        s!(-19, 58),
        s!(-6, 88),
        s!(-42, 88),
        s!(-70, 116),
        s!(62, -7),
        s!(88, 0),
        s!(6, 81),
        s!(25, 9),
        s!(2, 4),
        s!(4, 50),
        s!(14, 99),
        s!(-47, 77),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
    ],
    piece_tables: PieceTables([
        [
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(-12, -31),
            s!(-2, -35),
            s!(0, -25),
            s!(6, -23),
            s!(11, -32),
            s!(35, -36),
            s!(40, -49),
            s!(8, -48),
            s!(-19, -38),
            s!(-21, -41),
            s!(-5, -39),
            s!(-3, -32),
            s!(7, -38),
            s!(-7, -40),
            s!(14, -53),
            s!(-4, -49),
            s!(-19, -33),
            s!(-19, -34),
            s!(0, -45),
            s!(10, -48),
            s!(13, -47),
            s!(8, -50),
            s!(-1, -47),
            s!(-22, -45),
            s!(-8, -20),
            s!(-12, -26),
            s!(-4, -29),
            s!(9, -39),
            s!(15, -41),
            s!(8, -39),
            s!(-5, -34),
            s!(-5, -33),
            s!(-12, -2),
            s!(-8, 11),
            s!(6, 20),
            s!(-4, 26),
            s!(18, 5),
            s!(63, -24),
            s!(16, 0),
            s!(13, -16),
            s!(-11, 151),
            s!(-9, 136),
            s!(8, 62),
            s!(3, 107),
            s!(48, 104),
            s!(54, 67),
            s!(10, 54),
            s!(7, 68),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
        ],
        [
            s!(-34, -20),
            s!(5, -13),
            s!(-24, -4),
            s!(-12, 1),
            s!(-7, -4),
            s!(-7, 2),
            s!(0, -17),
            s!(-41, 1),
            s!(2, -23),
            s!(-14, -8),
            s!(-2, -11),
            s!(11, -4),
            s!(13, -5),
            s!(10, -5),
            s!(13, -10),
            s!(12, -17),
            s!(-9, -11),
            s!(-8, 1),
            s!(0, 0),
            s!(-4, 18),
            s!(7, 15),
            s!(6, 0),
            s!(17, -12),
            s!(-6, -14),
            s!(3, -4),
            s!(-2, 2),
            s!(2, 19),
            s!(5, 21),
            s!(9, 23),
            s!(18, 8),
            s!(6, -5),
            s!(0, 2),
            s!(16, -6),
            s!(9, 8),
            s!(-1, 17),
            s!(39, 21),
            s!(13, 19),
            s!(23, 17),
            s!(3, 7),
            s!(40, -15),
            s!(-10, -14),
            s!(4, -9),
            s!(-4, 18),
            s!(32, 11),
            s!(54, -7),
            s!(82, -6),
            s!(40, -19),
            s!(0, -11),
            s!(-58, -8),
            s!(-35, 0),
            s!(54, -22),
            s!(15, -7),
            s!(64, -26),
            s!(51, -26),
            s!(6, -15),
            s!(7, -32),
            s!(-209, 22),
            s!(-37, -43),
            s!(-56, -7),
            s!(-72, 0),
            s!(13, -17),
            s!(-101, -6),
            s!(-118, -17),
            s!(-109, -37),
        ],
        [
            s!(53, -24),
            s!(30, -10),
            s!(46, -18),
            s!(36, -7),
            s!(30, -8),
            s!(24, -3),
            s!(49, -27),
            s!(51, -21),
            s!(37, -10),
            s!(56, -20),
            s!(42, -14),
            s!(40, -8),
            s!(41, -5),
            s!(58, -13),
            s!(70, -17),
            s!(50, -19),
            s!(54, -20),
            s!(48, -9),
            s!(43, -4),
            s!(37, 3),
            s!(43, 3),
            s!(47, -6),
            s!(35, -17),
            s!(49, -16),
            s!(27, -14),
            s!(23, -7),
            s!(33, 1),
            s!(43, 0),
            s!(48, 0),
            s!(28, 2),
            s!(31, -14),
            s!(25, -14),
            s!(1, 1),
            s!(27, -1),
            s!(28, -1),
            s!(37, 6),
            s!(36, 4),
            s!(12, -1),
            s!(40, -12),
            s!(23, -12),
            s!(7, -2),
            s!(18, -5),
            s!(50, -7),
            s!(18, 4),
            s!(61, -9),
            s!(53, 0),
            s!(50, -11),
            s!(55, -15),
            s!(-8, -8),
            s!(14, -7),
            s!(-1, -5),
            s!(8, -14),
            s!(13, -6),
            s!(60, -21),
            s!(3, -2),
            s!(44, -35),
            s!(-9, -9),
            s!(-34, -16),
            s!(-5, -15),
            s!(-36, -4),
            s!(-76, -2),
            s!(-16, -10),
            s!(-7, -13),
            s!(-42, -1),
        ],
        [
            s!(-11, 0),
            s!(-5, 0),
            s!(9, -3),
            s!(15, -1),
            s!(23, -11),
            s!(8, -6),
            s!(-5, -6),
            s!(9, -30),
            s!(-27, -2),
            s!(-16, -2),
            s!(-16, 2),
            s!(-3, -4),
            s!(1, -6),
            s!(0, -6),
            s!(22, -14),
            s!(-33, -5),
            s!(-32, -1),
            s!(-21, 0),
            s!(-13, -2),
            s!(2, -7),
            s!(0, -6),
            s!(0, -10),
            s!(22, -20),
            s!(5, -17),
            s!(-32, 6),
            s!(-39, 7),
            s!(-32, 9),
            s!(-20, 8),
            s!(-13, 4),
            s!(-14, 0),
            s!(10, -11),
            s!(-7, -11),
            s!(-31, 9),
            s!(-7, 1),
            s!(3, 4),
            s!(13, -1),
            s!(0, 1),
            s!(14, -2),
            s!(37, -11),
            s!(18, -9),
            s!(-4, 5),
            s!(-3, 5),
            s!(-4, 4),
            s!(29, -3),
            s!(37, -10),
            s!(54, -13),
            s!(85, -19),
            s!(58, -18),
            s!(-13, 9),
            s!(-27, 21),
            s!(3, 12),
            s!(34, 1),
            s!(2, 2),
            s!(59, -9),
            s!(74, -12),
            s!(38, -9),
            s!(9, 11),
            s!(27, 3),
            s!(24, 6),
            s!(20, 2),
            s!(54, -6),
            s!(88, -17),
            s!(79, -16),
            s!(13, 0),
        ],
        [
            s!(27, -36),
            s!(22, -39),
            s!(26, -39),
            s!(34, -51),
            s!(27, -33),
            s!(12, -35),
            s!(2, -34),
            s!(47, -68),
            s!(13, -18),
            s!(15, -22),
            s!(17, -23),
            s!(23, -24),
            s!(26, -29),
            s!(37, -54),
            s!(34, -55),
            s!(29, -32),
            s!(0, -35),
            s!(14, -41),
            s!(1, 6),
            s!(12, -15),
            s!(7, 4),
            s!(14, -3),
            s!(15, 8),
            s!(8, -5),
            s!(0, -14),
            s!(-3, 0),
            s!(0, 0),
            s!(-7, 27),
            s!(3, 18),
            s!(8, 6),
            s!(12, 12),
            s!(5, 7),
            s!(-16, -14),
            s!(-3, 7),
            s!(-12, 5),
            s!(-11, 31),
            s!(-8, 49),
            s!(-1, 50),
            s!(0, 34),
            s!(26, 10),
            s!(-13, -19),
            s!(-16, -4),
            s!(4, 16),
            s!(12, 10),
            s!(32, 44),
            s!(58, 7),
            s!(109, -35),
            s!(70, -18),
            s!(-21, 4),
            s!(-37, 8),
            s!(-36, 24),
            s!(-61, 71),
            s!(-48, 55),
            s!(76, 26),
            s!(0, 48),
            s!(128, -71),
            s!(-17, -5),
            s!(-22, 15),
            s!(26, -6),
            s!(28, 8),
            s!(82, -25),
            s!(79, -13),
            s!(-14, 6),
            s!(-23, 36),
        ],
        [
            s!(-70, -8),
            s!(7, -11),
            s!(-12, 2),
            s!(-77, 11),
            s!(-14, -4),
            s!(-37, 6),
            s!(25, -21),
            s!(9, -38),
            s!(11, -20),
            s!(-41, 7),
            s!(-52, 18),
            s!(-81, 29),
            s!(-68, 28),
            s!(-52, 26),
            s!(-1, 9),
            s!(1, -6),
            s!(-8, -22),
            s!(2, -3),
            s!(-73, 19),
            s!(-85, 28),
            s!(-86, 31),
            s!(-58, 25),
            s!(-24, 11),
            s!(-41, 2),
            s!(8, -30),
            s!(8, -10),
            s!(-8, 7),
            s!(-70, 21),
            s!(-57, 23),
            s!(-72, 24),
            s!(-35, 8),
            s!(-74, 2),
            s!(-6, -24),
            s!(3, -5),
            s!(22, 3),
            s!(-9, 11),
            s!(-24, 12),
            s!(-10, 16),
            s!(12, 7),
            s!(-38, 3),
            s!(38, -19),
            s!(124, -9),
            s!(33, 1),
            s!(61, -1),
            s!(-3, 10),
            s!(65, 11),
            s!(76, 12),
            s!(-3, 6),
            s!(27, -17),
            s!(100, -6),
            s!(70, -4),
            s!(52, -5),
            s!(51, 0),
            s!(89, 6),
            s!(5, 19),
            s!(-22, 7),
            s!(97, -55),
            s!(53, -17),
            s!(99, -24),
            s!(56, -13),
            s!(80, -14),
            s!(80, -6),
            s!(56, -9),
            s!(47, -29),
        ],
    ]),
};
