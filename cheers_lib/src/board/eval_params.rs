#[cfg(feature = "eval-tracing")]
use bytemuck::{Pod, Zeroable};

use super::eval_types::*;

#[cfg_attr(feature = "eval-tracing", derive(Pod, Zeroable))]
#[derive(Copy, Clone, Debug, Default, PartialEq, Eq)]
#[repr(C)]
pub struct EvalParams {
    pub piece_values: PieceValues,
    pub knight_mobility: [EvalScore; 9],
    pub bishop_mobility: [EvalScore; 14],
    pub rook_mobility: [EvalScore; 15],
    pub queen_mobility: [EvalScore; 28],
    pub piece_tables: PieceTables,
}

#[cfg(feature = "eval-tracing")]
impl EvalParams {
    pub const LEN: usize = std::mem::size_of::<Self>() / std::mem::size_of::<i16>();
    pub fn to_array(&mut self) -> [i16; Self::LEN] {
        let array = &mut bytemuck::cast::<EvalParams, [i16; Self::LEN]>(*self);
        array
            .chunks_exact_mut(2)
            .for_each(|p| EvalScore::convert(p));
        *array
    }
    pub fn as_array(&self) -> &[i16; Self::LEN] {
        bytemuck::cast_ref::<EvalParams, [i16; Self::LEN]>(self)
    }
    pub fn from_array(mut params: [i16; Self::LEN]) -> Self {
        params.chunks_exact_mut(2).for_each(|p| {
            let score = EvalScore::new(p[0], p[1]);
            p[1] = (score.inner() >> 16) as i16;
            p[0] = score.inner() as i16;
        });
        bytemuck::cast::<[i16; Self::LEN], EvalParams>(params)
    }
}

#[cfg_attr(feature = "eval-tracing", derive(Pod, Zeroable))]
#[derive(Clone, Copy)]
#[repr(C)]
pub struct EvalTrace {
    pub pawn_count: [i16; 2],
    pub knight_count: [i16; 2],
    pub bishop_count: [i16; 2],
    pub rook_count: [i16; 2],
    pub queen_count: [i16; 2],
    // pads to the length of PieceValues
    pub king_count: [i16; 2],

    pub knight_mobility: [[i16; 2]; 9],
    pub bishop_mobility: [[i16; 2]; 14],
    pub rook_mobility: [[i16; 2]; 15],
    pub queen_mobility: [[i16; 2]; 28],

    pub pawn_placement: [[i16; 2]; 64],
    pub knight_placement: [[i16; 2]; 64],
    pub bishop_placement: [[i16; 2]; 64],
    pub rook_placement: [[i16; 2]; 64],
    pub queen_placement: [[i16; 2]; 64],
    pub king_placement: [[i16; 2]; 64],

    pub turn: i16,
}

#[cfg(feature = "eval-tracing")]
impl EvalTrace {
    pub const LEN: usize = std::mem::size_of::<Self>() / std::mem::size_of::<i16>();
    pub fn new() -> Self {
        bytemuck::cast::<[i16; Self::LEN], Self>([0i16; Self::LEN])
    }
    pub fn to_array(&self) -> [i16; Self::LEN] {
        bytemuck::cast::<Self, [i16; Self::LEN]>(*self)
    }
}

#[cfg(feature = "eval-tracing")]
impl Default for EvalTrace {
    fn default() -> Self {
        Self::new()
    }
}

// static assert that eval params and trace are the same length (plus 1 for turn in trace)
#[cfg(feature = "eval-tracing")]
const _PARAMS_TRACE_LEN_EQ: () = if EvalParams::LEN + 1 == EvalTrace::LEN {
    ()
} else {
    panic!("Eval parameters and trace are not equal length!")
};

pub const CHECKMATE_SCORE: i16 = 30000;
pub const DRAW_SCORE: i16 = 0;

pub static EVAL_PARAMS: EvalParams = EvalParams {
    piece_values: PieceValues([
        s!(92, 129),
        s!(425, 224),
        s!(442, 243),
        s!(608, 433),
        s!(1290, 793),
        s!(0, 0),
    ]),
    knight_mobility: [
        s!(-104, -65),
        s!(-53, -37),
        s!(-26, -13),
        s!(-22, 8),
        s!(-2, -2),
        s!(3, 9),
        s!(14, 6),
        s!(25, 6),
        s!(35, -5),
    ],
    bishop_mobility: [
        s!(-51, -41),
        s!(-55, -32),
        s!(-33, -32),
        s!(-16, -12),
        s!(-6, -6),
        s!(4, 1),
        s!(9, 8),
        s!(14, 8),
        s!(20, 13),
        s!(23, 8),
        s!(32, 10),
        s!(47, -2),
        s!(54, 6),
        s!(59, -10),
    ],
    rook_mobility: [
        s!(-72, -29),
        s!(-83, -48),
        s!(-26, -27),
        s!(-18, -9),
        s!(-15, -4),
        s!(-7, -6),
        s!(-5, 2),
        s!(4, 2),
        s!(11, 5),
        s!(25, 3),
        s!(35, 7),
        s!(43, 7),
        s!(50, 12),
        s!(55, 11),
        s!(82, -2),
    ],
    queen_mobility: [
        s!(0, 0),
        s!(-58, -15),
        s!(-147, -34),
        s!(-81, -53),
        s!(-44, -70),
        s!(-35, -104),
        s!(-28, -72),
        s!(-25, -49),
        s!(-24, -15),
        s!(-16, -30),
        s!(-16, 4),
        s!(-11, 3),
        s!(-3, 12),
        s!(0, 13),
        s!(3, 19),
        s!(6, 24),
        s!(0, 39),
        s!(10, 32),
        s!(3, 45),
        s!(0, 52),
        s!(14, 44),
        s!(22, 48),
        s!(8, 49),
        s!(73, 6),
        s!(98, 0),
        s!(42, 32),
        s!(75, 7),
        s!(136, -26),
    ],
    piece_tables: PieceTables([
        [
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(-25, -21),
            s!(6, -30),
            s!(-9, -32),
            s!(1, -30),
            s!(10, -36),
            s!(33, -39),
            s!(57, -46),
            s!(1, -47),
            s!(-32, -28),
            s!(-10, -33),
            s!(-9, -45),
            s!(-6, -37),
            s!(13, -44),
            s!(-13, -41),
            s!(35, -45),
            s!(-7, -44),
            s!(-40, -22),
            s!(-17, -28),
            s!(-15, -44),
            s!(0, -48),
            s!(0, -48),
            s!(-1, -50),
            s!(-4, -40),
            s!(-38, -39),
            s!(-30, 1),
            s!(-20, -9),
            s!(-23, -21),
            s!(-10, -34),
            s!(-2, -42),
            s!(-12, -35),
            s!(-13, -22),
            s!(-31, -21),
            s!(-40, 66),
            s!(-26, 64),
            s!(-17, 53),
            s!(-23, 36),
            s!(-5, 21),
            s!(31, 8),
            s!(-16, 39),
            s!(-35, 47),
            s!(12, 137),
            s!(5, 134),
            s!(-10, 121),
            s!(12, 88),
            s!(39, 76),
            s!(39, 89),
            s!(-27, 130),
            s!(-73, 129),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
        ],
        [
            s!(-25, -28),
            s!(18, -19),
            s!(-19, -10),
            s!(-5, -2),
            s!(0, -9),
            s!(-1, -2),
            s!(12, -23),
            s!(-40, -5),
            s!(13, -29),
            s!(-6, -14),
            s!(5, -17),
            s!(23, -9),
            s!(23, -9),
            s!(22, -11),
            s!(22, -19),
            s!(22, -21),
            s!(2, -19),
            s!(-2, -2),
            s!(6, -3),
            s!(2, 17),
            s!(15, 13),
            s!(13, -5),
            s!(25, -16),
            s!(1, -21),
            s!(13, -10),
            s!(6, -2),
            s!(9, 18),
            s!(15, 18),
            s!(19, 22),
            s!(27, 6),
            s!(15, -10),
            s!(9, -2),
            s!(30, -12),
            s!(19, 6),
            s!(7, 15),
            s!(49, 20),
            s!(20, 18),
            s!(30, 16),
            s!(10, 6),
            s!(49, -17),
            s!(0, -19),
            s!(15, -16),
            s!(4, 17),
            s!(46, 10),
            s!(71, -11),
            s!(101, -9),
            s!(55, -25),
            s!(7, -15),
            s!(-44, -21),
            s!(-21, -8),
            s!(76, -28),
            s!(25, -12),
            s!(85, -34),
            s!(71, -33),
            s!(20, -24),
            s!(19, -43),
            s!(-209, 16),
            s!(-36, -50),
            s!(-45, -13),
            s!(-60, -5),
            s!(33, -27),
            s!(-101, -13),
            s!(-113, -22),
            s!(-103, -51),
        ],
        [
            s!(63, -29),
            s!(29, -12),
            s!(49, -20),
            s!(33, -6),
            s!(28, -8),
            s!(22, -5),
            s!(53, -31),
            s!(52, -22),
            s!(35, -13),
            s!(60, -22),
            s!(40, -17),
            s!(41, -10),
            s!(39, -6),
            s!(66, -17),
            s!(71, -16),
            s!(52, -19),
            s!(59, -23),
            s!(46, -9),
            s!(45, -6),
            s!(36, 2),
            s!(46, 1),
            s!(45, -6),
            s!(35, -19),
            s!(50, -18),
            s!(28, -17),
            s!(26, -9),
            s!(30, 2),
            s!(48, -2),
            s!(51, -1),
            s!(29, 2),
            s!(30, -16),
            s!(25, -17),
            s!(-2, 1),
            s!(25, 0),
            s!(30, -2),
            s!(38, 7),
            s!(39, 4),
            s!(10, -2),
            s!(40, -13),
            s!(16, -11),
            s!(2, -1),
            s!(19, -6),
            s!(54, -8),
            s!(18, 5),
            s!(62, -11),
            s!(58, 0),
            s!(57, -11),
            s!(57, -15),
            s!(-5, -13),
            s!(20, -9),
            s!(1, -7),
            s!(6, -16),
            s!(20, -9),
            s!(62, -24),
            s!(12, -6),
            s!(41, -37),
            s!(-12, -8),
            s!(-33, -18),
            s!(-12, -16),
            s!(-38, -3),
            s!(-85, -1),
            s!(-11, -13),
            s!(-4, -19),
            s!(-44, -1),
        ],
        [
            s!(-9, 0),
            s!(-4, 1),
            s!(11, -2),
            s!(18, 0),
            s!(26, -11),
            s!(10, -5),
            s!(-4, -7),
            s!(14, -32),
            s!(-28, -1),
            s!(-15, -3),
            s!(-16, 2),
            s!(-1, -2),
            s!(2, -6),
            s!(4, -6),
            s!(31, -16),
            s!(-33, -5),
            s!(-31, -3),
            s!(-22, -1),
            s!(-12, -2),
            s!(5, -8),
            s!(4, -7),
            s!(3, -12),
            s!(25, -23),
            s!(9, -19),
            s!(-31, 4),
            s!(-35, 7),
            s!(-35, 11),
            s!(-17, 8),
            s!(-10, 4),
            s!(-11, 0),
            s!(8, -11),
            s!(-2, -15),
            s!(-33, 10),
            s!(-10, 2),
            s!(5, 5),
            s!(16, 0),
            s!(1, 1),
            s!(15, -1),
            s!(42, -12),
            s!(29, -11),
            s!(-7, 7),
            s!(1, 6),
            s!(-1, 6),
            s!(37, -3),
            s!(46, -11),
            s!(61, -12),
            s!(87, -17),
            s!(63, -17),
            s!(-11, 11),
            s!(-24, 24),
            s!(10, 13),
            s!(43, 1),
            s!(10, 2),
            s!(69, -8),
            s!(88, -14),
            s!(42, -10),
            s!(16, 13),
            s!(31, 5),
            s!(33, 6),
            s!(27, 3),
            s!(67, -8),
            s!(114, -23),
            s!(89, -18),
            s!(20, 0),
        ],
        [
            s!(25, -35),
            s!(21, -40),
            s!(26, -42),
            s!(35, -53),
            s!(26, -33),
            s!(9, -34),
            s!(-2, -33),
            s!(43, -68),
            s!(10, -17),
            s!(16, -21),
            s!(15, -23),
            s!(23, -24),
            s!(26, -32),
            s!(42, -58),
            s!(39, -59),
            s!(36, -34),
            s!(-2, -36),
            s!(12, -41),
            s!(-1, 9),
            s!(9, -13),
            s!(6, 5),
            s!(11, 0),
            s!(13, 11),
            s!(5, -3),
            s!(-3, -15),
            s!(-5, 0),
            s!(-3, 0),
            s!(-10, 33),
            s!(2, 19),
            s!(5, 8),
            s!(10, 17),
            s!(2, 8),
            s!(-22, -11),
            s!(-8, 5),
            s!(-17, 7),
            s!(-16, 33),
            s!(-9, 52),
            s!(-6, 57),
            s!(-2, 38),
            s!(25, 15),
            s!(-19, -19),
            s!(-21, -1),
            s!(5, 17),
            s!(12, 11),
            s!(34, 47),
            s!(69, 2),
            s!(115, -35),
            s!(74, -18),
            s!(-23, 5),
            s!(-37, 6),
            s!(-38, 26),
            s!(-66, 78),
            s!(-52, 62),
            s!(82, 31),
            s!(5, 46),
            s!(135, -75),
            s!(-16, -8),
            s!(-24, 15),
            s!(28, -8),
            s!(30, 8),
            s!(84, -23),
            s!(85, -14),
            s!(-17, 3),
            s!(-18, 33),
        ],
        [
            s!(-78, -20),
            s!(6, -21),
            s!(-14, -6),
            s!(-85, 4),
            s!(-17, -13),
            s!(-43, -1),
            s!(24, -31),
            s!(8, -51),
            s!(18, -26),
            s!(-45, 4),
            s!(-60, 19),
            s!(-90, 30),
            s!(-79, 30),
            s!(-61, 27),
            s!(-5, 6),
            s!(-3, -11),
            s!(1, -26),
            s!(5, 0),
            s!(-86, 27),
            s!(-96, 37),
            s!(-100, 40),
            s!(-76, 35),
            s!(-32, 17),
            s!(-50, 4),
            s!(36, -32),
            s!(17, -3),
            s!(3, 16),
            s!(-72, 33),
            s!(-65, 36),
            s!(-83, 39),
            s!(-48, 22),
            s!(-86, 10),
            s!(11, -22),
            s!(19, 1),
            s!(43, 11),
            s!(1, 22),
            s!(-19, 24),
            s!(-11, 30),
            s!(4, 23),
            s!(-49, 15),
            s!(53, -16),
            s!(144, -2),
            s!(48, 10),
            s!(71, 6),
            s!(11, 19),
            s!(77, 22),
            s!(88, 25),
            s!(-19, 18),
            s!(58, -21),
            s!(132, -7),
            s!(88, -3),
            s!(64, -2),
            s!(70, 2),
            s!(124, 11),
            s!(19, 25),
            s!(-25, 14),
            s!(116, -61),
            s!(76, -24),
            s!(111, -27),
            s!(86, -19),
            s!(101, -18),
            s!(102, -7),
            s!(56, -6),
            s!(56, -33),
        ],
    ]),
};
