#[cfg(feature = "eval-tracing")]
use bytemuck::{Pod, Zeroable};

use super::eval_types::*;

#[cfg_attr(feature = "eval-tracing", derive(Pod, Zeroable))]
#[derive(Copy, Clone, Debug, PartialEq, Eq)]
#[repr(C)]
pub struct EvalParams {
    pub piece_values: PieceValues,

    pub knight_mobility: [EvalScore; 9],
    pub knight_outpost: [EvalScore; 3],

    pub bishop_mobility: [EvalScore; 14],
    pub bishop_outpost: [EvalScore; 3],

    pub rook_mobility: [EvalScore; 15],
    pub rook_on_open_file: [EvalScore; 3],

    pub queen_mobility: [EvalScore; 28],

    pub king_on_open_file: [EvalScore; 3],
    pub king_ring_attacks: [EvalScore; 16],

    pub pawn_connected: [EvalScore; 3],
    pub pawn_phalanx: [EvalScore; 3],
    pub pawn_isolated: [EvalScore; 2],
    pub pawn_doubled: [EvalScore; 6],
    pub pawn_backward: [EvalScore; 2],

    pub passed_pawn_friendly_king_distance: [EvalScore; 4],
    pub passed_pawn_enemy_king_distance: [EvalScore; 4],
    pub passed_pawn_table: [EvalScore; 64],

    pub piece_tables: PieceTables,
}

#[cfg(feature = "eval-tracing")]
impl EvalParams {
    pub const LEN: usize = std::mem::size_of::<Self>() / std::mem::size_of::<i16>();
    pub fn to_array(&mut self) -> [i16; Self::LEN] {
        let array = &mut bytemuck::cast::<EvalParams, [i16; Self::LEN]>(*self);
        array
            .chunks_exact_mut(2)
            .for_each(|p| EvalScore::convert(p));
        *array
    }
    pub fn as_array(&self) -> &[i16; Self::LEN] {
        bytemuck::cast_ref::<EvalParams, [i16; Self::LEN]>(self)
    }
    pub fn from_array(mut params: [i16; Self::LEN]) -> Self {
        params.chunks_exact_mut(2).for_each(|p| {
            let score = EvalScore::new(p[0], p[1]);
            p[1] = (score.inner() >> 16) as i16;
            p[0] = score.inner() as i16;
        });
        bytemuck::cast::<[i16; Self::LEN], EvalParams>(params)
    }
}

#[cfg_attr(feature = "eval-tracing", derive(Pod, Zeroable))]
#[derive(Clone, Copy)]
#[repr(C)]
pub struct EvalTrace {
    pub pawn_count: [i16; 2],
    pub knight_count: [i16; 2],
    pub bishop_count: [i16; 2],
    pub rook_count: [i16; 2],
    pub queen_count: [i16; 2],
    // pads to the length of PieceValues
    pub king_count: [i16; 2],

    pub knight_mobility: [[i16; 2]; 9],
    pub knight_outpost: [[i16; 2]; 3],

    pub bishop_mobility: [[i16; 2]; 14],
    pub bishop_outpost: [[i16; 2]; 3],

    pub rook_mobility: [[i16; 2]; 15],
    pub rook_on_open_file: [[i16; 2]; 3],

    pub queen_mobility: [[i16; 2]; 28],

    pub king_on_open_file: [[i16; 2]; 3],
    pub king_ring_attacks: [[i16; 2]; 16],

    pub pawn_connected: [[i16; 2]; 3],
    pub pawn_phalanx: [[i16; 2]; 3],
    pub pawn_isolated: [[i16; 2]; 2],
    pub pawn_doubled: [[i16; 2]; 6],
    pub pawn_backward: [[i16; 2]; 2],

    pub passed_pawn_friendly_king_distance: [[i16; 2]; 4],
    pub passed_pawn_enemy_king_distance: [[i16; 2]; 4],
    pub passed_pawn_placement: [[i16; 2]; 64],

    pub pawn_placement: [[i16; 2]; 64],
    pub knight_placement: [[i16; 2]; 64],
    pub bishop_placement: [[i16; 2]; 64],
    pub rook_placement: [[i16; 2]; 64],
    pub queen_placement: [[i16; 2]; 64],
    pub king_placement: [[i16; 2]; 64],

    pub turn: i16,
}

#[cfg(feature = "eval-tracing")]
impl EvalTrace {
    pub const LEN: usize = std::mem::size_of::<Self>() / std::mem::size_of::<i16>();
    pub fn new() -> Self {
        bytemuck::cast::<[i16; Self::LEN], Self>([0i16; Self::LEN])
    }
    pub fn to_array(&self) -> [i16; Self::LEN] {
        bytemuck::cast::<Self, [i16; Self::LEN]>(*self)
    }
}

#[cfg(feature = "eval-tracing")]
impl Default for EvalTrace {
    fn default() -> Self {
        Self::new()
    }
}

// static assert that eval params and trace are the same length (plus 1 for turn in trace)
#[cfg(feature = "eval-tracing")]
const _PARAMS_TRACE_LEN_EQ: () = if EvalParams::LEN + 1 == EvalTrace::LEN {
    ()
} else {
    panic!("Eval parameters and trace are not equal length!")
};

pub const CHECKMATE_SCORE: i16 = 30000;
pub const DRAW_SCORE: i16 = 0;

pub static EVAL_PARAMS: EvalParams = EvalParams {
    piece_values: PieceValues([
        s!(66, 115),
        s!(408, 203),
        s!(403, 221),
        s!(532, 389),
        s!(1105, 704),
        s!(0, 0),
    ]),
    knight_mobility: [
        s!(-89, -89),
        s!(-60, -45),
        s!(-38, -21),
        s!(-34, -2),
        s!(-19, -7),
        s!(-14, 4),
        s!(-6, 1),
        s!(2, 3),
        s!(12, -5),
    ],
    knight_outpost: [s!(-21, -1), s!(-10, -11), s!(3, 4)],
    bishop_mobility: [
        s!(-41, -43),
        s!(-56, -21),
        s!(-36, -21),
        s!(-23, -8),
        s!(-15, -2),
        s!(-7, 5),
        s!(-2, 10),
        s!(1, 11),
        s!(6, 14),
        s!(10, 11),
        s!(18, 12),
        s!(29, 3),
        s!(29, 15),
        s!(35, -2),
    ],
    bishop_outpost: [s!(-15, -8), s!(-9, -12), s!(19, -14)],
    rook_mobility: [
        s!(-80, -102),
        s!(-75, -46),
        s!(-20, -29),
        s!(-14, -10),
        s!(-12, -8),
        s!(-7, -9),
        s!(-5, -1),
        s!(0, -2),
        s!(2, 1),
        s!(10, 0),
        s!(13, 5),
        s!(16, 7),
        s!(22, 10),
        s!(21, 11),
        s!(53, -4),
    ],
    rook_on_open_file: [s!(-11, -3), s!(0, 8), s!(19, -7)],
    queen_mobility: [
        s!(0, 0),
        s!(-73, -53),
        s!(-141, 1),
        s!(-53, -131),
        s!(-38, -68),
        s!(-33, -82),
        s!(-28, -54),
        s!(-27, -30),
        s!(-26, -2),
        s!(-21, -14),
        s!(-22, 15),
        s!(-18, 12),
        s!(-12, 20),
        s!(-10, 19),
        s!(-8, 25),
        s!(-6, 29),
        s!(-11, 41),
        s!(-2, 37),
        s!(-10, 48),
        s!(-14, 54),
        s!(-1, 46),
        s!(9, 46),
        s!(-7, 50),
        s!(50, 8),
        s!(93, -6),
        s!(17, 29),
        s!(172, -63),
        s!(356, -153),
    ],
    king_on_open_file: [s!(14, 1), s!(-7, 16), s!(-33, 2)],
    king_ring_attacks: [
        s!(42, -13),
        s!(38, -8),
        s!(26, -2),
        s!(10, -6),
        s!(-40, 16),
        s!(-144, 65),
        s!(-182, 83),
        s!(-215, 94),
        s!(-188, -61),
        s!(-133, -23),
        s!(2, 33),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
    ],
    pawn_connected: [s!(-16, -18), s!(0, -6), s!(15, 0)],
    pawn_phalanx: [s!(0, 1), s!(7, 4), s!(8, -6)],
    pawn_isolated: [s!(4, 7), s!(0, 6)],
    pawn_doubled: [
        s!(0, 3),
        s!(0, -7),
        s!(3, -31),
        s!(0, 69),
        s!(0, 0),
        s!(0, 0),
    ],
    pawn_backward: [s!(7, 10), s!(0, 5)],
    passed_pawn_friendly_king_distance: [s!(-1, 11), s!(-4, 0), s!(-9, -13), s!(-11, -16)],
    passed_pawn_enemy_king_distance: [s!(6, -46), s!(25, -19), s!(0, 6), s!(-5, 20)],
    passed_pawn_table: [
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(18, -5),
        s!(12, 6),
        s!(10, -15),
        s!(-3, -29),
        s!(5, -14),
        s!(11, -17),
        s!(48, -14),
        s!(14, -11),
        s!(22, 1),
        s!(21, 7),
        s!(16, -4),
        s!(-13, -4),
        s!(11, -9),
        s!(14, 1),
        s!(18, 8),
        s!(27, -3),
        s!(23, 25),
        s!(14, 26),
        s!(-2, 25),
        s!(0, 21),
        s!(-12, 21),
        s!(-26, 32),
        s!(-47, 44),
        s!(8, 28),
        s!(27, 47),
        s!(27, 53),
        s!(11, 43),
        s!(-2, 45),
        s!(3, 40),
        s!(20, 44),
        s!(13, 56),
        s!(-13, 52),
        s!(40, 99),
        s!(25, 81),
        s!(13, 60),
        s!(19, 37),
        s!(2, 52),
        s!(-6, 84),
        s!(-29, 82),
        s!(-53, 109),
        s!(69, -6),
        s!(91, 1),
        s!(12, 81),
        s!(34, 10),
        s!(27, 0),
        s!(16, 46),
        s!(22, 94),
        s!(-33, 81),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
    ],
    piece_tables: PieceTables([
        [
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(-6, -43),
            s!(1, -47),
            s!(0, -37),
            s!(6, -35),
            s!(3, -40),
            s!(37, -47),
            s!(35, -57),
            s!(10, -59),
            s!(-11, -50),
            s!(-15, -53),
            s!(-3, -50),
            s!(-2, -43),
            s!(1, -46),
            s!(-3, -50),
            s!(11, -61),
            s!(-1, -60),
            s!(-8, -47),
            s!(-11, -46),
            s!(3, -56),
            s!(12, -59),
            s!(9, -54),
            s!(15, -61),
            s!(-3, -56),
            s!(-17, -57),
            s!(2, -34),
            s!(-3, -39),
            s!(1, -41),
            s!(13, -50),
            s!(14, -50),
            s!(16, -51),
            s!(-4, -44),
            s!(-1, -46),
            s!(-1, -17),
            s!(0, -4),
            s!(13, 5),
            s!(2, 11),
            s!(19, -6),
            s!(67, -36),
            s!(15, -11),
            s!(14, -28),
            s!(-3, 129),
            s!(1, 114),
            s!(17, 41),
            s!(14, 85),
            s!(48, 87),
            s!(57, 51),
            s!(15, 38),
            s!(16, 42),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
        ],
        [
            s!(-29, -12),
            s!(6, -9),
            s!(-22, -1),
            s!(-10, 4),
            s!(-5, -1),
            s!(0, 3),
            s!(2, -12),
            s!(-36, 7),
            s!(1, -15),
            s!(-10, -3),
            s!(0, -8),
            s!(13, -1),
            s!(15, -2),
            s!(13, -3),
            s!(17, -8),
            s!(13, -10),
            s!(-8, -7),
            s!(-4, 2),
            s!(2, 0),
            s!(-1, 19),
            s!(10, 14),
            s!(8, 0),
            s!(20, -9),
            s!(-3, -10),
            s!(3, 0),
            s!(0, 4),
            s!(3, 18),
            s!(4, 21),
            s!(12, 22),
            s!(19, 8),
            s!(7, -2),
            s!(1, 4),
            s!(12, 0),
            s!(11, 6),
            s!(-3, 17),
            s!(31, 22),
            s!(3, 22),
            s!(19, 19),
            s!(-6, 12),
            s!(34, -7),
            s!(-16, -5),
            s!(-8, -1),
            s!(-17, 24),
            s!(17, 18),
            s!(28, 3),
            s!(64, 0),
            s!(12, -7),
            s!(-17, 0),
            s!(-59, 1),
            s!(-38, 8),
            s!(44, -12),
            s!(3, 4),
            s!(51, -14),
            s!(31, -14),
            s!(2, -6),
            s!(-4, -18),
            s!(-206, 33),
            s!(-38, -31),
            s!(-56, 1),
            s!(-70, 9),
            s!(-1, -4),
            s!(-103, 4),
            s!(-96, -9),
            s!(-111, -25),
        ],
        [
            s!(52, -19),
            s!(30, -7),
            s!(43, -15),
            s!(35, -5),
            s!(30, -6),
            s!(26, -2),
            s!(50, -24),
            s!(54, -18),
            s!(33, -5),
            s!(54, -16),
            s!(41, -11),
            s!(40, -5),
            s!(42, -3),
            s!(56, -11),
            s!(71, -15),
            s!(49, -15),
            s!(48, -15),
            s!(45, -5),
            s!(42, -2),
            s!(36, 5),
            s!(44, 3),
            s!(47, -4),
            s!(37, -14),
            s!(49, -13),
            s!(26, -11),
            s!(19, -4),
            s!(31, 4),
            s!(38, 3),
            s!(45, 1),
            s!(30, 3),
            s!(33, -11),
            s!(24, -10),
            s!(1, 3),
            s!(26, 0),
            s!(19, 2),
            s!(26, 10),
            s!(31, 6),
            s!(8, 3),
            s!(39, -10),
            s!(17, -7),
            s!(3, 0),
            s!(10, -1),
            s!(42, -3),
            s!(2, 11),
            s!(47, -2),
            s!(41, 5),
            s!(33, -4),
            s!(35, -6),
            s!(-12, -3),
            s!(9, -3),
            s!(-3, -1),
            s!(7, -9),
            s!(4, 0),
            s!(46, -14),
            s!(-7, 2),
            s!(33, -28),
            s!(-12, -5),
            s!(-37, -9),
            s!(-10, -8),
            s!(-35, 0),
            s!(-78, 4),
            s!(-23, -3),
            s!(5, -10),
            s!(-42, 3),
        ],
        [
            s!(-2, 1),
            s!(0, -1),
            s!(6, -2),
            s!(11, -3),
            s!(17, -10),
            s!(15, -7),
            s!(-5, -8),
            s!(16, -26),
            s!(-18, -5),
            s!(-12, -4),
            s!(-16, 1),
            s!(-3, -4),
            s!(0, -6),
            s!(3, -8),
            s!(22, -15),
            s!(-26, -8),
            s!(-21, -4),
            s!(-17, -1),
            s!(-11, -3),
            s!(1, -6),
            s!(0, -5),
            s!(4, -11),
            s!(21, -20),
            s!(12, -19),
            s!(-23, 2),
            s!(-34, 6),
            s!(-30, 8),
            s!(-21, 7),
            s!(-17, 5),
            s!(-12, 0),
            s!(7, -9),
            s!(0, -13),
            s!(-27, 7),
            s!(-7, 0),
            s!(-1, 5),
            s!(7, 0),
            s!(-8, 3),
            s!(10, -1),
            s!(24, -7),
            s!(17, -8),
            s!(-6, 5),
            s!(-7, 6),
            s!(-12, 5),
            s!(15, 0),
            s!(22, -5),
            s!(36, -8),
            s!(66, -14),
            s!(38, -13),
            s!(-18, 10),
            s!(-36, 23),
            s!(-7, 14),
            s!(19, 5),
            s!(-13, 6),
            s!(35, -3),
            s!(48, -6),
            s!(22, -5),
            s!(1, 12),
            s!(14, 5),
            s!(12, 8),
            s!(8, 4),
            s!(41, -4),
            s!(82, -17),
            s!(70, -14),
            s!(6, 1),
        ],
        [
            s!(30, -38),
            s!(22, -36),
            s!(26, -37),
            s!(34, -51),
            s!(28, -31),
            s!(17, -38),
            s!(9, -36),
            s!(49, -66),
            s!(18, -22),
            s!(21, -27),
            s!(22, -25),
            s!(29, -26),
            s!(32, -32),
            s!(39, -54),
            s!(39, -57),
            s!(28, -30),
            s!(2, -33),
            s!(19, -42),
            s!(9, 2),
            s!(16, -15),
            s!(14, 0),
            s!(18, -7),
            s!(20, 3),
            s!(11, -8),
            s!(4, -14),
            s!(0, 0),
            s!(5, -2),
            s!(-4, 25),
            s!(8, 14),
            s!(13, 1),
            s!(16, 6),
            s!(8, -1),
            s!(-10, -18),
            s!(0, 5),
            s!(-8, 4),
            s!(-15, 35),
            s!(-4, 42),
            s!(-2, 41),
            s!(1, 23),
            s!(16, 6),
            s!(-10, -22),
            s!(-11, -8),
            s!(6, 13),
            s!(2, 14),
            s!(23, 41),
            s!(20, 15),
            s!(68, -22),
            s!(14, 0),
            s!(-21, 2),
            s!(-33, 5),
            s!(-39, 25),
            s!(-63, 68),
            s!(-65, 58),
            s!(31, 39),
            s!(-24, 48),
            s!(91, -55),
            s!(-21, -5),
            s!(-23, 12),
            s!(6, 1),
            s!(0, 18),
            s!(59, -19),
            s!(43, -1),
            s!(-8, -3),
            s!(-22, 30),
        ],
        [
            s!(-74, -8),
            s!(-1, -10),
            s!(-22, 2),
            s!(-58, 12),
            s!(-19, -4),
            s!(-48, 7),
            s!(10, -18),
            s!(-5, -36),
            s!(3, -18),
            s!(-31, 5),
            s!(-37, 16),
            s!(-66, 27),
            s!(-53, 25),
            s!(-39, 21),
            s!(0, 6),
            s!(-3, -8),
            s!(-5, -22),
            s!(22, -6),
            s!(-40, 14),
            s!(-55, 24),
            s!(-51, 24),
            s!(-33, 18),
            s!(-9, 6),
            s!(-40, 0),
            s!(12, -29),
            s!(25, -11),
            s!(7, 5),
            s!(-39, 17),
            s!(-32, 18),
            s!(-54, 18),
            s!(-21, 4),
            s!(-75, 1),
            s!(-8, -23),
            s!(18, -6),
            s!(37, 1),
            s!(8, 10),
            s!(-6, 10),
            s!(-1, 12),
            s!(18, 5),
            s!(-36, 2),
            s!(32, -18),
            s!(132, -10),
            s!(47, 0),
            s!(74, -2),
            s!(8, 8),
            s!(71, 8),
            s!(77, 9),
            s!(-2, 5),
            s!(20, -16),
            s!(103, -6),
            s!(76, -5),
            s!(59, -5),
            s!(56, -1),
            s!(89, 5),
            s!(16, 16),
            s!(-29, 7),
            s!(80, -52),
            s!(47, -16),
            s!(95, -23),
            s!(54, -12),
            s!(78, -14),
            s!(72, -7),
            s!(49, -10),
            s!(24, -26),
        ],
    ]),
};
