#[cfg(feature = "eval-tracing")]
use bytemuck::{Pod, Zeroable};

use super::eval_types::*;

#[cfg_attr(feature = "eval-tracing", derive(Pod, Zeroable))]
#[derive(Copy, Clone, Debug, PartialEq, Eq)]
#[repr(C)]
pub struct EvalParams {
    pub piece_values: PieceValues,

    pub knight_mobility: [EvalScore; 9],
    pub knight_outpost: [EvalScore; 3],
    pub knight_behind_pawn: EvalScore,
    pub knight_threat: EvalScore,

    pub bishop_mobility: [EvalScore; 14],
    pub bishop_outpost: [EvalScore; 3],
    pub bishop_behind_pawn: EvalScore,
    pub bishop_pair: EvalScore,
    pub bishop_threat: EvalScore,

    pub rook_mobility: [EvalScore; 15],
    pub rook_on_open_file: [EvalScore; 3],
    pub rook_queen_file: EvalScore,

    pub queen_mobility: [EvalScore; 28],
    pub queen_discovery_risk: EvalScore,

    pub king_on_open_file: [EvalScore; 3],
    pub king_ring_attacks: [EvalScore; 16],
    pub king_virtual_mobility: [EvalScore; 28],
    pub king_discovery_risk: EvalScore,

    pub pawn_connected: [EvalScore; 3],
    pub pawn_phalanx: [EvalScore; 3],
    pub pawn_isolated: [EvalScore; 2],
    pub pawn_doubled: [EvalScore; 5],
    pub pawn_backward: [EvalScore; 2],

    pub passed_pawn_friendly_king_distance: [EvalScore; 4],
    pub passed_pawn_enemy_king_distance: [EvalScore; 4],
    pub passed_pawn_table: [EvalScore; 64],

    pub piece_tables: PieceTables,
}

#[cfg(feature = "eval-tracing")]
impl EvalParams {
    pub const LEN: usize = std::mem::size_of::<Self>() / std::mem::size_of::<i16>();
    pub fn to_array(&mut self) -> [i16; Self::LEN] {
        let array = &mut bytemuck::cast::<EvalParams, [i16; Self::LEN]>(*self);
        array
            .chunks_exact_mut(2)
            .for_each(|p| EvalScore::convert(p));
        *array
    }
    pub fn as_array(&self) -> &[i16; Self::LEN] {
        bytemuck::cast_ref::<EvalParams, [i16; Self::LEN]>(self)
    }
    pub fn from_array(mut params: [i16; Self::LEN]) -> Self {
        params.chunks_exact_mut(2).for_each(|p| {
            let score = EvalScore::new(p[0], p[1]);
            p[1] = (score.inner() >> 16) as i16;
            p[0] = score.inner() as i16;
        });
        bytemuck::cast::<[i16; Self::LEN], EvalParams>(params)
    }
}

#[cfg_attr(feature = "eval-tracing", derive(Pod, Zeroable))]
#[derive(Clone, Copy)]
#[repr(C)]
pub struct EvalTrace {
    pub pawn_count: [i16; 2],
    pub knight_count: [i16; 2],
    pub bishop_count: [i16; 2],
    pub rook_count: [i16; 2],
    pub queen_count: [i16; 2],
    // pads to the length of PieceValues
    pub king_count: [i16; 2],

    pub knight_mobility: [[i16; 2]; 9],
    pub knight_outpost: [[i16; 2]; 3],
    pub knight_beind_pawn: [i16; 2],
    pub knight_threat: [i16; 2],

    pub bishop_mobility: [[i16; 2]; 14],
    pub bishop_outpost: [[i16; 2]; 3],
    pub bishop_beind_pawn: [i16; 2],
    pub bishop_pair: [i16; 2],
    pub bishop_threat: [i16; 2],

    pub rook_mobility: [[i16; 2]; 15],
    pub rook_on_open_file: [[i16; 2]; 3],
    pub rook_queen_file: [i16; 2],

    pub queen_mobility: [[i16; 2]; 28],
    pub queen_discovery_risk: [i16; 2],

    pub king_on_open_file: [[i16; 2]; 3],
    pub king_ring_attacks: [[i16; 2]; 16],
    pub king_virtual_mobility: [[i16; 2]; 28],
    pub king_discovery_risk: [i16; 2],

    pub pawn_connected: [[i16; 2]; 3],
    pub pawn_phalanx: [[i16; 2]; 3],
    pub pawn_isolated: [[i16; 2]; 2],
    pub pawn_doubled: [[i16; 2]; 5],
    pub pawn_backward: [[i16; 2]; 2],

    pub passed_pawn_friendly_king_distance: [[i16; 2]; 4],
    pub passed_pawn_enemy_king_distance: [[i16; 2]; 4],
    pub passed_pawn_placement: [[i16; 2]; 64],

    pub pawn_placement: [[i16; 2]; 64],
    pub knight_placement: [[i16; 2]; 64],
    pub bishop_placement: [[i16; 2]; 64],
    pub rook_placement: [[i16; 2]; 64],
    pub queen_placement: [[i16; 2]; 64],
    pub king_placement: [[i16; 2]; 64],

    pub turn: i16,
}

#[cfg(feature = "eval-tracing")]
impl EvalTrace {
    pub const LEN: usize = std::mem::size_of::<Self>() / std::mem::size_of::<i16>();
    pub fn new() -> Self {
        bytemuck::cast::<[i16; Self::LEN], Self>([0i16; Self::LEN])
    }
    pub fn to_array(&self) -> [i16; Self::LEN] {
        bytemuck::cast::<Self, [i16; Self::LEN]>(*self)
    }
}

#[cfg(feature = "eval-tracing")]
impl Default for EvalTrace {
    fn default() -> Self {
        Self::new()
    }
}

// static assert that eval params and trace are the same length (plus 1 for turn in trace)
#[cfg(feature = "eval-tracing")]
const _PARAMS_TRACE_LEN_EQ: () = if EvalParams::LEN + 1 == EvalTrace::LEN {
    ()
} else {
    panic!("Eval parameters and trace are not equal length!")
};

pub const CHECKMATE_SCORE: i16 = 30000;
pub const DRAW_SCORE: i16 = 0;

pub static EVAL_PARAMS: EvalParams = EvalParams {
    piece_values: PieceValues([
        s!(49, 110),
        s!(386, 179),
        s!(353, 200),
        s!(463, 339),
        s!(943, 606),
        s!(0, 0),
    ]),
    knight_mobility: [
        s!(-85, -79),
        s!(-63, -40),
        s!(-44, -20),
        s!(-40, -3),
        s!(-28, -6),
        s!(-24, 4),
        s!(-19, 3),
        s!(-12, 6),
        s!(-4, 0),
    ],
    knight_outpost: [s!(-37, -15), s!(-30, -22), s!(-17, -7)],
    knight_behind_pawn: s!(6, 7),
    knight_threat: s!(-2, 7),
    bishop_mobility: [
        s!(-43, -36),
        s!(-52, -19),
        s!(-36, -16),
        s!(-26, -5),
        s!(-18, 0),
        s!(-12, 6),
        s!(-8, 12),
        s!(-4, 13),
        s!(0, 17),
        s!(4, 16),
        s!(12, 18),
        s!(21, 11),
        s!(26, 23),
        s!(33, 8),
    ],
    bishop_outpost: [s!(-54, -30), s!(-47, -33), s!(-22, -31)],
    bishop_behind_pawn: s!(7, 5),
    bishop_pair: s!(27, 31),
    bishop_threat: s!(1, 8),
    rook_mobility: [
        s!(-68, -94),
        s!(-58, -44),
        s!(-15, -27),
        s!(-10, -10),
        s!(-10, -6),
        s!(-6, -7),
        s!(-6, -1),
        s!(-2, 0),
        s!(0, 2),
        s!(5, 1),
        s!(8, 4),
        s!(11, 6),
        s!(16, 9),
        s!(14, 10),
        s!(40, -2),
    ],
    rook_on_open_file: [s!(-22, -12), s!(-12, -2), s!(6, -15)],
    rook_queen_file: s!(1, 9),
    queen_mobility: [
        s!(0, 0),
        s!(-34, -249),
        s!(-112, -19),
        s!(-48, -114),
        s!(-36, -58),
        s!(-28, -76),
        s!(-23, -59),
        s!(-21, -38),
        s!(-20, -16),
        s!(-16, -25),
        s!(-17, 1),
        s!(-15, -1),
        s!(-10, 6),
        s!(-8, 5),
        s!(-6, 10),
        s!(-5, 13),
        s!(-9, 23),
        s!(-1, 19),
        s!(-8, 28),
        s!(-12, 33),
        s!(0, 26),
        s!(5, 28),
        s!(-6, 29),
        s!(41, -3),
        s!(83, -21),
        s!(17, 10),
        s!(97, -40),
        s!(497, -241),
    ],
    queen_discovery_risk: s!(-13, 16),
    king_on_open_file: [s!(12, 2), s!(0, 14), s!(-22, 6)],
    king_ring_attacks: [
        s!(46, -20),
        s!(43, -15),
        s!(34, -12),
        s!(19, -13),
        s!(-20, 3),
        s!(-108, 43),
        s!(-139, 56),
        s!(-169, 68),
        s!(-430, 221),
        s!(-412, 330),
        s!(-167, 409),
        s!(-155, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
    ],
    king_virtual_mobility: [
        s!(0, 0),
        s!(725, -256),
        s!(26, -4),
        s!(34, -7),
        s!(32, -10),
        s!(16, 2),
        s!(9, 0),
        s!(0, 0),
        s!(-4, 3),
        s!(-8, 2),
        s!(-10, 2),
        s!(-12, 3),
        s!(-16, 3),
        s!(-20, 4),
        s!(-26, 6),
        s!(-26, 4),
        s!(-37, 5),
        s!(-36, 3),
        s!(-25, -1),
        s!(-12, -6),
        s!(-12, -8),
        s!(-6, -12),
        s!(-6, -16),
        s!(-36, -16),
        s!(-22, -19),
        s!(-20, -24),
        s!(-76, -18),
        s!(-17, -30),
    ],
    king_discovery_risk: s!(-12, -2),
    pawn_connected: [s!(-13, -11), s!(0, -1), s!(12, 3)],
    pawn_phalanx: [s!(0, 3), s!(6, 6), s!(5, -2)],
    pawn_isolated: [s!(8, 9), s!(4, 9)],
    pawn_doubled: [s!(0, -1), s!(0, 2), s!(0, -3), s!(1, -19), s!(0, 473)],
    pawn_backward: [s!(6, 14), s!(0, 10)],
    passed_pawn_friendly_king_distance: [s!(-5, 9), s!(-7, 2), s!(-11, -9), s!(-11, -12)],
    passed_pawn_enemy_king_distance: [s!(6, -30), s!(22, -10), s!(0, 10), s!(-6, 22)],
    passed_pawn_table: [
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(17, -11),
        s!(14, -1),
        s!(11, -19),
        s!(1, -30),
        s!(8, -19),
        s!(15, -21),
        s!(45, -18),
        s!(16, -15),
        s!(21, -5),
        s!(20, 0),
        s!(17, -10),
        s!(-6, -10),
        s!(13, -15),
        s!(17, -5),
        s!(21, 0),
        s!(28, -9),
        s!(23, 14),
        s!(16, 14),
        s!(2, 14),
        s!(3, 10),
        s!(-8, 11),
        s!(-16, 19),
        s!(-36, 30),
        s!(13, 16),
        s!(26, 32),
        s!(26, 38),
        s!(12, 29),
        s!(0, 31),
        s!(3, 27),
        s!(18, 30),
        s!(12, 40),
        s!(-10, 37),
        s!(36, 76),
        s!(24, 61),
        s!(14, 44),
        s!(16, 26),
        s!(-1, 40),
        s!(-15, 66),
        s!(-29, 63),
        s!(-51, 86),
        s!(54, -9),
        s!(77, -6),
        s!(11, 61),
        s!(33, 0),
        s!(14, -3),
        s!(11, 33),
        s!(4, 74),
        s!(-17, 60),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
    ],
    piece_tables: PieceTables([
        [
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(-3, -67),
            s!(2, -70),
            s!(1, -63),
            s!(4, -62),
            s!(2, -65),
            s!(25, -70),
            s!(26, -79),
            s!(9, -81),
            s!(-6, -74),
            s!(-11, -76),
            s!(-1, -74),
            s!(0, -69),
            s!(2, -71),
            s!(0, -75),
            s!(9, -83),
            s!(0, -82),
            s!(-4, -71),
            s!(-7, -70),
            s!(4, -78),
            s!(13, -80),
            s!(10, -77),
            s!(13, -82),
            s!(1, -78),
            s!(-12, -79),
            s!(5, -59),
            s!(1, -64),
            s!(4, -66),
            s!(15, -73),
            s!(17, -73),
            s!(19, -74),
            s!(2, -68),
            s!(1, -69),
            s!(2, -46),
            s!(3, -34),
            s!(17, -27),
            s!(6, -23),
            s!(32, -40),
            s!(71, -63),
            s!(26, -42),
            s!(24, -57),
            s!(8, 74),
            s!(7, 65),
            s!(20, 3),
            s!(13, 43),
            s!(59, 38),
            s!(58, 10),
            s!(31, 0),
            s!(12, 4),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
        ],
        [
            s!(-35, -4),
            s!(-9, -3),
            s!(-33, 5),
            s!(-22, 12),
            s!(-17, 3),
            s!(-25, 8),
            s!(-13, -3),
            s!(-41, 11),
            s!(-11, -7),
            s!(-22, 1),
            s!(-9, -4),
            s!(0, 3),
            s!(0, 1),
            s!(-7, 0),
            s!(-5, -2),
            s!(-3, -4),
            s!(-15, -2),
            s!(-10, 3),
            s!(-5, 0),
            s!(-10, 14),
            s!(0, 11),
            s!(0, 2),
            s!(8, -6),
            s!(-11, -5),
            s!(-4, 2),
            s!(-8, 5),
            s!(-1, 12),
            s!(-1, 16),
            s!(5, 17),
            s!(11, 3),
            s!(-1, -2),
            s!(-6, 7),
            s!(3, 3),
            s!(5, 4),
            s!(-6, 11),
            s!(23, 16),
            s!(0, 15),
            s!(13, 11),
            s!(-7, 5),
            s!(20, -4),
            s!(-21, -2),
            s!(-14, 0),
            s!(-13, 16),
            s!(11, 11),
            s!(24, -1),
            s!(53, -4),
            s!(7, -6),
            s!(-21, 1),
            s!(-55, 4),
            s!(-37, 9),
            s!(35, -11),
            s!(1, 2),
            s!(41, -14),
            s!(29, -14),
            s!(0, -4),
            s!(-8, -12),
            s!(-179, 34),
            s!(-35, -24),
            s!(-50, 4),
            s!(-53, 6),
            s!(-4, -2),
            s!(-75, 1),
            s!(-82, -6),
            s!(-97, -17),
        ],
        [
            s!(49, -14),
            s!(29, -2),
            s!(40, -11),
            s!(35, 0),
            s!(30, -2),
            s!(17, 3),
            s!(42, -16),
            s!(52, -11),
            s!(26, 0),
            s!(49, -12),
            s!(41, -9),
            s!(36, -2),
            s!(39, 0),
            s!(46, -7),
            s!(58, -12),
            s!(42, -11),
            s!(46, -10),
            s!(43, -3),
            s!(40, -3),
            s!(35, 2),
            s!(40, 0),
            s!(46, -4),
            s!(39, -10),
            s!(49, -8),
            s!(26, -4),
            s!(22, -3),
            s!(30, 0),
            s!(38, -3),
            s!(43, -3),
            s!(32, 0),
            s!(37, -8),
            s!(23, -4),
            s!(8, 6),
            s!(26, 2),
            s!(22, 0),
            s!(21, 5),
            s!(30, 1),
            s!(14, 1),
            s!(35, -5),
            s!(20, -1),
            s!(13, 4),
            s!(16, 0),
            s!(41, -3),
            s!(6, 9),
            s!(46, -4),
            s!(40, 3),
            s!(37, -3),
            s!(37, -2),
            s!(0, 0),
            s!(14, 0),
            s!(2, -1),
            s!(17, -7),
            s!(10, 0),
            s!(50, -11),
            s!(4, 2),
            s!(39, -20),
            s!(0, 1),
            s!(-19, -5),
            s!(3, -6),
            s!(-19, 1),
            s!(-52, 5),
            s!(0, -2),
            s!(17, -5),
            s!(-18, 6),
        ],
        [
            s!(-2, -1),
            s!(-1, -4),
            s!(2, -4),
            s!(2, -3),
            s!(4, -10),
            s!(-3, -7),
            s!(-14, -8),
            s!(8, -22),
            s!(-16, -7),
            s!(-12, -6),
            s!(-15, -1),
            s!(-4, -7),
            s!(-1, -9),
            s!(-3, -9),
            s!(8, -15),
            s!(-27, -8),
            s!(-18, -6),
            s!(-15, -4),
            s!(-10, -5),
            s!(-1, -8),
            s!(-1, -9),
            s!(4, -14),
            s!(10, -19),
            s!(4, -17),
            s!(-20, 0),
            s!(-30, 2),
            s!(-27, 4),
            s!(-18, 3),
            s!(-14, 0),
            s!(-11, -3),
            s!(-1, -10),
            s!(-3, -13),
            s!(-24, 3),
            s!(-5, -2),
            s!(-3, 2),
            s!(6, -2),
            s!(-7, 0),
            s!(8, -3),
            s!(12, -7),
            s!(11, -9),
            s!(-4, 1),
            s!(-5, 2),
            s!(-12, 2),
            s!(14, -3),
            s!(20, -7),
            s!(29, -9),
            s!(50, -14),
            s!(28, -13),
            s!(-17, 6),
            s!(-29, 16),
            s!(-6, 9),
            s!(15, 1),
            s!(-10, 3),
            s!(33, -6),
            s!(40, -7),
            s!(17, -7),
            s!(0, 7),
            s!(11, 2),
            s!(8, 5),
            s!(6, 1),
            s!(37, -6),
            s!(70, -17),
            s!(61, -14),
            s!(-2, 0),
        ],
        [
            s!(24, -38),
            s!(16, -36),
            s!(17, -36),
            s!(22, -48),
            s!(16, -34),
            s!(0, -37),
            s!(-2, -35),
            s!(40, -64),
            s!(14, -26),
            s!(16, -29),
            s!(17, -29),
            s!(21, -27),
            s!(23, -31),
            s!(23, -50),
            s!(25, -56),
            s!(20, -30),
            s!(8, -43),
            s!(16, -43),
            s!(6, -3),
            s!(12, -21),
            s!(10, -9),
            s!(15, -13),
            s!(15, -4),
            s!(13, -19),
            s!(13, -31),
            s!(1, -9),
            s!(4, -10),
            s!(-3, 12),
            s!(6, 2),
            s!(12, -7),
            s!(16, -6),
            s!(11, -14),
            s!(-6, -26),
            s!(0, -3),
            s!(-7, -4),
            s!(-13, 21),
            s!(-5, 28),
            s!(2, 23),
            s!(1, 11),
            s!(17, -8),
            s!(-8, -27),
            s!(-11, -13),
            s!(7, 0),
            s!(1, 4),
            s!(20, 25),
            s!(17, 4),
            s!(58, -28),
            s!(11, -7),
            s!(-20, -4),
            s!(-28, -2),
            s!(-32, 13),
            s!(-52, 49),
            s!(-53, 38),
            s!(29, 25),
            s!(-14, 31),
            s!(77, -56),
            s!(-21, -9),
            s!(-16, 1),
            s!(18, -15),
            s!(7, 4),
            s!(55, -27),
            s!(37, -8),
            s!(-3, -13),
            s!(-13, 14),
        ],
        [
            s!(-69, -9),
            s!(-2, -10),
            s!(-14, 1),
            s!(-41, 7),
            s!(-12, -4),
            s!(-39, 5),
            s!(4, -15),
            s!(-18, -28),
            s!(1, -18),
            s!(-19, 4),
            s!(-23, 14),
            s!(-42, 23),
            s!(-33, 20),
            s!(-27, 18),
            s!(9, 3),
            s!(-6, -9),
            s!(0, -22),
            s!(23, -4),
            s!(-25, 17),
            s!(-40, 25),
            s!(-36, 25),
            s!(-22, 19),
            s!(0, 5),
            s!(-31, -3),
            s!(18, -29),
            s!(28, -7),
            s!(9, 11),
            s!(-31, 26),
            s!(-26, 27),
            s!(-44, 21),
            s!(-13, 4),
            s!(-59, -3),
            s!(0, -24),
            s!(17, -2),
            s!(30, 10),
            s!(10, 22),
            s!(-3, 22),
            s!(0, 18),
            s!(19, 5),
            s!(-24, -3),
            s!(29, -20),
            s!(113, -7),
            s!(37, 8),
            s!(61, 6),
            s!(7, 16),
            s!(62, 15),
            s!(70, 8),
            s!(3, -1),
            s!(13, -17),
            s!(88, -4),
            s!(65, -2),
            s!(47, -1),
            s!(50, 1),
            s!(79, 5),
            s!(17, 13),
            s!(-20, 0),
            s!(60, -48),
            s!(40, -18),
            s!(75, -22),
            s!(43, -12),
            s!(64, -15),
            s!(65, -11),
            s!(41, -13),
            s!(12, -27),
        ],
    ]),
};
