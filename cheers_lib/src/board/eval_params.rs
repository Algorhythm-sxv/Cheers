#[cfg(feature = "eval-tracing")]
use bytemuck::{Pod, Zeroable};

use super::eval_types::*;

#[cfg_attr(feature = "eval-tracing", derive(Pod, Zeroable))]
#[derive(Copy, Clone, Debug, PartialEq, Eq)]
#[repr(C)]
pub struct EvalParams {
    pub piece_values: PieceValues,

    pub knight_mobility: [EvalScore; 9],

    pub bishop_mobility: [EvalScore; 14],

    pub rook_mobility: [EvalScore; 15],

    pub queen_mobility: [EvalScore; 28],

    pub passed_pawn_defended: EvalScore,
    pub passed_pawn_friendly_rook: EvalScore,
    pub passed_pawn_table: [EvalScore; 64],

    pub piece_tables: PieceTables,
}

#[cfg(feature = "eval-tracing")]
impl EvalParams {
    pub const LEN: usize = std::mem::size_of::<Self>() / std::mem::size_of::<i16>();
    pub fn to_array(&mut self) -> [i16; Self::LEN] {
        let array = &mut bytemuck::cast::<EvalParams, [i16; Self::LEN]>(*self);
        array
            .chunks_exact_mut(2)
            .for_each(|p| EvalScore::convert(p));
        *array
    }
    pub fn as_array(&self) -> &[i16; Self::LEN] {
        bytemuck::cast_ref::<EvalParams, [i16; Self::LEN]>(self)
    }
    pub fn from_array(mut params: [i16; Self::LEN]) -> Self {
        params.chunks_exact_mut(2).for_each(|p| {
            let score = EvalScore::new(p[0], p[1]);
            p[1] = (score.inner() >> 16) as i16;
            p[0] = score.inner() as i16;
        });
        bytemuck::cast::<[i16; Self::LEN], EvalParams>(params)
    }
}

#[cfg_attr(feature = "eval-tracing", derive(Pod, Zeroable))]
#[derive(Clone, Copy)]
#[repr(C)]
pub struct EvalTrace {
    pub pawn_count: [i16; 2],
    pub knight_count: [i16; 2],
    pub bishop_count: [i16; 2],
    pub rook_count: [i16; 2],
    pub queen_count: [i16; 2],
    // pads to the length of PieceValues
    pub king_count: [i16; 2],

    pub knight_mobility: [[i16; 2]; 9],
    pub bishop_mobility: [[i16; 2]; 14],
    pub rook_mobility: [[i16; 2]; 15],
    pub queen_mobility: [[i16; 2]; 28],

    pub passed_pawn_defended: [i16; 2],
    pub passed_pawn_friendly_rook: [i16; 2],
    pub passed_pawn_placement: [[i16; 2]; 64],

    pub pawn_placement: [[i16; 2]; 64],
    pub knight_placement: [[i16; 2]; 64],
    pub bishop_placement: [[i16; 2]; 64],
    pub rook_placement: [[i16; 2]; 64],
    pub queen_placement: [[i16; 2]; 64],
    pub king_placement: [[i16; 2]; 64],

    pub turn: i16,
}

#[cfg(feature = "eval-tracing")]
impl EvalTrace {
    pub const LEN: usize = std::mem::size_of::<Self>() / std::mem::size_of::<i16>();
    pub fn new() -> Self {
        bytemuck::cast::<[i16; Self::LEN], Self>([0i16; Self::LEN])
    }
    pub fn to_array(&self) -> [i16; Self::LEN] {
        bytemuck::cast::<Self, [i16; Self::LEN]>(*self)
    }
}

#[cfg(feature = "eval-tracing")]
impl Default for EvalTrace {
    fn default() -> Self {
        Self::new()
    }
}

// static assert that eval params and trace are the same length (plus 1 for turn in trace)
#[cfg(feature = "eval-tracing")]
const _PARAMS_TRACE_LEN_EQ: () = if EvalParams::LEN + 1 == EvalTrace::LEN {
    ()
} else {
    panic!("Eval parameters and trace are not equal length!")
};

pub const CHECKMATE_SCORE: i16 = 30000;
pub const DRAW_SCORE: i16 = 0;

pub static EVAL_PARAMS: EvalParams = EvalParams {
    piece_values: PieceValues([
        s!(91, 112),
        s!(410, 216),
        s!(428, 238),
        s!(575, 423),
        s!(1224, 767),
        s!(0, 0),
    ]),
    knight_mobility: [
        s!(-98, -85),
        s!(-52, -40),
        s!(-28, -13),
        s!(-24, 7),
        s!(-5, -1),
        s!(0, 11),
        s!(9, 7),
        s!(20, 8),
        s!(30, -2),
    ],
    bishop_mobility: [
        s!(-53, -52),
        s!(-59, -35),
        s!(-38, -34),
        s!(-23, -15),
        s!(-13, -8),
        s!(-3, 0),
        s!(1, 6),
        s!(6, 7),
        s!(12, 11),
        s!(14, 7),
        s!(22, 9),
        s!(38, -2),
        s!(43, 8),
        s!(44, -8),
    ],
    rook_mobility: [
        s!(-108, -65),
        s!(-77, -51),
        s!(-24, -28),
        s!(-16, -11),
        s!(-13, -6),
        s!(-6, -9),
        s!(-3, 0),
        s!(6, 0),
        s!(12, 3),
        s!(25, 1),
        s!(34, 5),
        s!(42, 6),
        s!(48, 11),
        s!(51, 11),
        s!(78, -3),
    ],
    queen_mobility: [
        s!(0, 0),
        s!(-102, -36),
        s!(-159, -24),
        s!(-66, -125),
        s!(-45, -77),
        s!(-36, -98),
        s!(-29, -67),
        s!(-27, -44),
        s!(-26, -10),
        s!(-18, -24),
        s!(-19, 9),
        s!(-14, 9),
        s!(-7, 18),
        s!(-4, 19),
        s!(0, 26),
        s!(2, 30),
        s!(-3, 45),
        s!(7, 38),
        s!(0, 50),
        s!(-3, 57),
        s!(11, 49),
        s!(18, 54),
        s!(6, 54),
        s!(67, 14),
        s!(95, 6),
        s!(37, 38),
        s!(161, -34),
        s!(197, -54),
    ],
    passed_pawn_defended: s!(30, 9),
    passed_pawn_friendly_rook: s!(3, 7),
    passed_pawn_table: [
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(-16, -8),
        s!(-25, 7),
        s!(-7, -6),
        s!(-22, -23),
        s!(-10, 1),
        s!(6, -8),
        s!(48, -8),
        s!(-13, 0),
        s!(-25, -1),
        s!(-30, 2),
        s!(-22, 2),
        s!(-49, 3),
        s!(-22, -1),
        s!(10, 1),
        s!(-7, 4),
        s!(-1, -2),
        s!(-10, 19),
        s!(-25, 18),
        s!(-32, 20),
        s!(-37, 20),
        s!(-34, 18),
        s!(-50, 24),
        s!(-78, 38),
        s!(-23, 24),
        s!(-5, 41),
        s!(-7, 44),
        s!(-14, 36),
        s!(-28, 33),
        s!(-22, 29),
        s!(3, 29),
        s!(-20, 44),
        s!(-41, 43),
        s!(13, 95),
        s!(-1, 72),
        s!(0, 46),
        s!(10, 17),
        s!(-8, 30),
        s!(-18, 68),
        s!(-62, 70),
        s!(-95, 106),
        s!(47, -7),
        s!(85, -13),
        s!(4, 62),
        s!(23, -4),
        s!(0, -21),
        s!(-9, 25),
        s!(-17, 94),
        s!(-72, 57),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
    ],
    piece_tables: PieceTables([
        [
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(-20, -23),
            s!(8, -30),
            s!(-7, -27),
            s!(2, -21),
            s!(10, -30),
            s!(32, -34),
            s!(56, -45),
            s!(3, -47),
            s!(-27, -28),
            s!(-6, -32),
            s!(-6, -40),
            s!(-4, -32),
            s!(13, -37),
            s!(-13, -36),
            s!(35, -44),
            s!(-5, -44),
            s!(-34, -24),
            s!(-14, -26),
            s!(-12, -41),
            s!(2, -46),
            s!(2, -44),
            s!(0, -46),
            s!(-2, -39),
            s!(-34, -40),
            s!(-24, -10),
            s!(-15, -18),
            s!(-19, -27),
            s!(-6, -37),
            s!(0, -41),
            s!(-10, -37),
            s!(-9, -27),
            s!(-24, -28),
            s!(-33, 7),
            s!(-18, 19),
            s!(-15, 25),
            s!(-27, 29),
            s!(-2, 6),
            s!(42, -21),
            s!(2, 4),
            s!(-6, -13),
            s!(-35, 153),
            s!(-26, 145),
            s!(-10, 69),
            s!(-16, 103),
            s!(24, 110),
            s!(38, 76),
            s!(-4, 52),
            s!(-15, 85),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
        ],
        [
            s!(-29, -21),
            s!(14, -14),
            s!(-23, -6),
            s!(-8, 0),
            s!(-2, -7),
            s!(-4, 0),
            s!(8, -18),
            s!(-42, 1),
            s!(8, -24),
            s!(-8, -11),
            s!(2, -15),
            s!(19, -7),
            s!(19, -8),
            s!(18, -8),
            s!(17, -14),
            s!(18, -18),
            s!(-1, -14),
            s!(-5, 0),
            s!(3, -2),
            s!(-1, 17),
            s!(12, 13),
            s!(9, -4),
            s!(21, -14),
            s!(-1, -17),
            s!(9, -6),
            s!(2, 0),
            s!(5, 18),
            s!(12, 18),
            s!(15, 22),
            s!(22, 7),
            s!(10, -7),
            s!(4, 1),
            s!(24, -8),
            s!(15, 7),
            s!(3, 15),
            s!(44, 19),
            s!(16, 18),
            s!(26, 16),
            s!(7, 6),
            s!(44, -14),
            s!(-1, -17),
            s!(10, -13),
            s!(0, 17),
            s!(41, 10),
            s!(64, -10),
            s!(93, -8),
            s!(47, -20),
            s!(1, -11),
            s!(-48, -12),
            s!(-25, -3),
            s!(69, -26),
            s!(20, -9),
            s!(78, -31),
            s!(63, -28),
            s!(14, -17),
            s!(13, -34),
            s!(-204, 18),
            s!(-38, -45),
            s!(-46, -10),
            s!(-61, -2),
            s!(25, -23),
            s!(-99, -10),
            s!(-113, -18),
            s!(-102, -44),
        ],
        [
            s!(58, -27),
            s!(27, -10),
            s!(46, -19),
            s!(30, -6),
            s!(26, -7),
            s!(20, -4),
            s!(48, -28),
            s!(49, -20),
            s!(32, -9),
            s!(57, -22),
            s!(38, -16),
            s!(39, -10),
            s!(37, -7),
            s!(62, -15),
            s!(67, -17),
            s!(49, -19),
            s!(55, -20),
            s!(44, -9),
            s!(43, -7),
            s!(34, 0),
            s!(43, 0),
            s!(43, -7),
            s!(33, -19),
            s!(46, -16),
            s!(26, -15),
            s!(25, -9),
            s!(28, 1),
            s!(46, -3),
            s!(48, -2),
            s!(28, 0),
            s!(28, -16),
            s!(23, -14),
            s!(-3, 1),
            s!(23, -1),
            s!(28, -3),
            s!(36, 5),
            s!(37, 2),
            s!(9, -3),
            s!(37, -13),
            s!(14, -11),
            s!(3, -1),
            s!(18, -6),
            s!(50, -9),
            s!(16, 4),
            s!(58, -11),
            s!(53, -1),
            s!(51, -10),
            s!(53, -14),
            s!(-5, -10),
            s!(16, -9),
            s!(0, -7),
            s!(5, -16),
            s!(18, -10),
            s!(59, -23),
            s!(9, -5),
            s!(36, -34),
            s!(-14, -8),
            s!(-36, -17),
            s!(-13, -15),
            s!(-38, -4),
            s!(-81, -2),
            s!(-14, -10),
            s!(-8, -16),
            s!(-44, 0),
        ],
        [
            s!(-10, 0),
            s!(-4, 0),
            s!(10, -4),
            s!(16, -1),
            s!(24, -12),
            s!(9, -6),
            s!(-5, -7),
            s!(12, -31),
            s!(-27, -1),
            s!(-16, -2),
            s!(-17, 2),
            s!(-1, -3),
            s!(2, -7),
            s!(3, -6),
            s!(29, -15),
            s!(-32, -6),
            s!(-31, -2),
            s!(-22, -1),
            s!(-13, -3),
            s!(4, -8),
            s!(3, -6),
            s!(1, -11),
            s!(21, -21),
            s!(9, -19),
            s!(-30, 6),
            s!(-34, 6),
            s!(-34, 10),
            s!(-18, 8),
            s!(-11, 4),
            s!(-11, 0),
            s!(8, -10),
            s!(-4, -11),
            s!(-33, 10),
            s!(-9, 2),
            s!(3, 5),
            s!(13, 0),
            s!(0, 1),
            s!(14, 0),
            s!(38, -10),
            s!(26, -10),
            s!(-7, 7),
            s!(0, 6),
            s!(-2, 5),
            s!(34, -3),
            s!(42, -10),
            s!(56, -11),
            s!(83, -16),
            s!(57, -16),
            s!(-11, 10),
            s!(-25, 23),
            s!(7, 13),
            s!(40, 0),
            s!(7, 2),
            s!(66, -7),
            s!(81, -11),
            s!(37, -8),
            s!(15, 12),
            s!(24, 5),
            s!(26, 7),
            s!(24, 2),
            s!(61, -7),
            s!(99, -20),
            s!(81, -16),
            s!(17, 0),
        ],
        [
            s!(25, -35),
            s!(21, -40),
            s!(26, -42),
            s!(34, -53),
            s!(26, -34),
            s!(9, -34),
            s!(-1, -33),
            s!(44, -66),
            s!(11, -17),
            s!(16, -22),
            s!(15, -23),
            s!(23, -26),
            s!(26, -33),
            s!(40, -57),
            s!(38, -57),
            s!(35, -32),
            s!(-2, -33),
            s!(13, -41),
            s!(0, 6),
            s!(9, -15),
            s!(6, 4),
            s!(11, -2),
            s!(13, 9),
            s!(6, -4),
            s!(-2, -12),
            s!(-3, 0),
            s!(-2, 0),
            s!(-8, 29),
            s!(2, 18),
            s!(5, 6),
            s!(10, 14),
            s!(2, 8),
            s!(-19, -10),
            s!(-6, 5),
            s!(-15, 6),
            s!(-16, 32),
            s!(-9, 49),
            s!(-6, 54),
            s!(-2, 37),
            s!(23, 14),
            s!(-14, -20),
            s!(-18, -3),
            s!(4, 15),
            s!(11, 10),
            s!(31, 45),
            s!(64, 3),
            s!(107, -31),
            s!(71, -16),
            s!(-19, 5),
            s!(-38, 7),
            s!(-36, 24),
            s!(-64, 75),
            s!(-49, 57),
            s!(78, 30),
            s!(3, 45),
            s!(126, -68),
            s!(-15, -9),
            s!(-23, 13),
            s!(24, -6),
            s!(28, 8),
            s!(83, -26),
            s!(77, -12),
            s!(-29, 12),
            s!(-19, 33),
        ],
        [
            s!(-75, -17),
            s!(5, -19),
            s!(-14, -4),
            s!(-82, 5),
            s!(-17, -12),
            s!(-42, 0),
            s!(22, -28),
            s!(7, -49),
            s!(15, -23),
            s!(-45, 5),
            s!(-59, 20),
            s!(-87, 30),
            s!(-76, 29),
            s!(-59, 27),
            s!(-6, 7),
            s!(-4, -10),
            s!(-2, -23),
            s!(2, 0),
            s!(-83, 27),
            s!(-92, 36),
            s!(-96, 39),
            s!(-71, 33),
            s!(-29, 16),
            s!(-47, 4),
            s!(28, -30),
            s!(15, -4),
            s!(0, 15),
            s!(-68, 31),
            s!(-60, 34),
            s!(-80, 37),
            s!(-43, 19),
            s!(-81, 9),
            s!(3, -21),
            s!(15, 0),
            s!(34, 10),
            s!(1, 20),
            s!(-20, 23),
            s!(-7, 27),
            s!(11, 18),
            s!(-41, 10),
            s!(48, -19),
            s!(140, -5),
            s!(42, 8),
            s!(70, 4),
            s!(10, 16),
            s!(77, 18),
            s!(86, 20),
            s!(-6, 11),
            s!(45, -24),
            s!(118, -8),
            s!(86, -5),
            s!(58, -2),
            s!(64, 1),
            s!(110, 9),
            s!(16, 21),
            s!(-15, 6),
            s!(116, -63),
            s!(66, -23),
            s!(109, -29),
            s!(78, -19),
            s!(101, -19),
            s!(98, -10),
            s!(57, -10),
            s!(62, -37),
        ],
    ]),
};
