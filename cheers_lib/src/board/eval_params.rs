#[cfg(feature = "eval-tracing")]
use bytemuck::{Pod, Zeroable};

use super::eval_types::*;

#[cfg_attr(feature = "eval-tracing", derive(Pod, Zeroable))]
#[derive(Copy, Clone, Debug, PartialEq, Eq)]
#[repr(C)]
pub struct EvalParams {
    pub piece_values: PieceValues,

    pub knight_mobility: [EvalScore; 9],

    pub bishop_mobility: [EvalScore; 14],

    pub rook_mobility: [EvalScore; 15],

    pub queen_mobility: [EvalScore; 28],

    pub pawn_connected: [EvalScore; 3],
    pub pawn_phalanx: [EvalScore; 3],
    pub pawn_isolated: [EvalScore; 2],
    pub pawn_doubled: [EvalScore; 6],

    pub passed_pawn_table: [EvalScore; 64],

    pub piece_tables: PieceTables,
}

#[cfg(feature = "eval-tracing")]
impl EvalParams {
    pub const LEN: usize = std::mem::size_of::<Self>() / std::mem::size_of::<i16>();
    pub fn to_array(&mut self) -> [i16; Self::LEN] {
        let array = &mut bytemuck::cast::<EvalParams, [i16; Self::LEN]>(*self);
        array
            .chunks_exact_mut(2)
            .for_each(|p| EvalScore::convert(p));
        *array
    }
    pub fn as_array(&self) -> &[i16; Self::LEN] {
        bytemuck::cast_ref::<EvalParams, [i16; Self::LEN]>(self)
    }
    pub fn from_array(mut params: [i16; Self::LEN]) -> Self {
        params.chunks_exact_mut(2).for_each(|p| {
            let score = EvalScore::new(p[0], p[1]);
            p[1] = (score.inner() >> 16) as i16;
            p[0] = score.inner() as i16;
        });
        bytemuck::cast::<[i16; Self::LEN], EvalParams>(params)
    }
}

#[cfg_attr(feature = "eval-tracing", derive(Pod, Zeroable))]
#[derive(Clone, Copy)]
#[repr(C)]
pub struct EvalTrace {
    pub pawn_count: [i16; 2],
    pub knight_count: [i16; 2],
    pub bishop_count: [i16; 2],
    pub rook_count: [i16; 2],
    pub queen_count: [i16; 2],
    // pads to the length of PieceValues
    pub king_count: [i16; 2],

    pub knight_mobility: [[i16; 2]; 9],
    pub bishop_mobility: [[i16; 2]; 14],
    pub rook_mobility: [[i16; 2]; 15],
    pub queen_mobility: [[i16; 2]; 28],

    pub pawn_connected: [[i16; 2]; 3],
    pub pawn_phalanx: [[i16; 2]; 3],
    pub pawn_isolated: [[i16; 2]; 2],
    pub pawn_doubled: [[i16; 2]; 6],

    pub passed_pawn_placement: [[i16; 2]; 64],

    pub pawn_placement: [[i16; 2]; 64],
    pub knight_placement: [[i16; 2]; 64],
    pub bishop_placement: [[i16; 2]; 64],
    pub rook_placement: [[i16; 2]; 64],
    pub queen_placement: [[i16; 2]; 64],
    pub king_placement: [[i16; 2]; 64],

    pub turn: i16,
}

#[cfg(feature = "eval-tracing")]
impl EvalTrace {
    pub const LEN: usize = std::mem::size_of::<Self>() / std::mem::size_of::<i16>();
    pub fn new() -> Self {
        bytemuck::cast::<[i16; Self::LEN], Self>([0i16; Self::LEN])
    }
    pub fn to_array(&self) -> [i16; Self::LEN] {
        bytemuck::cast::<Self, [i16; Self::LEN]>(*self)
    }
}

#[cfg(feature = "eval-tracing")]
impl Default for EvalTrace {
    fn default() -> Self {
        Self::new()
    }
}

// static assert that eval params and trace are the same length (plus 1 for turn in trace)
#[cfg(feature = "eval-tracing")]
const _PARAMS_TRACE_LEN_EQ: () = if EvalParams::LEN + 1 == EvalTrace::LEN {
    ()
} else {
    panic!("Eval parameters and trace are not equal length!")
};

pub const CHECKMATE_SCORE: i16 = 30000;
pub const DRAW_SCORE: i16 = 0;

pub static EVAL_PARAMS: EvalParams = EvalParams {
    piece_values: PieceValues([
        s!(81, 116),
        s!(410, 210),
        s!(426, 235),
        s!(572, 410),
        s!(1211, 748),
        s!(0, 0),
    ]),
    knight_mobility: [
        s!(-94, -85),
        s!(-54, -40),
        s!(-28, -16),
        s!(-24, 3),
        s!(-7, -3),
        s!(-3, 8),
        s!(5, 5),
        s!(15, 5),
        s!(26, -5),
    ],
    bishop_mobility: [
        s!(-44, -49),
        s!(-58, -34),
        s!(-38, -31),
        s!(-25, -16),
        s!(-16, -10),
        s!(-7, -2),
        s!(-2, 3),
        s!(2, 4),
        s!(8, 6),
        s!(11, 3),
        s!(20, 4),
        s!(35, -6),
        s!(39, 4),
        s!(42, -12),
    ],
    rook_mobility: [
        s!(-89, -78),
        s!(-78, -48),
        s!(-24, -27),
        s!(-17, -9),
        s!(-12, -6),
        s!(-5, -7),
        s!(-3, 1),
        s!(6, 1),
        s!(12, 4),
        s!(25, 2),
        s!(33, 6),
        s!(43, 7),
        s!(51, 10),
        s!(53, 11),
        s!(84, -3),
    ],
    queen_mobility: [
        s!(0, 0),
        s!(-81, -36),
        s!(-152, -13),
        s!(-67, -123),
        s!(-48, -65),
        s!(-40, -94),
        s!(-33, -62),
        s!(-31, -39),
        s!(-29, -6),
        s!(-23, -19),
        s!(-23, 12),
        s!(-18, 9),
        s!(-11, 17),
        s!(-9, 17),
        s!(-5, 24),
        s!(-3, 28),
        s!(-8, 42),
        s!(1, 36),
        s!(-6, 49),
        s!(-9, 56),
        s!(7, 47),
        s!(14, 51),
        s!(0, 52),
        s!(61, 12),
        s!(95, 1),
        s!(39, 31),
        s!(182, -52),
        s!(243, -83),
    ],
    pawn_connected: [s!(-13, -15), s!(4, -2), s!(21, 2)],
    pawn_phalanx: [s!(-1, 2), s!(7, 6), s!(7, -7)],
    pawn_isolated: [s!(4, 0), s!(-6, 0)],
    pawn_doubled: [
        s!(0, 3),
        s!(0, -4),
        s!(3, -25),
        s!(0, 39),
        s!(0, 0),
        s!(0, 0),
    ],
    passed_pawn_table: [
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(6, -1),
        s!(-4, 16),
        s!(1, -6),
        s!(-11, -17),
        s!(-3, 4),
        s!(18, -4),
        s!(66, -1),
        s!(8, 1),
        s!(10, 5),
        s!(12, 12),
        s!(3, 2),
        s!(-27, 4),
        s!(5, 1),
        s!(33, 5),
        s!(35, 14),
        s!(35, 3),
        s!(16, 28),
        s!(6, 26),
        s!(-13, 25),
        s!(-15, 23),
        s!(-19, 22),
        s!(-25, 29),
        s!(-53, 45),
        s!(7, 29),
        s!(18, 49),
        s!(23, 51),
        s!(3, 37),
        s!(-13, 36),
        s!(-9, 31),
        s!(24, 32),
        s!(2, 50),
        s!(-21, 49),
        s!(31, 103),
        s!(19, 77),
        s!(10, 49),
        s!(15, 20),
        s!(0, 32),
        s!(0, 70),
        s!(-39, 73),
        s!(-75, 108),
        s!(61, -9),
        s!(88, -7),
        s!(9, 68),
        s!(25, -9),
        s!(4, -17),
        s!(0, 27),
        s!(-4, 88),
        s!(-57, 66),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
    ],
    piece_tables: PieceTables([
        [
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(-13, -27),
            s!(-3, -31),
            s!(0, -21),
            s!(6, -20),
            s!(11, -29),
            s!(36, -32),
            s!(39, -45),
            s!(8, -45),
            s!(-21, -34),
            s!(-23, -36),
            s!(-6, -35),
            s!(-5, -28),
            s!(7, -35),
            s!(-8, -36),
            s!(13, -49),
            s!(-5, -46),
            s!(-21, -29),
            s!(-20, -29),
            s!(0, -42),
            s!(10, -45),
            s!(13, -44),
            s!(8, -47),
            s!(-2, -43),
            s!(-23, -43),
            s!(-7, -15),
            s!(-12, -21),
            s!(-3, -25),
            s!(9, -36),
            s!(16, -38),
            s!(8, -36),
            s!(-3, -30),
            s!(-7, -30),
            s!(-13, 2),
            s!(-10, 16),
            s!(6, 26),
            s!(-5, 30),
            s!(17, 8),
            s!(64, -20),
            s!(14, 3),
            s!(13, -12),
            s!(-11, 156),
            s!(-12, 144),
            s!(9, 66),
            s!(5, 112),
            s!(51, 108),
            s!(52, 78),
            s!(9, 59),
            s!(4, 78),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
        ],
        [
            s!(-32, -20),
            s!(9, -15),
            s!(-22, -6),
            s!(-9, 0),
            s!(-4, -5),
            s!(-3, 0),
            s!(3, -18),
            s!(-39, 0),
            s!(5, -23),
            s!(-11, -9),
            s!(1, -13),
            s!(15, -5),
            s!(16, -7),
            s!(13, -7),
            s!(17, -13),
            s!(16, -18),
            s!(-6, -13),
            s!(-4, 0),
            s!(3, 0),
            s!(0, 18),
            s!(11, 14),
            s!(10, -1),
            s!(21, -13),
            s!(-3, -17),
            s!(6, -6),
            s!(1, 1),
            s!(5, 18),
            s!(9, 20),
            s!(13, 22),
            s!(22, 7),
            s!(10, -6),
            s!(2, 1),
            s!(19, -6),
            s!(13, 7),
            s!(2, 16),
            s!(43, 20),
            s!(16, 18),
            s!(27, 17),
            s!(6, 6),
            s!(43, -14),
            s!(-6, -15),
            s!(8, -11),
            s!(-1, 18),
            s!(36, 12),
            s!(59, -8),
            s!(88, -7),
            s!(44, -20),
            s!(2, -10),
            s!(-58, -9),
            s!(-33, -1),
            s!(59, -23),
            s!(18, -8),
            s!(69, -28),
            s!(55, -28),
            s!(7, -16),
            s!(9, -32),
            s!(-209, 21),
            s!(-40, -42),
            s!(-54, -8),
            s!(-72, 0),
            s!(17, -19),
            s!(-101, -8),
            s!(-122, -15),
            s!(-110, -38),
        ],
        [
            s!(53, -25),
            s!(31, -12),
            s!(47, -19),
            s!(37, -7),
            s!(30, -8),
            s!(24, -3),
            s!(51, -30),
            s!(52, -21),
            s!(38, -12),
            s!(57, -21),
            s!(43, -16),
            s!(41, -8),
            s!(42, -6),
            s!(59, -14),
            s!(71, -18),
            s!(51, -21),
            s!(54, -21),
            s!(49, -10),
            s!(44, -5),
            s!(38, 1),
            s!(44, 2),
            s!(48, -7),
            s!(36, -18),
            s!(50, -18),
            s!(28, -15),
            s!(23, -7),
            s!(33, 0),
            s!(44, -1),
            s!(49, -2),
            s!(29, 1),
            s!(32, -15),
            s!(25, -15),
            s!(0, 1),
            s!(27, -1),
            s!(28, -1),
            s!(38, 4),
            s!(37, 2),
            s!(11, -2),
            s!(40, -13),
            s!(22, -12),
            s!(7, -2),
            s!(18, -6),
            s!(51, -8),
            s!(17, 4),
            s!(62, -10),
            s!(54, 0),
            s!(50, -10),
            s!(55, -14),
            s!(-9, -9),
            s!(14, -9),
            s!(-1, -6),
            s!(6, -15),
            s!(13, -8),
            s!(62, -22),
            s!(2, -4),
            s!(44, -36),
            s!(-10, -11),
            s!(-33, -18),
            s!(-7, -16),
            s!(-39, -4),
            s!(-78, -2),
            s!(-17, -10),
            s!(-6, -16),
            s!(-43, -1),
        ],
        [
            s!(-11, 0),
            s!(-5, 0),
            s!(10, -4),
            s!(16, -1),
            s!(24, -12),
            s!(8, -6),
            s!(-5, -6),
            s!(10, -31),
            s!(-28, -1),
            s!(-16, -3),
            s!(-16, 2),
            s!(-4, -3),
            s!(1, -7),
            s!(0, -7),
            s!(23, -15),
            s!(-33, -6),
            s!(-33, -1),
            s!(-22, -1),
            s!(-13, -2),
            s!(3, -8),
            s!(0, -5),
            s!(0, -10),
            s!(22, -22),
            s!(6, -18),
            s!(-33, 6),
            s!(-38, 7),
            s!(-33, 9),
            s!(-20, 8),
            s!(-13, 4),
            s!(-15, 0),
            s!(10, -10),
            s!(-8, -10),
            s!(-33, 10),
            s!(-7, 1),
            s!(4, 4),
            s!(14, -1),
            s!(0, 0),
            s!(15, -1),
            s!(39, -11),
            s!(19, -8),
            s!(-5, 6),
            s!(-2, 6),
            s!(-4, 4),
            s!(30, -4),
            s!(37, -9),
            s!(55, -12),
            s!(87, -18),
            s!(58, -16),
            s!(-14, 10),
            s!(-28, 22),
            s!(2, 13),
            s!(36, 1),
            s!(3, 2),
            s!(60, -8),
            s!(75, -12),
            s!(36, -8),
            s!(8, 13),
            s!(24, 5),
            s!(25, 6),
            s!(18, 3),
            s!(54, -6),
            s!(93, -19),
            s!(84, -17),
            s!(10, 1),
        ],
        [
            s!(27, -38),
            s!(22, -40),
            s!(26, -41),
            s!(34, -53),
            s!(27, -34),
            s!(11, -36),
            s!(1, -36),
            s!(47, -69),
            s!(12, -19),
            s!(15, -23),
            s!(17, -24),
            s!(23, -26),
            s!(26, -30),
            s!(38, -57),
            s!(34, -56),
            s!(29, -31),
            s!(0, -37),
            s!(14, -42),
            s!(1, 5),
            s!(11, -16),
            s!(7, 3),
            s!(14, -4),
            s!(14, 7),
            s!(8, -6),
            s!(0, -15),
            s!(-3, 0),
            s!(0, -1),
            s!(-8, 27),
            s!(2, 18),
            s!(8, 6),
            s!(12, 13),
            s!(3, 8),
            s!(-19, -13),
            s!(-4, 6),
            s!(-13, 5),
            s!(-13, 30),
            s!(-9, 50),
            s!(-2, 51),
            s!(-1, 37),
            s!(25, 13),
            s!(-15, -18),
            s!(-18, -4),
            s!(2, 18),
            s!(10, 11),
            s!(31, 44),
            s!(59, 6),
            s!(108, -33),
            s!(71, -17),
            s!(-23, 5),
            s!(-40, 9),
            s!(-39, 26),
            s!(-64, 74),
            s!(-50, 56),
            s!(75, 28),
            s!(-2, 48),
            s!(127, -70),
            s!(-18, -5),
            s!(-23, 13),
            s!(25, -6),
            s!(26, 8),
            s!(81, -24),
            s!(78, -13),
            s!(-25, 10),
            s!(-25, 36),
        ],
        [
            s!(-70, -19),
            s!(7, -19),
            s!(-13, -5),
            s!(-80, 4),
            s!(-16, -12),
            s!(-40, -1),
            s!(23, -28),
            s!(8, -48),
            s!(11, -23),
            s!(-44, 5),
            s!(-58, 19),
            s!(-86, 29),
            s!(-74, 28),
            s!(-58, 26),
            s!(-4, 6),
            s!(-1, -11),
            s!(-4, -23),
            s!(0, 0),
            s!(-79, 25),
            s!(-92, 35),
            s!(-96, 38),
            s!(-70, 32),
            s!(-33, 16),
            s!(-50, 4),
            s!(20, -29),
            s!(10, -4),
            s!(-1, 15),
            s!(-67, 30),
            s!(-60, 33),
            s!(-80, 36),
            s!(-44, 19),
            s!(-83, 9),
            s!(0, -21),
            s!(9, 0),
            s!(33, 9),
            s!(0, 19),
            s!(-21, 22),
            s!(-9, 26),
            s!(10, 18),
            s!(-45, 10),
            s!(49, -20),
            s!(134, -6),
            s!(42, 6),
            s!(68, 3),
            s!(9, 15),
            s!(74, 17),
            s!(81, 19),
            s!(-8, 10),
            s!(41, -24),
            s!(115, -9),
            s!(79, -5),
            s!(56, -3),
            s!(62, 0),
            s!(105, 8),
            s!(14, 19),
            s!(-18, 6),
            s!(111, -63),
            s!(61, -22),
            s!(106, -29),
            s!(74, -19),
            s!(97, -20),
            s!(91, -9),
            s!(54, -10),
            s!(55, -35),
        ],
    ]),
};
