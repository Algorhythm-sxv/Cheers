#[cfg(feature = "eval-tracing")]
use bytemuck::{Pod, Zeroable};

use super::eval_types::*;

#[cfg_attr(feature = "eval-tracing", derive(Pod, Zeroable))]
#[derive(Copy, Clone, Debug, PartialEq, Eq)]
#[repr(C)]
pub struct EvalParams {
    pub piece_values: PieceValues,

    pub knight_mobility: [EvalScore; 9],
    pub knight_outpost: [EvalScore; 3],

    pub bishop_mobility: [EvalScore; 14],
    pub bishop_outpost: [EvalScore; 3],

    pub rook_mobility: [EvalScore; 15],
    pub rook_on_open_file: [EvalScore; 3],

    pub queen_mobility: [EvalScore; 28],

    pub king_ring_attacks: [EvalScore; 16],

    pub pawn_connected: [EvalScore; 3],
    pub pawn_phalanx: [EvalScore; 3],
    pub pawn_isolated: [EvalScore; 2],
    pub pawn_doubled: [EvalScore; 6],
    pub pawn_backward: [EvalScore; 2],

    pub passed_pawn_friendly_king_distance: [EvalScore; 4],
    pub passed_pawn_enemy_king_distance: [EvalScore; 4],
    pub passed_pawn_table: [EvalScore; 64],

    pub piece_tables: PieceTables,
}

#[cfg(feature = "eval-tracing")]
impl EvalParams {
    pub const LEN: usize = std::mem::size_of::<Self>() / std::mem::size_of::<i16>();
    pub fn to_array(&mut self) -> [i16; Self::LEN] {
        let array = &mut bytemuck::cast::<EvalParams, [i16; Self::LEN]>(*self);
        array
            .chunks_exact_mut(2)
            .for_each(|p| EvalScore::convert(p));
        *array
    }
    pub fn as_array(&self) -> &[i16; Self::LEN] {
        bytemuck::cast_ref::<EvalParams, [i16; Self::LEN]>(self)
    }
    pub fn from_array(mut params: [i16; Self::LEN]) -> Self {
        params.chunks_exact_mut(2).for_each(|p| {
            let score = EvalScore::new(p[0], p[1]);
            p[1] = (score.inner() >> 16) as i16;
            p[0] = score.inner() as i16;
        });
        bytemuck::cast::<[i16; Self::LEN], EvalParams>(params)
    }
}

#[cfg_attr(feature = "eval-tracing", derive(Pod, Zeroable))]
#[derive(Clone, Copy)]
#[repr(C)]
pub struct EvalTrace {
    pub pawn_count: [i16; 2],
    pub knight_count: [i16; 2],
    pub bishop_count: [i16; 2],
    pub rook_count: [i16; 2],
    pub queen_count: [i16; 2],
    // pads to the length of PieceValues
    pub king_count: [i16; 2],

    pub knight_mobility: [[i16; 2]; 9],
    pub knight_outpost: [[i16; 2]; 3],

    pub bishop_mobility: [[i16; 2]; 14],
    pub bishop_outpost: [[i16; 2]; 3],

    pub rook_mobility: [[i16; 2]; 15],
    pub rook_on_open_file: [[i16; 2]; 3],

    pub queen_mobility: [[i16; 2]; 28],

    pub king_ring_attacks: [[i16; 2]; 16],

    pub pawn_connected: [[i16; 2]; 3],
    pub pawn_phalanx: [[i16; 2]; 3],
    pub pawn_isolated: [[i16; 2]; 2],
    pub pawn_doubled: [[i16; 2]; 6],
    pub pawn_backward: [[i16; 2]; 2],

    pub passed_pawn_friendly_king_distance: [[i16; 2]; 4],
    pub passed_pawn_enemy_king_distance: [[i16; 2]; 4],
    pub passed_pawn_placement: [[i16; 2]; 64],

    pub pawn_placement: [[i16; 2]; 64],
    pub knight_placement: [[i16; 2]; 64],
    pub bishop_placement: [[i16; 2]; 64],
    pub rook_placement: [[i16; 2]; 64],
    pub queen_placement: [[i16; 2]; 64],
    pub king_placement: [[i16; 2]; 64],

    pub turn: i16,
}

#[cfg(feature = "eval-tracing")]
impl EvalTrace {
    pub const LEN: usize = std::mem::size_of::<Self>() / std::mem::size_of::<i16>();
    pub fn new() -> Self {
        bytemuck::cast::<[i16; Self::LEN], Self>([0i16; Self::LEN])
    }
    pub fn to_array(&self) -> [i16; Self::LEN] {
        bytemuck::cast::<Self, [i16; Self::LEN]>(*self)
    }
}

#[cfg(feature = "eval-tracing")]
impl Default for EvalTrace {
    fn default() -> Self {
        Self::new()
    }
}

// static assert that eval params and trace are the same length (plus 1 for turn in trace)
#[cfg(feature = "eval-tracing")]
const _PARAMS_TRACE_LEN_EQ: () = if EvalParams::LEN + 1 == EvalTrace::LEN {
    ()
} else {
    panic!("Eval parameters and trace are not equal length!")
};

pub const CHECKMATE_SCORE: i16 = 30000;
pub const DRAW_SCORE: i16 = 0;

pub static EVAL_PARAMS: EvalParams = EvalParams {
    piece_values: PieceValues([
        s!(71, 114),
        s!(411, 209),
        s!(405, 224),
        s!(537, 392),
        s!(1123, 714),
        s!(0, 0),
    ]),
    knight_mobility: [
        s!(-90, -92),
        s!(-60, -45),
        s!(-37, -21),
        s!(-33, -2),
        s!(-17, -7),
        s!(-12, 3),
        s!(-5, 1),
        s!(3, 3),
        s!(13, -5),
    ],
    knight_outpost: [s!(-18, -2), s!(-7, -13), s!(6, 3)],
    bishop_mobility: [
        s!(-41, -44),
        s!(-56, -24),
        s!(-36, -22),
        s!(-24, -9),
        s!(-16, -3),
        s!(-8, 4),
        s!(-3, 9),
        s!(0, 10),
        s!(6, 13),
        s!(9, 11),
        s!(17, 12),
        s!(30, 2),
        s!(28, 15),
        s!(36, -3),
    ],
    bishop_outpost: [s!(-12, -6), s!(-6, -10), s!(24, -13)],
    rook_mobility: [
        s!(-82, -99),
        s!(-69, -53),
        s!(-19, -29),
        s!(-14, -10),
        s!(-11, -8),
        s!(-6, -9),
        s!(-5, -1),
        s!(0, -1),
        s!(3, 2),
        s!(10, 1),
        s!(13, 6),
        s!(16, 8),
        s!(22, 12),
        s!(22, 13),
        s!(54, -3),
    ],
    rook_on_open_file: [s!(-10, -1), s!(2, 9), s!(23, -6)],
    queen_mobility: [
        s!(0, 0),
        s!(-73, -49),
        s!(-145, 3),
        s!(-55, -127),
        s!(-39, -67),
        s!(-34, -84),
        s!(-28, -58),
        s!(-27, -33),
        s!(-27, -3),
        s!(-21, -14),
        s!(-22, 14),
        s!(-18, 11),
        s!(-12, 19),
        s!(-10, 19),
        s!(-8, 25),
        s!(-6, 30),
        s!(-11, 42),
        s!(-2, 37),
        s!(-10, 48),
        s!(-14, 55),
        s!(0, 46),
        s!(8, 48),
        s!(-6, 50),
        s!(51, 9),
        s!(92, -4),
        s!(16, 31),
        s!(182, -67),
        s!(335, -140),
    ],
    king_ring_attacks: [
        s!(42, -10),
        s!(38, -5),
        s!(25, 0),
        s!(8, -3),
        s!(-44, 20),
        s!(-152, 70),
        s!(-191, 89),
        s!(-198, 76),
        s!(-154, -80),
        s!(-82, -21),
        s!(1, 16),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
    ],
    pawn_connected: [s!(-18, -18), s!(-1, -6), s!(15, 0)],
    pawn_phalanx: [s!(0, 1), s!(7, 4), s!(8, -6)],
    pawn_isolated: [s!(4, 6), s!(0, 6)],
    pawn_doubled: [
        s!(1, 2),
        s!(0, -6),
        s!(0, -28),
        s!(0, 66),
        s!(0, 0),
        s!(0, 0),
    ],
    pawn_backward: [s!(8, 8), s!(0, 3)],
    passed_pawn_friendly_king_distance: [s!(0, 11), s!(-5, 1), s!(-9, -12), s!(-10, -15)],
    passed_pawn_enemy_king_distance: [s!(12, -52), s!(29, -21), s!(1, 6), s!(-4, 21)],
    passed_pawn_table: [
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(17, -7),
        s!(10, 5),
        s!(9, -17),
        s!(-6, -30),
        s!(1, -13),
        s!(9, -18),
        s!(48, -14),
        s!(9, -12),
        s!(20, 0),
        s!(21, 5),
        s!(16, -6),
        s!(-16, -5),
        s!(9, -9),
        s!(13, 0),
        s!(17, 8),
        s!(27, -4),
        s!(22, 24),
        s!(13, 25),
        s!(-3, 24),
        s!(-3, 20),
        s!(-16, 23),
        s!(-28, 32),
        s!(-55, 46),
        s!(6, 28),
        s!(25, 47),
        s!(26, 53),
        s!(10, 42),
        s!(-6, 45),
        s!(-1, 42),
        s!(16, 45),
        s!(8, 57),
        s!(-18, 53),
        s!(38, 99),
        s!(24, 81),
        s!(11, 60),
        s!(15, 38),
        s!(-6, 54),
        s!(-10, 86),
        s!(-35, 85),
        s!(-59, 111),
        s!(61, -7),
        s!(91, 0),
        s!(13, 78),
        s!(31, 9),
        s!(20, 1),
        s!(11, 46),
        s!(18, 97),
        s!(-39, 79),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
    ],
    piece_tables: PieceTables([
        [
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(-8, -40),
            s!(-1, -43),
            s!(-2, -33),
            s!(3, -32),
            s!(8, -41),
            s!(36, -46),
            s!(40, -58),
            s!(9, -57),
            s!(-13, -47),
            s!(-19, -49),
            s!(-6, -47),
            s!(-5, -40),
            s!(6, -46),
            s!(-4, -49),
            s!(15, -62),
            s!(-1, -58),
            s!(-11, -43),
            s!(-15, -43),
            s!(1, -53),
            s!(9, -55),
            s!(13, -55),
            s!(14, -60),
            s!(0, -56),
            s!(-17, -55),
            s!(1, -30),
            s!(-6, -36),
            s!(0, -38),
            s!(11, -47),
            s!(18, -50),
            s!(15, -49),
            s!(0, -44),
            s!(-1, -43),
            s!(-3, -13),
            s!(-1, 0),
            s!(11, 9),
            s!(0, 15),
            s!(23, -5),
            s!(67, -34),
            s!(19, -11),
            s!(15, -26),
            s!(1, 134),
            s!(-1, 119),
            s!(12, 48),
            s!(13, 91),
            s!(50, 91),
            s!(58, 55),
            s!(15, 39),
            s!(18, 48),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
        ],
        [
            s!(-31, -15),
            s!(4, -10),
            s!(-24, -2),
            s!(-12, 2),
            s!(-7, -2),
            s!(-2, 2),
            s!(0, -14),
            s!(-39, 5),
            s!(0, -16),
            s!(-12, -5),
            s!(0, -9),
            s!(12, -2),
            s!(13, -4),
            s!(11, -4),
            s!(14, -8),
            s!(13, -13),
            s!(-10, -8),
            s!(-6, 1),
            s!(0, -1),
            s!(-3, 18),
            s!(9, 13),
            s!(7, -1),
            s!(18, -11),
            s!(-5, -11),
            s!(2, -2),
            s!(-2, 3),
            s!(2, 17),
            s!(3, 19),
            s!(10, 21),
            s!(18, 6),
            s!(6, -4),
            s!(0, 3),
            s!(11, 0),
            s!(8, 6),
            s!(-4, 16),
            s!(29, 22),
            s!(2, 22),
            s!(17, 18),
            s!(-9, 10),
            s!(33, -9),
            s!(-19, -6),
            s!(-9, -2),
            s!(-18, 23),
            s!(16, 17),
            s!(26, 2),
            s!(63, 0),
            s!(13, -9),
            s!(-19, 0),
            s!(-63, 1),
            s!(-40, 7),
            s!(41, -12),
            s!(1, 3),
            s!(49, -15),
            s!(29, -14),
            s!(-1, -6),
            s!(-9, -18),
            s!(-211, 32),
            s!(-37, -33),
            s!(-60, 0),
            s!(-72, 8),
            s!(0, -6),
            s!(-105, 3),
            s!(-106, -9),
            s!(-115, -26),
        ],
        [
            s!(52, -20),
            s!(29, -7),
            s!(44, -16),
            s!(35, -5),
            s!(30, -7),
            s!(26, -2),
            s!(51, -25),
            s!(53, -18),
            s!(34, -6),
            s!(56, -17),
            s!(42, -12),
            s!(41, -5),
            s!(42, -3),
            s!(58, -12),
            s!(70, -15),
            s!(51, -16),
            s!(49, -15),
            s!(46, -6),
            s!(43, -2),
            s!(36, 4),
            s!(44, 3),
            s!(47, -4),
            s!(38, -15),
            s!(49, -13),
            s!(27, -11),
            s!(20, -5),
            s!(31, 4),
            s!(39, 2),
            s!(46, 1),
            s!(31, 2),
            s!(33, -11),
            s!(24, -10),
            s!(1, 3),
            s!(26, 0),
            s!(20, 2),
            s!(27, 10),
            s!(32, 6),
            s!(8, 2),
            s!(40, -11),
            s!(18, -7),
            s!(5, 0),
            s!(11, -1),
            s!(43, -4),
            s!(3, 11),
            s!(48, -3),
            s!(41, 5),
            s!(36, -4),
            s!(38, -7),
            s!(-11, -3),
            s!(10, -3),
            s!(-3, -1),
            s!(8, -9),
            s!(3, 0),
            s!(47, -14),
            s!(-8, 3),
            s!(36, -28),
            s!(-12, -4),
            s!(-35, -10),
            s!(-8, -9),
            s!(-34, 0),
            s!(-80, 4),
            s!(-23, -3),
            s!(6, -10),
            s!(-43, 3),
        ],
        [
            s!(-2, 0),
            s!(-1, -1),
            s!(5, -2),
            s!(9, -2),
            s!(18, -11),
            s!(14, -7),
            s!(-3, -9),
            s!(16, -27),
            s!(-18, -5),
            s!(-14, -4),
            s!(-17, 1),
            s!(-4, -4),
            s!(0, -7),
            s!(3, -9),
            s!(24, -16),
            s!(-26, -8),
            s!(-22, -4),
            s!(-19, -1),
            s!(-13, -2),
            s!(0, -6),
            s!(0, -6),
            s!(4, -12),
            s!(21, -21),
            s!(12, -19),
            s!(-24, 2),
            s!(-36, 6),
            s!(-32, 8),
            s!(-23, 8),
            s!(-15, 4),
            s!(-14, 0),
            s!(8, -10),
            s!(0, -13),
            s!(-29, 7),
            s!(-9, 1),
            s!(-2, 6),
            s!(5, 0),
            s!(-7, 2),
            s!(11, -1),
            s!(27, -8),
            s!(19, -9),
            s!(-7, 5),
            s!(-8, 6),
            s!(-13, 6),
            s!(14, 0),
            s!(21, -5),
            s!(37, -8),
            s!(72, -16),
            s!(40, -14),
            s!(-20, 11),
            s!(-38, 24),
            s!(-8, 14),
            s!(19, 4),
            s!(-15, 7),
            s!(31, -2),
            s!(48, -6),
            s!(19, -5),
            s!(0, 12),
            s!(13, 5),
            s!(13, 8),
            s!(7, 4),
            s!(41, -4),
            s!(84, -17),
            s!(74, -15),
            s!(4, 1),
        ],
        [
            s!(30, -38),
            s!(23, -35),
            s!(27, -37),
            s!(35, -52),
            s!(28, -31),
            s!(17, -38),
            s!(10, -37),
            s!(50, -66),
            s!(17, -21),
            s!(21, -26),
            s!(23, -25),
            s!(29, -25),
            s!(32, -30),
            s!(40, -55),
            s!(40, -58),
            s!(28, -31),
            s!(3, -34),
            s!(20, -43),
            s!(9, 2),
            s!(17, -15),
            s!(15, 0),
            s!(19, -7),
            s!(20, 3),
            s!(12, -9),
            s!(5, -14),
            s!(0, 0),
            s!(5, -2),
            s!(-1, 23),
            s!(8, 14),
            s!(13, 1),
            s!(17, 6),
            s!(8, 0),
            s!(-10, -17),
            s!(1, 5),
            s!(-7, 4),
            s!(-14, 34),
            s!(-3, 41),
            s!(-3, 42),
            s!(1, 25),
            s!(16, 7),
            s!(-9, -22),
            s!(-11, -8),
            s!(7, 13),
            s!(1, 15),
            s!(24, 40),
            s!(23, 13),
            s!(71, -23),
            s!(15, 1),
            s!(-20, 2),
            s!(-34, 6),
            s!(-41, 25),
            s!(-63, 69),
            s!(-68, 59),
            s!(33, 38),
            s!(-33, 54),
            s!(91, -55),
            s!(-22, -3),
            s!(-22, 12),
            s!(6, 1),
            s!(1, 17),
            s!(61, -21),
            s!(50, -5),
            s!(-23, 5),
            s!(-27, 33),
        ],
        [
            s!(-70, -8),
            s!(3, -11),
            s!(-19, 2),
            s!(-81, 12),
            s!(-22, -2),
            s!(-43, 7),
            s!(16, -18),
            s!(0, -36),
            s!(10, -19),
            s!(-31, 5),
            s!(-38, 15),
            s!(-71, 26),
            s!(-57, 25),
            s!(-43, 24),
            s!(3, 8),
            s!(0, -7),
            s!(-4, -22),
            s!(26, -7),
            s!(-41, 13),
            s!(-65, 23),
            s!(-56, 24),
            s!(-31, 19),
            s!(-6, 7),
            s!(-38, 1),
            s!(11, -30),
            s!(19, -12),
            s!(2, 4),
            s!(-51, 16),
            s!(-39, 18),
            s!(-54, 19),
            s!(-18, 5),
            s!(-75, 2),
            s!(-10, -24),
            s!(12, -7),
            s!(29, 0),
            s!(0, 9),
            s!(-14, 9),
            s!(-3, 13),
            s!(20, 5),
            s!(-37, 2),
            s!(32, -18),
            s!(129, -10),
            s!(40, 0),
            s!(63, -3),
            s!(1, 8),
            s!(71, 9),
            s!(77, 10),
            s!(-2, 5),
            s!(21, -17),
            s!(104, -7),
            s!(71, -5),
            s!(54, -6),
            s!(52, -1),
            s!(88, 5),
            s!(12, 16),
            s!(-25, 6),
            s!(81, -52),
            s!(43, -16),
            s!(89, -23),
            s!(48, -13),
            s!(71, -14),
            s!(72, -7),
            s!(50, -10),
            s!(28, -27),
        ],
    ]),
};
