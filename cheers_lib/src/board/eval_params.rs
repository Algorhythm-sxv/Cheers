#[cfg(feature = "eval-tracing")]
use bytemuck::{Pod, Zeroable};

use super::eval_types::*;

#[cfg_attr(feature = "eval-tracing", derive(Pod, Zeroable))]
#[derive(Copy, Clone, Debug, PartialEq, Eq)]
#[repr(C)]
pub struct EvalParams {
    pub piece_values: PieceValues,

    pub knight_mobility: [EvalScore; 9],
    pub knight_outpost: [EvalScore; 3],
    pub knight_behind_pawn: EvalScore,
    pub knight_threats: [EvalScore; 6],

    pub bishop_mobility: [EvalScore; 14],
    pub bishop_outpost: [EvalScore; 3],
    pub bishop_behind_pawn: EvalScore,
    pub bishop_pair: EvalScore,
    pub bishop_threats: [EvalScore; 6],

    pub rook_mobility: [EvalScore; 15],
    pub rook_on_open_file: [EvalScore; 3],
    pub rook_queen_file: EvalScore,

    pub queen_mobility: [EvalScore; 28],
    pub queen_discovery_risk: EvalScore,

    pub king_on_open_file: [EvalScore; 3],
    pub king_ring_attacks: [EvalScore; 16],
    pub king_virtual_mobility: [EvalScore; 28],
    pub king_discovery_risk: EvalScore,

    pub pawn_connected: [EvalScore; 3],
    pub pawn_phalanx: [EvalScore; 3],
    pub pawn_isolated: [EvalScore; 2],
    pub pawn_doubled: [EvalScore; 5],
    pub pawn_backward: [EvalScore; 2],

    pub passed_pawn_friendly_king_distance: [EvalScore; 4],
    pub passed_pawn_enemy_king_distance: [EvalScore; 4],
    pub passed_pawn_table: [EvalScore; 64],

    pub piece_tables: PieceTables,
}

#[cfg(feature = "eval-tracing")]
impl EvalParams {
    pub const LEN: usize = std::mem::size_of::<Self>() / std::mem::size_of::<i16>();
    pub fn to_array(&mut self) -> [i16; Self::LEN] {
        let array = &mut bytemuck::cast::<EvalParams, [i16; Self::LEN]>(*self);
        array
            .chunks_exact_mut(2)
            .for_each(|p| EvalScore::convert(p));
        *array
    }
    pub fn as_array(&self) -> &[i16; Self::LEN] {
        bytemuck::cast_ref::<EvalParams, [i16; Self::LEN]>(self)
    }
    pub fn from_array(mut params: [i16; Self::LEN]) -> Self {
        params.chunks_exact_mut(2).for_each(|p| {
            let score = EvalScore::new(p[0], p[1]);
            p[1] = (score.inner() >> 16) as i16;
            p[0] = score.inner() as i16;
        });
        bytemuck::cast::<[i16; Self::LEN], EvalParams>(params)
    }
}

#[cfg_attr(feature = "eval-tracing", derive(Pod, Zeroable))]
#[derive(Clone, Copy)]
#[repr(C)]
pub struct EvalTrace {
    pub pawn_count: [i16; 2],
    pub knight_count: [i16; 2],
    pub bishop_count: [i16; 2],
    pub rook_count: [i16; 2],
    pub queen_count: [i16; 2],
    // pads to the length of PieceValues
    pub king_count: [i16; 2],

    pub knight_mobility: [[i16; 2]; 9],
    pub knight_outpost: [[i16; 2]; 3],
    pub knight_beind_pawn: [i16; 2],
    pub knight_threats: [[i16; 2]; 6],

    pub bishop_mobility: [[i16; 2]; 14],
    pub bishop_outpost: [[i16; 2]; 3],
    pub bishop_beind_pawn: [i16; 2],
    pub bishop_pair: [i16; 2],
    pub bishop_threats: [[i16; 2]; 6],

    pub rook_mobility: [[i16; 2]; 15],
    pub rook_on_open_file: [[i16; 2]; 3],
    pub rook_queen_file: [i16; 2],

    pub queen_mobility: [[i16; 2]; 28],
    pub queen_discovery_risk: [i16; 2],

    pub king_on_open_file: [[i16; 2]; 3],
    pub king_ring_attacks: [[i16; 2]; 16],
    pub king_virtual_mobility: [[i16; 2]; 28],
    pub king_discovery_risk: [i16; 2],

    pub pawn_connected: [[i16; 2]; 3],
    pub pawn_phalanx: [[i16; 2]; 3],
    pub pawn_isolated: [[i16; 2]; 2],
    pub pawn_doubled: [[i16; 2]; 5],
    pub pawn_backward: [[i16; 2]; 2],

    pub passed_pawn_friendly_king_distance: [[i16; 2]; 4],
    pub passed_pawn_enemy_king_distance: [[i16; 2]; 4],
    pub passed_pawn_placement: [[i16; 2]; 64],

    pub pawn_placement: [[i16; 2]; 64],
    pub knight_placement: [[i16; 2]; 64],
    pub bishop_placement: [[i16; 2]; 64],
    pub rook_placement: [[i16; 2]; 64],
    pub queen_placement: [[i16; 2]; 64],
    pub king_placement: [[i16; 2]; 64],

    pub turn: i16,
}

#[cfg(feature = "eval-tracing")]
impl EvalTrace {
    pub const LEN: usize = std::mem::size_of::<Self>() / std::mem::size_of::<i16>();
    pub fn new() -> Self {
        bytemuck::cast::<[i16; Self::LEN], Self>([0i16; Self::LEN])
    }
    pub fn to_array(&self) -> [i16; Self::LEN] {
        bytemuck::cast::<Self, [i16; Self::LEN]>(*self)
    }
}

#[cfg(feature = "eval-tracing")]
impl Default for EvalTrace {
    fn default() -> Self {
        Self::new()
    }
}

// static assert that eval params and trace are the same length (plus 1 for turn in trace)
#[cfg(feature = "eval-tracing")]
const _PARAMS_TRACE_LEN_EQ: () = if EvalParams::LEN + 1 == EvalTrace::LEN {
    ()
} else {
    panic!("Eval parameters and trace are not equal length!")
};

pub const CHECKMATE_SCORE: i16 = 30000;
pub const DRAW_SCORE: i16 = 0;

pub static EVAL_PARAMS: EvalParams = EvalParams {
    piece_values: PieceValues([
        s!(48, 109),
        s!(383, 178),
        s!(351, 199),
        s!(458, 337),
        s!(928, 601),
        s!(0, 0),
    ]),
    knight_mobility: [
        s!(-87, -76),
        s!(-62, -38),
        s!(-43, -19),
        s!(-40, -2),
        s!(-28, -6),
        s!(-25, 4),
        s!(-20, 2),
        s!(-13, 5),
        s!(-6, -1),
    ],
    knight_outpost: [s!(-39, -15), s!(-33, -21), s!(-19, -7)],
    knight_behind_pawn: s!(6, 6),
    knight_threats: [
        s!(-4, 5),
        s!(0, 0),
        s!(5, 23),
        s!(29, 4),
        s!(0, -3),
        s!(76, -18),
    ],
    bishop_mobility: [
        s!(-44, -36),
        s!(-53, -19),
        s!(-36, -17),
        s!(-25, -6),
        s!(-18, -1),
        s!(-12, 5),
        s!(-9, 11),
        s!(-4, 12),
        s!(0, 16),
        s!(2, 15),
        s!(8, 18),
        s!(17, 11),
        s!(23, 21),
        s!(28, 8),
    ],
    bishop_outpost: [s!(-55, -30), s!(-49, -33), s!(-23, -31)],
    bishop_behind_pawn: s!(7, 4),
    bishop_pair: s!(25, 30),
    bishop_threats: [
        s!(-1, 7),
        s!(13, 13),
        s!(0, 0),
        s!(15, -4),
        s!(16, -5),
        s!(36, 17),
    ],
    rook_mobility: [
        s!(-77, -94),
        s!(-58, -45),
        s!(-15, -28),
        s!(-11, -11),
        s!(-10, -7),
        s!(-7, -8),
        s!(-6, -2),
        s!(-2, -1),
        s!(0, 1),
        s!(4, 0),
        s!(8, 3),
        s!(11, 5),
        s!(15, 8),
        s!(13, 9),
        s!(38, -2),
    ],
    rook_on_open_file: [s!(-23, -13), s!(-13, -3), s!(4, -16)],
    rook_queen_file: s!(1, 8),
    queen_mobility: [
        s!(0, 0),
        s!(-57, -206),
        s!(-113, -27),
        s!(-46, -122),
        s!(-37, -60),
        s!(-29, -77),
        s!(-24, -61),
        s!(-22, -40),
        s!(-21, -18),
        s!(-17, -27),
        s!(-18, 0),
        s!(-15, -4),
        s!(-11, 3),
        s!(-10, 3),
        s!(-8, 8),
        s!(-6, 11),
        s!(-10, 20),
        s!(-3, 16),
        s!(-9, 25),
        s!(-13, 30),
        s!(-2, 24),
        s!(2, 25),
        s!(-6, 26),
        s!(39, -6),
        s!(80, -23),
        s!(15, 8),
        s!(95, -42),
        s!(497, -243),
    ],
    queen_discovery_risk: s!(-13, 15),
    king_on_open_file: [s!(12, 2), s!(0, 13), s!(-22, 6)],
    king_ring_attacks: [
        s!(46, -20),
        s!(42, -15),
        s!(32, -11),
        s!(18, -12),
        s!(-21, 4),
        s!(-107, 43),
        s!(-138, 56),
        s!(-178, 74),
        s!(-421, 217),
        s!(-414, 345),
        s!(-161, 402),
        s!(-166, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
    ],
    king_virtual_mobility: [
        s!(0, 0),
        s!(883, -336),
        s!(17, 0),
        s!(33, -7),
        s!(31, -10),
        s!(15, 2),
        s!(9, 0),
        s!(0, 0),
        s!(-4, 3),
        s!(-8, 2),
        s!(-9, 2),
        s!(-11, 3),
        s!(-15, 3),
        s!(-20, 4),
        s!(-25, 6),
        s!(-25, 3),
        s!(-36, 5),
        s!(-35, 2),
        s!(-23, -1),
        s!(-11, -6),
        s!(-10, -9),
        s!(-5, -12),
        s!(-5, -16),
        s!(-34, -16),
        s!(-21, -20),
        s!(-19, -24),
        s!(-73, -18),
        s!(-15, -30),
    ],
    king_discovery_risk: s!(-13, -2),
    pawn_connected: [s!(-13, -11), s!(0, -1), s!(12, 3)],
    pawn_phalanx: [s!(0, 3), s!(6, 5), s!(5, -3)],
    pawn_isolated: [s!(7, 9), s!(4, 8)],
    pawn_doubled: [s!(0, -1), s!(0, 2), s!(0, -3), s!(1, -20), s!(0, 568)],
    pawn_backward: [s!(6, 13), s!(0, 10)],
    passed_pawn_friendly_king_distance: [s!(-5, 9), s!(-7, 2), s!(-10, -9), s!(-11, -12)],
    passed_pawn_enemy_king_distance: [s!(6, -30), s!(22, -10), s!(0, 10), s!(-6, 22)],
    passed_pawn_table: [
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(16, -10),
        s!(14, -1),
        s!(11, -19),
        s!(1, -30),
        s!(9, -19),
        s!(15, -20),
        s!(45, -17),
        s!(15, -15),
        s!(20, -4),
        s!(19, 0),
        s!(16, -10),
        s!(-6, -10),
        s!(12, -14),
        s!(17, -5),
        s!(21, 0),
        s!(27, -9),
        s!(21, 14),
        s!(15, 14),
        s!(2, 13),
        s!(2, 10),
        s!(-7, 11),
        s!(-15, 19),
        s!(-34, 29),
        s!(12, 16),
        s!(24, 32),
        s!(24, 37),
        s!(11, 29),
        s!(0, 30),
        s!(3, 27),
        s!(18, 30),
        s!(12, 39),
        s!(-9, 36),
        s!(34, 75),
        s!(24, 60),
        s!(14, 43),
        s!(16, 26),
        s!(0, 39),
        s!(-18, 66),
        s!(-30, 62),
        s!(-50, 85),
        s!(55, -9),
        s!(78, -6),
        s!(9, 61),
        s!(35, 0),
        s!(16, -3),
        s!(10, 32),
        s!(1, 75),
        s!(-17, 61),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
    ],
    piece_tables: PieceTables([
        [
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(-3, -67),
            s!(2, -70),
            s!(1, -62),
            s!(4, -61),
            s!(2, -64),
            s!(25, -70),
            s!(26, -79),
            s!(9, -81),
            s!(-6, -73),
            s!(-10, -75),
            s!(-1, -73),
            s!(0, -68),
            s!(1, -70),
            s!(0, -74),
            s!(8, -82),
            s!(0, -81),
            s!(-4, -71),
            s!(-7, -69),
            s!(4, -78),
            s!(13, -80),
            s!(10, -77),
            s!(13, -81),
            s!(0, -78),
            s!(-12, -78),
            s!(5, -59),
            s!(1, -64),
            s!(4, -65),
            s!(14, -72),
            s!(16, -73),
            s!(18, -73),
            s!(1, -67),
            s!(1, -69),
            s!(3, -46),
            s!(4, -35),
            s!(15, -26),
            s!(6, -23),
            s!(31, -40),
            s!(69, -62),
            s!(26, -42),
            s!(22, -56),
            s!(5, 73),
            s!(5, 63),
            s!(21, 2),
            s!(9, 44),
            s!(56, 37),
            s!(58, 10),
            s!(32, -3),
            s!(12, 2),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
        ],
        [
            s!(-37, -5),
            s!(-10, -4),
            s!(-34, 3),
            s!(-22, 10),
            s!(-19, 1),
            s!(-26, 6),
            s!(-15, -4),
            s!(-42, 9),
            s!(-12, -9),
            s!(-23, 0),
            s!(-9, -6),
            s!(-1, 2),
            s!(0, 0),
            s!(-8, 0),
            s!(-6, -4),
            s!(-4, -6),
            s!(-13, -5),
            s!(-10, 2),
            s!(-4, 0),
            s!(-9, 13),
            s!(0, 10),
            s!(0, 1),
            s!(8, -7),
            s!(-9, -8),
            s!(-4, 0),
            s!(-7, 4),
            s!(0, 12),
            s!(0, 15),
            s!(5, 16),
            s!(12, 2),
            s!(0, -3),
            s!(-7, 5),
            s!(2, 2),
            s!(7, 3),
            s!(-4, 9),
            s!(24, 15),
            s!(3, 14),
            s!(14, 11),
            s!(-7, 5),
            s!(18, -5),
            s!(-23, -3),
            s!(-24, 0),
            s!(-18, 16),
            s!(-2, 14),
            s!(7, 1),
            s!(9, 5),
            s!(-10, -3),
            s!(-47, 5),
            s!(-64, 4),
            s!(-40, 8),
            s!(-3, -1),
            s!(-16, 5),
            s!(-5, -2),
            s!(2, -9),
            s!(-25, 0),
            s!(-22, -11),
            s!(-174, 30),
            s!(-41, -23),
            s!(-52, 3),
            s!(-49, 5),
            s!(-13, 0),
            s!(-67, 0),
            s!(-87, -6),
            s!(-95, -17),
        ],
        [
            s!(47, -14),
            s!(30, -3),
            s!(41, -12),
            s!(34, -1),
            s!(29, -2),
            s!(17, 2),
            s!(41, -16),
            s!(52, -11),
            s!(27, 0),
            s!(48, -12),
            s!(41, -9),
            s!(37, -3),
            s!(40, 0),
            s!(46, -7),
            s!(58, -12),
            s!(42, -11),
            s!(45, -10),
            s!(43, -4),
            s!(39, -3),
            s!(36, 1),
            s!(42, 0),
            s!(46, -4),
            s!(39, -11),
            s!(48, -9),
            s!(21, -3),
            s!(22, -3),
            s!(32, 0),
            s!(34, -2),
            s!(43, -3),
            s!(33, 0),
            s!(37, -8),
            s!(18, -3),
            s!(7, 6),
            s!(17, 4),
            s!(22, 0),
            s!(18, 5),
            s!(25, 2),
            s!(13, 1),
            s!(27, -3),
            s!(19, -2),
            s!(12, 4),
            s!(15, 0),
            s!(25, 0),
            s!(3, 9),
            s!(31, -1),
            s!(37, 3),
            s!(31, -2),
            s!(34, -2),
            s!(-1, 0),
            s!(8, 1),
            s!(0, 0),
            s!(11, -6),
            s!(1, 1),
            s!(31, -8),
            s!(-5, 4),
            s!(24, -16),
            s!(0, 1),
            s!(-19, -5),
            s!(5, -6),
            s!(-16, 1),
            s!(-50, 4),
            s!(3, -2),
            s!(16, -5),
            s!(-20, 6),
        ],
        [
            s!(-3, -2),
            s!(-2, -5),
            s!(1, -5),
            s!(1, -4),
            s!(3, -10),
            s!(-3, -8),
            s!(-15, -8),
            s!(7, -22),
            s!(-17, -7),
            s!(-13, -7),
            s!(-15, -2),
            s!(-5, -7),
            s!(-1, -10),
            s!(-3, -10),
            s!(6, -15),
            s!(-28, -8),
            s!(-18, -6),
            s!(-15, -5),
            s!(-10, -6),
            s!(-1, -9),
            s!(-1, -9),
            s!(4, -15),
            s!(9, -20),
            s!(3, -18),
            s!(-21, -1),
            s!(-30, 1),
            s!(-27, 3),
            s!(-19, 2),
            s!(-16, 0),
            s!(-12, -4),
            s!(-3, -10),
            s!(-4, -14),
            s!(-25, 2),
            s!(-6, -3),
            s!(-3, 0),
            s!(5, -3),
            s!(-7, -1),
            s!(7, -4),
            s!(11, -8),
            s!(9, -9),
            s!(-5, 0),
            s!(-6, 1),
            s!(-12, 1),
            s!(13, -4),
            s!(18, -8),
            s!(28, -10),
            s!(48, -14),
            s!(27, -13),
            s!(-19, 6),
            s!(-30, 15),
            s!(-7, 8),
            s!(13, 0),
            s!(-11, 2),
            s!(30, -7),
            s!(37, -8),
            s!(16, -8),
            s!(0, 6),
            s!(9, 1),
            s!(9, 3),
            s!(4, 0),
            s!(34, -6),
            s!(67, -17),
            s!(59, -15),
            s!(-6, 0),
        ],
        [
            s!(22, -39),
            s!(14, -38),
            s!(15, -37),
            s!(20, -49),
            s!(14, -34),
            s!(0, -38),
            s!(-4, -36),
            s!(39, -64),
            s!(12, -27),
            s!(14, -30),
            s!(16, -30),
            s!(19, -27),
            s!(21, -32),
            s!(20, -50),
            s!(23, -56),
            s!(19, -32),
            s!(6, -44),
            s!(14, -44),
            s!(4, -4),
            s!(10, -22),
            s!(8, -10),
            s!(13, -14),
            s!(13, -6),
            s!(11, -20),
            s!(12, -33),
            s!(0, -10),
            s!(1, -10),
            s!(-4, 10),
            s!(5, 0),
            s!(9, -7),
            s!(14, -8),
            s!(9, -15),
            s!(-7, -27),
            s!(0, -5),
            s!(-8, -5),
            s!(-14, 19),
            s!(-6, 25),
            s!(0, 21),
            s!(0, 9),
            s!(15, -10),
            s!(-9, -29),
            s!(-12, -15),
            s!(6, -2),
            s!(0, 2),
            s!(18, 23),
            s!(14, 3),
            s!(55, -28),
            s!(8, -7),
            s!(-20, -6),
            s!(-29, -4),
            s!(-33, 10),
            s!(-53, 46),
            s!(-55, 37),
            s!(26, 23),
            s!(-12, 26),
            s!(75, -57),
            s!(-23, -10),
            s!(-21, 1),
            s!(15, -15),
            s!(5, 2),
            s!(47, -26),
            s!(33, -8),
            s!(-4, -14),
            s!(-18, 15),
        ],
        [
            s!(-67, -9),
            s!(-1, -10),
            s!(-13, 0),
            s!(-40, 7),
            s!(-11, -4),
            s!(-39, 5),
            s!(4, -15),
            s!(-19, -28),
            s!(1, -17),
            s!(-19, 4),
            s!(-23, 14),
            s!(-41, 22),
            s!(-32, 20),
            s!(-27, 18),
            s!(9, 3),
            s!(-6, -9),
            s!(0, -21),
            s!(22, -3),
            s!(-24, 17),
            s!(-38, 25),
            s!(-34, 24),
            s!(-20, 19),
            s!(0, 4),
            s!(-30, -3),
            s!(18, -28),
            s!(28, -7),
            s!(9, 11),
            s!(-29, 26),
            s!(-26, 27),
            s!(-42, 21),
            s!(-13, 4),
            s!(-57, -3),
            s!(0, -24),
            s!(16, -2),
            s!(29, 10),
            s!(9, 22),
            s!(-3, 22),
            s!(0, 18),
            s!(19, 5),
            s!(-24, -3),
            s!(29, -19),
            s!(112, -7),
            s!(37, 8),
            s!(61, 6),
            s!(7, 16),
            s!(62, 15),
            s!(69, 8),
            s!(3, -1),
            s!(13, -17),
            s!(87, -4),
            s!(67, -2),
            s!(46, -1),
            s!(50, 1),
            s!(78, 5),
            s!(17, 13),
            s!(-20, 0),
            s!(59, -47),
            s!(40, -18),
            s!(74, -22),
            s!(43, -12),
            s!(62, -14),
            s!(63, -11),
            s!(41, -14),
            s!(12, -27),
        ],
    ]),
};
