#[cfg(feature = "eval-tracing")]
use bytemuck::{Pod, Zeroable};

use super::eval_types::*;

#[cfg_attr(feature = "eval-tracing", derive(Pod, Zeroable))]
#[derive(Copy, Clone, Debug, PartialEq, Eq)]
#[repr(C)]
pub struct EvalParams {
    pub piece_values: PieceValues,

    pub knight_mobility: [EvalScore; 9],

    pub bishop_mobility: [EvalScore; 14],

    pub rook_mobility: [EvalScore; 15],

    pub queen_mobility: [EvalScore; 28],

    pub pawn_connected: [EvalScore; 3],
    pub pawn_phalanx: [EvalScore; 3],
    pub pawn_isolated: [EvalScore; 2],
    pub pawn_doubled: [EvalScore; 6],
    pub pawn_backward: [EvalScore; 2],

    pub passed_pawn_table: [EvalScore; 64],

    pub piece_tables: PieceTables,
}

#[cfg(feature = "eval-tracing")]
impl EvalParams {
    pub const LEN: usize = std::mem::size_of::<Self>() / std::mem::size_of::<i16>();
    pub fn to_array(&mut self) -> [i16; Self::LEN] {
        let array = &mut bytemuck::cast::<EvalParams, [i16; Self::LEN]>(*self);
        array
            .chunks_exact_mut(2)
            .for_each(|p| EvalScore::convert(p));
        *array
    }
    pub fn as_array(&self) -> &[i16; Self::LEN] {
        bytemuck::cast_ref::<EvalParams, [i16; Self::LEN]>(self)
    }
    pub fn from_array(mut params: [i16; Self::LEN]) -> Self {
        params.chunks_exact_mut(2).for_each(|p| {
            let score = EvalScore::new(p[0], p[1]);
            p[1] = (score.inner() >> 16) as i16;
            p[0] = score.inner() as i16;
        });
        bytemuck::cast::<[i16; Self::LEN], EvalParams>(params)
    }
}

#[cfg_attr(feature = "eval-tracing", derive(Pod, Zeroable))]
#[derive(Clone, Copy)]
#[repr(C)]
pub struct EvalTrace {
    pub pawn_count: [i16; 2],
    pub knight_count: [i16; 2],
    pub bishop_count: [i16; 2],
    pub rook_count: [i16; 2],
    pub queen_count: [i16; 2],
    // pads to the length of PieceValues
    pub king_count: [i16; 2],

    pub knight_mobility: [[i16; 2]; 9],
    pub bishop_mobility: [[i16; 2]; 14],
    pub rook_mobility: [[i16; 2]; 15],
    pub queen_mobility: [[i16; 2]; 28],

    pub pawn_connected: [[i16; 2]; 3],
    pub pawn_phalanx: [[i16; 2]; 3],
    pub pawn_isolated: [[i16; 2]; 2],
    pub pawn_doubled: [[i16; 2]; 6],
    pub pawn_backward: [[i16; 2]; 2],

    pub passed_pawn_placement: [[i16; 2]; 64],

    pub pawn_placement: [[i16; 2]; 64],
    pub knight_placement: [[i16; 2]; 64],
    pub bishop_placement: [[i16; 2]; 64],
    pub rook_placement: [[i16; 2]; 64],
    pub queen_placement: [[i16; 2]; 64],
    pub king_placement: [[i16; 2]; 64],

    pub turn: i16,
}

#[cfg(feature = "eval-tracing")]
impl EvalTrace {
    pub const LEN: usize = std::mem::size_of::<Self>() / std::mem::size_of::<i16>();
    pub fn new() -> Self {
        bytemuck::cast::<[i16; Self::LEN], Self>([0i16; Self::LEN])
    }
    pub fn to_array(&self) -> [i16; Self::LEN] {
        bytemuck::cast::<Self, [i16; Self::LEN]>(*self)
    }
}

#[cfg(feature = "eval-tracing")]
impl Default for EvalTrace {
    fn default() -> Self {
        Self::new()
    }
}

// static assert that eval params and trace are the same length (plus 1 for turn in trace)
#[cfg(feature = "eval-tracing")]
const _PARAMS_TRACE_LEN_EQ: () = if EvalParams::LEN + 1 == EvalTrace::LEN {
    ()
} else {
    panic!("Eval parameters and trace are not equal length!")
};

pub const CHECKMATE_SCORE: i16 = 30000;
pub const DRAW_SCORE: i16 = 0;

pub static EVAL_PARAMS: EvalParams = EvalParams {
    piece_values: PieceValues([
        s!(72, 114),
        s!(409, 211),
        s!(422, 231),
        s!(566, 407),
        s!(1198, 740),
        s!(0, 0),
    ]),
    knight_mobility: [
        s!(-91, -85),
        s!(-55, -43),
        s!(-30, -18),
        s!(-25, 0),
        s!(-8, -6),
        s!(-4, 5),
        s!(3, 2),
        s!(13, 3),
        s!(24, -8),
    ],
    bishop_mobility: [
        s!(-46, -48),
        s!(-58, -33),
        s!(-39, -30),
        s!(-26, -15),
        s!(-17, -9),
        s!(-8, -1),
        s!(-3, 3),
        s!(2, 4),
        s!(7, 7),
        s!(10, 4),
        s!(19, 4),
        s!(34, -6),
        s!(38, 4),
        s!(42, -12),
    ],
    rook_mobility: [
        s!(-86, -83),
        s!(-77, -49),
        s!(-24, -28),
        s!(-17, -10),
        s!(-12, -7),
        s!(-5, -8),
        s!(-3, 0),
        s!(6, 0),
        s!(12, 3),
        s!(25, 1),
        s!(33, 5),
        s!(42, 5),
        s!(51, 9),
        s!(52, 10),
        s!(83, -4),
    ],
    queen_mobility: [
        s!(0, 0),
        s!(-79, -38),
        s!(-156, -10),
        s!(-67, -123),
        s!(-48, -65),
        s!(-40, -93),
        s!(-33, -61),
        s!(-31, -38),
        s!(-30, -5),
        s!(-23, -18),
        s!(-23, 12),
        s!(-19, 9),
        s!(-12, 17),
        s!(-9, 17),
        s!(-6, 24),
        s!(-4, 28),
        s!(-9, 42),
        s!(1, 36),
        s!(-6, 48),
        s!(-9, 56),
        s!(7, 46),
        s!(14, 50),
        s!(0, 51),
        s!(60, 12),
        s!(94, 1),
        s!(40, 30),
        s!(189, -56),
        s!(261, -93),
    ],
    pawn_connected: [s!(-12, -18), s!(5, -6), s!(23, 0)],
    pawn_phalanx: [s!(-1, 2), s!(7, 6), s!(8, -6)],
    pawn_isolated: [s!(4, 1), s!(-4, 1)],
    pawn_doubled: [
        s!(0, 3),
        s!(0, -5),
        s!(5, -26),
        s!(0, 54),
        s!(0, 0),
        s!(0, 0),
    ],
    pawn_backward: [s!(4, 3), s!(-3, 0)],
    passed_pawn_table: [
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(5, -1),
        s!(-3, 16),
        s!(3, -6),
        s!(-11, -18),
        s!(-3, 4),
        s!(19, -3),
        s!(65, 0),
        s!(7, 2),
        s!(9, 6),
        s!(12, 12),
        s!(3, 3),
        s!(-28, 4),
        s!(6, 1),
        s!(33, 5),
        s!(34, 15),
        s!(34, 3),
        s!(14, 27),
        s!(7, 26),
        s!(-13, 25),
        s!(-15, 23),
        s!(-19, 22),
        s!(-25, 29),
        s!(-53, 46),
        s!(5, 29),
        s!(19, 49),
        s!(23, 51),
        s!(4, 37),
        s!(-13, 35),
        s!(-8, 30),
        s!(23, 33),
        s!(5, 51),
        s!(-22, 49),
        s!(30, 102),
        s!(19, 76),
        s!(10, 48),
        s!(15, 19),
        s!(0, 32),
        s!(0, 70),
        s!(-40, 73),
        s!(-75, 107),
        s!(59, -9),
        s!(85, -8),
        s!(9, 67),
        s!(25, -9),
        s!(4, -17),
        s!(0, 26),
        s!(-4, 87),
        s!(-56, 67),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
    ],
    piece_tables: PieceTables([
        [
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(-12, -27),
            s!(-2, -31),
            s!(0, -21),
            s!(6, -19),
            s!(11, -28),
            s!(35, -33),
            s!(41, -45),
            s!(9, -45),
            s!(-20, -34),
            s!(-22, -37),
            s!(-6, -35),
            s!(-3, -28),
            s!(7, -34),
            s!(-7, -36),
            s!(14, -49),
            s!(-3, -46),
            s!(-19, -29),
            s!(-19, -30),
            s!(0, -42),
            s!(10, -44),
            s!(13, -44),
            s!(9, -47),
            s!(-1, -44),
            s!(-22, -42),
            s!(-8, -16),
            s!(-12, -22),
            s!(-3, -25),
            s!(9, -35),
            s!(15, -38),
            s!(8, -37),
            s!(-5, -30),
            s!(-5, -30),
            s!(-12, 1),
            s!(-8, 16),
            s!(6, 25),
            s!(-4, 30),
            s!(18, 8),
            s!(64, -21),
            s!(16, 3),
            s!(13, -12),
            s!(-11, 154),
            s!(-10, 143),
            s!(9, 65),
            s!(5, 111),
            s!(50, 107),
            s!(52, 77),
            s!(10, 59),
            s!(6, 75),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
        ],
        [
            s!(-34, -19),
            s!(7, -15),
            s!(-23, -6),
            s!(-11, 0),
            s!(-6, -5),
            s!(-5, 0),
            s!(1, -18),
            s!(-40, 0),
            s!(3, -23),
            s!(-13, -9),
            s!(-1, -13),
            s!(13, -5),
            s!(15, -7),
            s!(11, -6),
            s!(15, -13),
            s!(14, -18),
            s!(-7, -13),
            s!(-7, 0),
            s!(1, 0),
            s!(-2, 17),
            s!(9, 14),
            s!(8, -1),
            s!(18, -13),
            s!(-5, -16),
            s!(4, -6),
            s!(0, 1),
            s!(3, 18),
            s!(7, 20),
            s!(11, 22),
            s!(20, 7),
            s!(8, -6),
            s!(0, 1),
            s!(17, -6),
            s!(11, 7),
            s!(0, 16),
            s!(41, 20),
            s!(14, 18),
            s!(25, 16),
            s!(4, 5),
            s!(41, -13),
            s!(-9, -15),
            s!(5, -11),
            s!(-3, 18),
            s!(34, 12),
            s!(57, -9),
            s!(85, -7),
            s!(41, -20),
            s!(0, -11),
            s!(-58, -9),
            s!(-34, -1),
            s!(56, -23),
            s!(16, -8),
            s!(66, -27),
            s!(53, -28),
            s!(7, -16),
            s!(8, -32),
            s!(-210, 21),
            s!(-39, -42),
            s!(-54, -8),
            s!(-73, 0),
            s!(14, -18),
            s!(-101, -8),
            s!(-121, -15),
            s!(-110, -38),
        ],
        [
            s!(53, -24),
            s!(31, -11),
            s!(47, -19),
            s!(37, -7),
            s!(31, -8),
            s!(24, -3),
            s!(50, -29),
            s!(51, -21),
            s!(38, -11),
            s!(57, -20),
            s!(42, -15),
            s!(41, -8),
            s!(42, -6),
            s!(59, -14),
            s!(71, -17),
            s!(51, -21),
            s!(54, -21),
            s!(48, -9),
            s!(44, -5),
            s!(37, 2),
            s!(44, 2),
            s!(48, -6),
            s!(36, -18),
            s!(50, -17),
            s!(28, -14),
            s!(23, -7),
            s!(33, 1),
            s!(43, 0),
            s!(49, -1),
            s!(29, 1),
            s!(32, -15),
            s!(25, -14),
            s!(1, 1),
            s!(27, -1),
            s!(28, -1),
            s!(38, 5),
            s!(37, 3),
            s!(12, -1),
            s!(40, -12),
            s!(23, -12),
            s!(7, -2),
            s!(18, -6),
            s!(51, -8),
            s!(18, 4),
            s!(62, -9),
            s!(54, 0),
            s!(50, -10),
            s!(55, -14),
            s!(-8, -8),
            s!(15, -8),
            s!(-1, -5),
            s!(7, -14),
            s!(13, -7),
            s!(61, -22),
            s!(3, -3),
            s!(44, -35),
            s!(-9, -10),
            s!(-33, -18),
            s!(-6, -15),
            s!(-39, -4),
            s!(-77, -1),
            s!(-16, -9),
            s!(-7, -15),
            s!(-43, -1),
        ],
        [
            s!(-11, 0),
            s!(-4, 0),
            s!(10, -4),
            s!(16, -2),
            s!(23, -12),
            s!(8, -6),
            s!(-5, -7),
            s!(9, -30),
            s!(-27, -2),
            s!(-15, -3),
            s!(-15, 1),
            s!(-3, -4),
            s!(1, -8),
            s!(0, -7),
            s!(24, -15),
            s!(-33, -6),
            s!(-32, -2),
            s!(-21, -1),
            s!(-13, -2),
            s!(3, -8),
            s!(1, -6),
            s!(0, -10),
            s!(22, -22),
            s!(6, -18),
            s!(-32, 6),
            s!(-38, 6),
            s!(-32, 9),
            s!(-20, 8),
            s!(-13, 4),
            s!(-14, 0),
            s!(10, -10),
            s!(-7, -11),
            s!(-32, 9),
            s!(-7, 1),
            s!(4, 4),
            s!(14, -1),
            s!(0, 0),
            s!(15, -1),
            s!(38, -10),
            s!(18, -8),
            s!(-5, 6),
            s!(-3, 6),
            s!(-4, 4),
            s!(30, -4),
            s!(37, -9),
            s!(55, -12),
            s!(86, -18),
            s!(57, -16),
            s!(-13, 10),
            s!(-27, 21),
            s!(3, 12),
            s!(35, 1),
            s!(3, 2),
            s!(59, -8),
            s!(75, -12),
            s!(36, -9),
            s!(8, 12),
            s!(24, 4),
            s!(25, 6),
            s!(19, 2),
            s!(54, -7),
            s!(92, -19),
            s!(83, -17),
            s!(10, 1),
        ],
        [
            s!(26, -38),
            s!(22, -40),
            s!(26, -40),
            s!(33, -52),
            s!(27, -34),
            s!(11, -36),
            s!(2, -35),
            s!(47, -69),
            s!(13, -19),
            s!(15, -23),
            s!(17, -24),
            s!(23, -25),
            s!(26, -29),
            s!(37, -56),
            s!(34, -56),
            s!(28, -32),
            s!(0, -36),
            s!(13, -42),
            s!(1, 5),
            s!(11, -15),
            s!(6, 3),
            s!(14, -3),
            s!(14, 7),
            s!(8, -7),
            s!(0, -14),
            s!(-3, 0),
            s!(0, -1),
            s!(-8, 27),
            s!(2, 18),
            s!(8, 6),
            s!(12, 13),
            s!(4, 7),
            s!(-18, -12),
            s!(-4, 6),
            s!(-13, 5),
            s!(-12, 29),
            s!(-9, 50),
            s!(-2, 50),
            s!(0, 36),
            s!(25, 12),
            s!(-15, -18),
            s!(-18, -3),
            s!(3, 17),
            s!(10, 11),
            s!(31, 43),
            s!(58, 6),
            s!(108, -33),
            s!(70, -17),
            s!(-22, 5),
            s!(-38, 8),
            s!(-38, 25),
            s!(-63, 73),
            s!(-49, 55),
            s!(75, 28),
            s!(-1, 47),
            s!(126, -69),
            s!(-18, -5),
            s!(-22, 13),
            s!(25, -6),
            s!(27, 8),
            s!(81, -24),
            s!(77, -13),
            s!(-24, 10),
            s!(-25, 35),
        ],
        [
            s!(-69, -19),
            s!(7, -19),
            s!(-13, -5),
            s!(-79, 3),
            s!(-16, -12),
            s!(-39, -1),
            s!(23, -28),
            s!(7, -48),
            s!(11, -23),
            s!(-44, 5),
            s!(-57, 18),
            s!(-85, 28),
            s!(-73, 27),
            s!(-57, 25),
            s!(-5, 6),
            s!(-1, -11),
            s!(-4, -23),
            s!(0, 0),
            s!(-78, 25),
            s!(-91, 34),
            s!(-95, 37),
            s!(-69, 32),
            s!(-33, 16),
            s!(-49, 4),
            s!(21, -29),
            s!(10, -4),
            s!(-2, 14),
            s!(-67, 29),
            s!(-59, 33),
            s!(-80, 35),
            s!(-44, 18),
            s!(-83, 9),
            s!(0, -21),
            s!(9, 0),
            s!(32, 9),
            s!(0, 18),
            s!(-21, 21),
            s!(-9, 26),
            s!(10, 17),
            s!(-44, 10),
            s!(49, -21),
            s!(132, -6),
            s!(41, 6),
            s!(68, 2),
            s!(9, 15),
            s!(73, 17),
            s!(80, 19),
            s!(-8, 10),
            s!(42, -24),
            s!(114, -9),
            s!(78, -5),
            s!(55, -3),
            s!(61, 0),
            s!(104, 8),
            s!(14, 19),
            s!(-18, 6),
            s!(109, -63),
            s!(60, -22),
            s!(105, -29),
            s!(73, -19),
            s!(96, -20),
            s!(90, -10),
            s!(54, -11),
            s!(55, -35),
        ],
    ]),
};
