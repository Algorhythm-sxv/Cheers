#[cfg(feature = "eval-tracing")]
use bytemuck::{Pod, Zeroable};

use super::eval_types::*;

#[cfg_attr(feature = "eval-tracing", derive(Pod, Zeroable))]
#[derive(Copy, Clone, Debug, PartialEq, Eq)]
#[repr(C)]
pub struct EvalParams {
    pub piece_values: PieceValues,

    pub knight_mobility: [EvalScore; 9],
    pub knight_outpost: [EvalScore; 3],
    pub knight_behind_pawn: EvalScore,

    pub bishop_mobility: [EvalScore; 14],
    pub bishop_outpost: [EvalScore; 3],
    pub bishop_behind_pawn: EvalScore,
    pub bishop_pair: EvalScore,

    pub rook_mobility: [EvalScore; 15],
    pub rook_on_open_file: [EvalScore; 3],
    pub rook_queen_file: EvalScore,

    pub queen_mobility: [EvalScore; 28],
    pub queen_discovery_risk: EvalScore,

    pub king_on_open_file: [EvalScore; 3],
    pub king_ring_attacks: [EvalScore; 16],
    pub king_virtual_mobility: [EvalScore; 28],
    pub king_discovery_risk: EvalScore,

    pub pawn_connected: [EvalScore; 3],
    pub pawn_phalanx: [EvalScore; 3],
    pub pawn_isolated: [EvalScore; 2],
    pub pawn_doubled: [EvalScore; 5],
    pub pawn_backward: [EvalScore; 2],

    pub passed_pawn_friendly_king_distance: [EvalScore; 4],
    pub passed_pawn_enemy_king_distance: [EvalScore; 4],
    pub passed_pawn_table: [EvalScore; 64],

    pub piece_tables: PieceTables,
}

#[cfg(feature = "eval-tracing")]
impl EvalParams {
    pub const LEN: usize = std::mem::size_of::<Self>() / std::mem::size_of::<i16>();
    pub fn to_array(&mut self) -> [i16; Self::LEN] {
        let array = &mut bytemuck::cast::<EvalParams, [i16; Self::LEN]>(*self);
        array
            .chunks_exact_mut(2)
            .for_each(|p| EvalScore::convert(p));
        *array
    }
    pub fn as_array(&self) -> &[i16; Self::LEN] {
        bytemuck::cast_ref::<EvalParams, [i16; Self::LEN]>(self)
    }
    pub fn from_array(mut params: [i16; Self::LEN]) -> Self {
        params.chunks_exact_mut(2).for_each(|p| {
            let score = EvalScore::new(p[0], p[1]);
            p[1] = (score.inner() >> 16) as i16;
            p[0] = score.inner() as i16;
        });
        bytemuck::cast::<[i16; Self::LEN], EvalParams>(params)
    }
}

#[cfg_attr(feature = "eval-tracing", derive(Pod, Zeroable))]
#[derive(Clone, Copy)]
#[repr(C)]
pub struct EvalTrace {
    pub pawn_count: [i16; 2],
    pub knight_count: [i16; 2],
    pub bishop_count: [i16; 2],
    pub rook_count: [i16; 2],
    pub queen_count: [i16; 2],
    // pads to the length of PieceValues
    pub king_count: [i16; 2],

    pub knight_mobility: [[i16; 2]; 9],
    pub knight_outpost: [[i16; 2]; 3],
    pub knight_beind_pawn: [i16; 2],

    pub bishop_mobility: [[i16; 2]; 14],
    pub bishop_outpost: [[i16; 2]; 3],
    pub bishop_beind_pawn: [i16; 2],
    pub bishop_pair: [i16; 2],

    pub rook_mobility: [[i16; 2]; 15],
    pub rook_on_open_file: [[i16; 2]; 3],
    pub rook_queen_file: [i16; 2],

    pub queen_mobility: [[i16; 2]; 28],
    pub queen_discovery_risk: [i16; 2],

    pub king_on_open_file: [[i16; 2]; 3],
    pub king_ring_attacks: [[i16; 2]; 16],
    pub king_virtual_mobility: [[i16; 2]; 28],
    pub king_discovery_risk: [i16; 2],

    pub pawn_connected: [[i16; 2]; 3],
    pub pawn_phalanx: [[i16; 2]; 3],
    pub pawn_isolated: [[i16; 2]; 2],
    pub pawn_doubled: [[i16; 2]; 5],
    pub pawn_backward: [[i16; 2]; 2],

    pub passed_pawn_friendly_king_distance: [[i16; 2]; 4],
    pub passed_pawn_enemy_king_distance: [[i16; 2]; 4],
    pub passed_pawn_placement: [[i16; 2]; 64],

    pub pawn_placement: [[i16; 2]; 64],
    pub knight_placement: [[i16; 2]; 64],
    pub bishop_placement: [[i16; 2]; 64],
    pub rook_placement: [[i16; 2]; 64],
    pub queen_placement: [[i16; 2]; 64],
    pub king_placement: [[i16; 2]; 64],

    pub turn: i16,
}

#[cfg(feature = "eval-tracing")]
impl EvalTrace {
    pub const LEN: usize = std::mem::size_of::<Self>() / std::mem::size_of::<i16>();
    pub fn new() -> Self {
        bytemuck::cast::<[i16; Self::LEN], Self>([0i16; Self::LEN])
    }
    pub fn to_array(&self) -> [i16; Self::LEN] {
        bytemuck::cast::<Self, [i16; Self::LEN]>(*self)
    }
}

#[cfg(feature = "eval-tracing")]
impl Default for EvalTrace {
    fn default() -> Self {
        Self::new()
    }
}

// static assert that eval params and trace are the same length (plus 1 for turn in trace)
#[cfg(feature = "eval-tracing")]
const _PARAMS_TRACE_LEN_EQ: () = if EvalParams::LEN + 1 == EvalTrace::LEN {
    ()
} else {
    panic!("Eval parameters and trace are not equal length!")
};

pub const CHECKMATE_SCORE: i16 = 30000;
pub const DRAW_SCORE: i16 = 0;

pub static EVAL_PARAMS: EvalParams = EvalParams {
    piece_values: PieceValues([
        s!(49, 111),
        s!(392, 183),
        s!(360, 205),
        s!(475, 345),
        s!(967, 617),
        s!(0, 0),
    ]),
    knight_mobility: [
        s!(-89, -76),
        s!(-65, -36),
        s!(-45, -15),
        s!(-41, 0),
        s!(-28, -4),
        s!(-24, 5),
        s!(-18, 3),
        s!(-10, 5),
        s!(-2, -2),
    ],
    knight_outpost: [s!(-36, -13), s!(-27, -22), s!(-14, -8)],
    knight_behind_pawn: s!(7, 5),
    bishop_mobility: [
        s!(-43, -33),
        s!(-52, -16),
        s!(-37, -12),
        s!(-26, -2),
        s!(-18, 2),
        s!(-11, 9),
        s!(-7, 14),
        s!(-3, 15),
        s!(1, 17),
        s!(4, 15),
        s!(12, 15),
        s!(22, 7),
        s!(26, 17),
        s!(31, 1),
    ],
    bishop_outpost: [s!(-52, -29), s!(-45, -32), s!(-19, -33)],
    bishop_behind_pawn: s!(7, 5),
    bishop_pair: s!(28, 33),
    rook_mobility: [
        s!(-69, -96),
        s!(-59, -43),
        s!(-15, -26),
        s!(-10, -9),
        s!(-10, -5),
        s!(-6, -6),
        s!(-6, 0),
        s!(-1, 0),
        s!(0, 3),
        s!(5, 3),
        s!(9, 6),
        s!(12, 8),
        s!(17, 11),
        s!(15, 13),
        s!(42, 0),
    ],
    rook_on_open_file: [s!(-21, -11), s!(-11, -1), s!(7, -15)],
    rook_queen_file: s!(1, 9),
    queen_mobility: [
        s!(0, 0),
        s!(-32, -253),
        s!(-114, -18),
        s!(-48, -112),
        s!(-36, -55),
        s!(-28, -74),
        s!(-22, -56),
        s!(-20, -35),
        s!(-19, -12),
        s!(-15, -22),
        s!(-16, 5),
        s!(-14, 2),
        s!(-9, 10),
        s!(-8, 9),
        s!(-5, 14),
        s!(-4, 17),
        s!(-8, 28),
        s!(0, 23),
        s!(-7, 33),
        s!(-11, 38),
        s!(0, 31),
        s!(6, 32),
        s!(-5, 34),
        s!(43, 0),
        s!(86, -17),
        s!(19, 14),
        s!(103, -37),
        s!(510, -242),
    ],
    queen_discovery_risk: s!(-14, 17),
    king_on_open_file: [s!(13, 3), s!(0, 15), s!(-23, 7)],
    king_ring_attacks: [
        s!(48, -21),
        s!(44, -16),
        s!(34, -12),
        s!(19, -14),
        s!(-21, 2),
        s!(-112, 44),
        s!(-144, 58),
        s!(-175, 69),
        s!(-439, 223),
        s!(-429, 342),
        s!(-177, 425),
        s!(-136, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
    ],
    king_virtual_mobility: [
        s!(0, 0),
        s!(451, -117),
        s!(26, -4),
        s!(34, -7),
        s!(33, -10),
        s!(17, 2),
        s!(10, 0),
        s!(0, 0),
        s!(-4, 3),
        s!(-8, 2),
        s!(-10, 2),
        s!(-12, 4),
        s!(-17, 4),
        s!(-21, 4),
        s!(-27, 7),
        s!(-27, 4),
        s!(-38, 6),
        s!(-37, 3),
        s!(-26, -1),
        s!(-12, -6),
        s!(-13, -8),
        s!(-6, -12),
        s!(-7, -16),
        s!(-37, -16),
        s!(-23, -19),
        s!(-21, -24),
        s!(-79, -17),
        s!(-18, -30),
    ],
    king_discovery_risk: s!(-13, -2),
    pawn_connected: [s!(-13, -13), s!(0, -2), s!(13, 3)],
    pawn_phalanx: [s!(0, 4), s!(6, 7), s!(6, -2)],
    pawn_isolated: [s!(8, 10), s!(5, 10)],
    pawn_doubled: [s!(0, -2), s!(0, 2), s!(0, -3), s!(1, -20), s!(0, 304)],
    pawn_backward: [s!(6, 14), s!(0, 11)],
    passed_pawn_friendly_king_distance: [s!(-5, 9), s!(-8, 2), s!(-12, -9), s!(-12, -12)],
    passed_pawn_enemy_king_distance: [s!(6, -31), s!(23, -10), s!(0, 10), s!(-6, 23)],
    passed_pawn_table: [
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(18, -12),
        s!(15, -1),
        s!(12, -19),
        s!(1, -31),
        s!(9, -20),
        s!(16, -22),
        s!(47, -18),
        s!(17, -16),
        s!(22, -5),
        s!(21, 0),
        s!(18, -11),
        s!(-6, -11),
        s!(14, -15),
        s!(18, -6),
        s!(22, 0),
        s!(29, -10),
        s!(23, 14),
        s!(16, 15),
        s!(2, 14),
        s!(4, 10),
        s!(-8, 12),
        s!(-16, 19),
        s!(-37, 31),
        s!(14, 16),
        s!(27, 33),
        s!(26, 39),
        s!(12, 29),
        s!(0, 32),
        s!(3, 28),
        s!(19, 31),
        s!(13, 41),
        s!(-10, 38),
        s!(37, 78),
        s!(25, 62),
        s!(15, 45),
        s!(18, 26),
        s!(0, 40),
        s!(-16, 68),
        s!(-29, 64),
        s!(-52, 88),
        s!(56, -10),
        s!(80, -6),
        s!(12, 62),
        s!(35, 0),
        s!(14, -2),
        s!(13, 32),
        s!(5, 76),
        s!(-19, 63),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
    ],
    piece_tables: PieceTables([
        [
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(-2, -68),
            s!(3, -71),
            s!(1, -63),
            s!(6, -62),
            s!(3, -65),
            s!(27, -71),
            s!(28, -80),
            s!(10, -82),
            s!(-6, -75),
            s!(-10, -77),
            s!(0, -75),
            s!(0, -69),
            s!(2, -71),
            s!(0, -76),
            s!(10, -84),
            s!(0, -83),
            s!(-3, -72),
            s!(-6, -71),
            s!(5, -80),
            s!(14, -82),
            s!(12, -79),
            s!(14, -83),
            s!(2, -80),
            s!(-12, -80),
            s!(6, -60),
            s!(2, -65),
            s!(5, -67),
            s!(18, -75),
            s!(19, -75),
            s!(21, -75),
            s!(3, -69),
            s!(3, -70),
            s!(3, -46),
            s!(5, -34),
            s!(18, -26),
            s!(7, -22),
            s!(33, -40),
            s!(74, -64),
            s!(28, -42),
            s!(25, -57),
            s!(9, 77),
            s!(8, 67),
            s!(22, 4),
            s!(14, 45),
            s!(62, 40),
            s!(61, 12),
            s!(33, 0),
            s!(15, 4),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
        ],
        [
            s!(-33, -7),
            s!(-7, -7),
            s!(-31, 3),
            s!(-20, 9),
            s!(-14, 0),
            s!(-23, 5),
            s!(-11, -7),
            s!(-39, 7),
            s!(-9, -10),
            s!(-20, 0),
            s!(-7, -5),
            s!(1, 2),
            s!(2, 0),
            s!(-5, 0),
            s!(-3, -5),
            s!(0, -7),
            s!(-13, -4),
            s!(-9, 4),
            s!(-5, 2),
            s!(-10, 17),
            s!(0, 13),
            s!(1, 2),
            s!(10, -6),
            s!(-9, -8),
            s!(-2, 1),
            s!(-7, 6),
            s!(-1, 17),
            s!(-1, 20),
            s!(5, 21),
            s!(11, 8),
            s!(0, 0),
            s!(-4, 5),
            s!(5, 3),
            s!(5, 8),
            s!(-8, 17),
            s!(23, 22),
            s!(-1, 22),
            s!(11, 18),
            s!(-10, 11),
            s!(22, -4),
            s!(-20, -2),
            s!(-14, 1),
            s!(-16, 22),
            s!(9, 18),
            s!(21, 5),
            s!(52, 1),
            s!(7, -4),
            s!(-21, 2),
            s!(-55, 3),
            s!(-38, 10),
            s!(35, -8),
            s!(0, 5),
            s!(41, -10),
            s!(29, -11),
            s!(1, -3),
            s!(-7, -13),
            s!(-182, 32),
            s!(-34, -25),
            s!(-51, 4),
            s!(-54, 8),
            s!(-2, -1),
            s!(-78, 2),
            s!(-80, -7),
            s!(-99, -19),
        ],
        [
            s!(51, -15),
            s!(30, -3),
            s!(41, -14),
            s!(35, -2),
            s!(30, -3),
            s!(17, 0),
            s!(43, -17),
            s!(54, -13),
            s!(27, 0),
            s!(51, -12),
            s!(42, -8),
            s!(37, -2),
            s!(40, 0),
            s!(47, -6),
            s!(60, -12),
            s!(43, -12),
            s!(48, -11),
            s!(44, -2),
            s!(41, 0),
            s!(37, 6),
            s!(42, 3),
            s!(48, -1),
            s!(40, -10),
            s!(51, -9),
            s!(28, -6),
            s!(24, -2),
            s!(32, 5),
            s!(41, 2),
            s!(47, 3),
            s!(34, 3),
            s!(38, -7),
            s!(24, -5),
            s!(8, 5),
            s!(27, 3),
            s!(25, 3),
            s!(25, 11),
            s!(33, 7),
            s!(16, 5),
            s!(36, -4),
            s!(21, -2),
            s!(13, 3),
            s!(17, 0),
            s!(45, 0),
            s!(8, 11),
            s!(50, -1),
            s!(44, 6),
            s!(38, 0),
            s!(38, -4),
            s!(-1, -1),
            s!(16, 0),
            s!(3, 0),
            s!(19, -6),
            s!(13, 0),
            s!(54, -9),
            s!(6, 4),
            s!(41, -22),
            s!(-1, 0),
            s!(-19, -7),
            s!(5, -6),
            s!(-20, 2),
            s!(-52, 5),
            s!(0, -2),
            s!(19, -6),
            s!(-20, 4),
        ],
        [
            s!(-2, 0),
            s!(-1, -3),
            s!(2, -4),
            s!(3, -2),
            s!(5, -9),
            s!(-2, -6),
            s!(-14, -7),
            s!(9, -22),
            s!(-16, -6),
            s!(-12, -6),
            s!(-14, -1),
            s!(-4, -6),
            s!(0, -9),
            s!(-2, -9),
            s!(9, -15),
            s!(-27, -7),
            s!(-18, -5),
            s!(-15, -3),
            s!(-10, -5),
            s!(0, -8),
            s!(0, -8),
            s!(4, -14),
            s!(10, -19),
            s!(5, -17),
            s!(-20, 0),
            s!(-30, 3),
            s!(-28, 5),
            s!(-18, 3),
            s!(-15, 1),
            s!(-11, -3),
            s!(0, -10),
            s!(-2, -13),
            s!(-24, 4),
            s!(-5, -1),
            s!(-2, 2),
            s!(6, -2),
            s!(-7, 0),
            s!(8, -3),
            s!(13, -7),
            s!(11, -8),
            s!(-3, 1),
            s!(-5, 3),
            s!(-11, 2),
            s!(14, -3),
            s!(21, -7),
            s!(30, -9),
            s!(52, -14),
            s!(30, -13),
            s!(-17, 7),
            s!(-30, 17),
            s!(-6, 9),
            s!(16, 1),
            s!(-10, 3),
            s!(34, -6),
            s!(42, -7),
            s!(18, -7),
            s!(1, 8),
            s!(12, 2),
            s!(8, 5),
            s!(6, 1),
            s!(38, -6),
            s!(73, -17),
            s!(63, -14),
            s!(-1, 0),
        ],
        [
            s!(26, -36),
            s!(18, -35),
            s!(19, -35),
            s!(24, -47),
            s!(18, -32),
            s!(2, -36),
            s!(0, -34),
            s!(43, -64),
            s!(16, -24),
            s!(18, -28),
            s!(20, -28),
            s!(23, -25),
            s!(25, -30),
            s!(25, -49),
            s!(27, -55),
            s!(22, -29),
            s!(9, -42),
            s!(18, -42),
            s!(7, 0),
            s!(14, -20),
            s!(11, -7),
            s!(17, -11),
            s!(17, -2),
            s!(15, -17),
            s!(15, -30),
            s!(3, -7),
            s!(6, -8),
            s!(-1, 14),
            s!(8, 5),
            s!(14, -5),
            s!(18, -4),
            s!(13, -12),
            s!(-4, -25),
            s!(2, 0),
            s!(-5, -2),
            s!(-12, 23),
            s!(-3, 30),
            s!(3, 26),
            s!(2, 14),
            s!(19, -6),
            s!(-6, -26),
            s!(-10, -12),
            s!(9, 2),
            s!(3, 6),
            s!(22, 28),
            s!(20, 7),
            s!(61, -26),
            s!(13, -5),
            s!(-19, -1),
            s!(-27, 0),
            s!(-32, 15),
            s!(-52, 52),
            s!(-53, 42),
            s!(32, 28),
            s!(-14, 34),
            s!(80, -55),
            s!(-19, -8),
            s!(-15, 3),
            s!(21, -13),
            s!(9, 6),
            s!(59, -26),
            s!(40, -6),
            s!(0, -11),
            s!(-11, 17),
        ],
        [
            s!(-71, -9),
            s!(-1, -10),
            s!(-14, 1),
            s!(-42, 8),
            s!(-12, -4),
            s!(-40, 6),
            s!(4, -15),
            s!(-19, -29),
            s!(1, -18),
            s!(-19, 5),
            s!(-23, 14),
            s!(-43, 23),
            s!(-34, 21),
            s!(-28, 19),
            s!(10, 3),
            s!(-6, -9),
            s!(0, -22),
            s!(24, -4),
            s!(-26, 18),
            s!(-41, 26),
            s!(-37, 26),
            s!(-22, 20),
            s!(0, 5),
            s!(-32, -3),
            s!(20, -29),
            s!(29, -8),
            s!(9, 12),
            s!(-31, 27),
            s!(-27, 28),
            s!(-45, 22),
            s!(-14, 4),
            s!(-60, -3),
            s!(0, -24),
            s!(18, -2),
            s!(31, 10),
            s!(10, 22),
            s!(-3, 23),
            s!(0, 19),
            s!(20, 6),
            s!(-24, -3),
            s!(30, -20),
            s!(117, -7),
            s!(38, 9),
            s!(64, 6),
            s!(7, 17),
            s!(64, 16),
            s!(72, 9),
            s!(3, -1),
            s!(14, -18),
            s!(90, -4),
            s!(68, -2),
            s!(48, 0),
            s!(51, 1),
            s!(81, 6),
            s!(18, 13),
            s!(-21, 0),
            s!(62, -49),
            s!(41, -18),
            s!(78, -23),
            s!(44, -12),
            s!(65, -15),
            s!(66, -11),
            s!(42, -14),
            s!(12, -28),
        ],
    ]),
};
