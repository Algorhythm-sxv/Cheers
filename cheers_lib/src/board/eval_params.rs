#[cfg(feature = "eval-tracing")]
use bytemuck::{Pod, Zeroable};

use super::eval_types::*;

#[cfg_attr(feature = "eval-tracing", derive(Pod, Zeroable))]
#[derive(Copy, Clone, Debug, PartialEq, Eq)]
#[repr(C)]
pub struct EvalParams {
    pub piece_values: PieceValues,

    pub knight_mobility: [EvalScore; 9],

    pub bishop_mobility: [EvalScore; 14],

    pub rook_mobility: [EvalScore; 15],

    pub queen_mobility: [EvalScore; 28],

    pub passed_pawn_table: [EvalScore; 64],

    pub piece_tables: PieceTables,
}

#[cfg(feature = "eval-tracing")]
impl EvalParams {
    pub const LEN: usize = std::mem::size_of::<Self>() / std::mem::size_of::<i16>();
    pub fn to_array(&mut self) -> [i16; Self::LEN] {
        let array = &mut bytemuck::cast::<EvalParams, [i16; Self::LEN]>(*self);
        array
            .chunks_exact_mut(2)
            .for_each(|p| EvalScore::convert(p));
        *array
    }
    pub fn as_array(&self) -> &[i16; Self::LEN] {
        bytemuck::cast_ref::<EvalParams, [i16; Self::LEN]>(self)
    }
    pub fn from_array(mut params: [i16; Self::LEN]) -> Self {
        params.chunks_exact_mut(2).for_each(|p| {
            let score = EvalScore::new(p[0], p[1]);
            p[1] = (score.inner() >> 16) as i16;
            p[0] = score.inner() as i16;
        });
        bytemuck::cast::<[i16; Self::LEN], EvalParams>(params)
    }
}

#[cfg_attr(feature = "eval-tracing", derive(Pod, Zeroable))]
#[derive(Clone, Copy)]
#[repr(C)]
pub struct EvalTrace {
    pub pawn_count: [i16; 2],
    pub knight_count: [i16; 2],
    pub bishop_count: [i16; 2],
    pub rook_count: [i16; 2],
    pub queen_count: [i16; 2],
    // pads to the length of PieceValues
    pub king_count: [i16; 2],

    pub knight_mobility: [[i16; 2]; 9],
    pub bishop_mobility: [[i16; 2]; 14],
    pub rook_mobility: [[i16; 2]; 15],
    pub queen_mobility: [[i16; 2]; 28],

    pub passed_pawn_placement: [[i16; 2]; 64],

    pub pawn_placement: [[i16; 2]; 64],
    pub knight_placement: [[i16; 2]; 64],
    pub bishop_placement: [[i16; 2]; 64],
    pub rook_placement: [[i16; 2]; 64],
    pub queen_placement: [[i16; 2]; 64],
    pub king_placement: [[i16; 2]; 64],

    pub turn: i16,
}

#[cfg(feature = "eval-tracing")]
impl EvalTrace {
    pub const LEN: usize = std::mem::size_of::<Self>() / std::mem::size_of::<i16>();
    pub fn new() -> Self {
        bytemuck::cast::<[i16; Self::LEN], Self>([0i16; Self::LEN])
    }
    pub fn to_array(&self) -> [i16; Self::LEN] {
        bytemuck::cast::<Self, [i16; Self::LEN]>(*self)
    }
}

#[cfg(feature = "eval-tracing")]
impl Default for EvalTrace {
    fn default() -> Self {
        Self::new()
    }
}

// static assert that eval params and trace are the same length (plus 1 for turn in trace)
#[cfg(feature = "eval-tracing")]
const _PARAMS_TRACE_LEN_EQ: () = if EvalParams::LEN + 1 == EvalTrace::LEN {
    ()
} else {
    panic!("Eval parameters and trace are not equal length!")
};

pub const CHECKMATE_SCORE: i16 = 30000;
pub const DRAW_SCORE: i16 = 0;

pub static EVAL_PARAMS: EvalParams = EvalParams {
    piece_values: PieceValues([
        s!(94, 113),
        s!(412, 218),
        s!(433, 240),
        s!(583, 428),
        s!(1242, 780),
        s!(0, 0),
    ]),
    knight_mobility: [
        s!(-99, -81),
        s!(-51, -39),
        s!(-26, -12),
        s!(-22, 8),
        s!(-3, 0),
        s!(1, 12),
        s!(12, 9),
        s!(22, 10),
        s!(32, -1),
    ],
    bishop_mobility: [
        s!(-52, -53),
        s!(-59, -35),
        s!(-37, -34),
        s!(-21, -14),
        s!(-11, -7),
        s!(-1, 0),
        s!(3, 7),
        s!(8, 8),
        s!(13, 13),
        s!(15, 9),
        s!(24, 11),
        s!(40, -1),
        s!(47, 9),
        s!(48, -7),
    ],
    rook_mobility: [
        s!(-104, -51),
        s!(-77, -50),
        s!(-24, -27),
        s!(-16, -10),
        s!(-12, -5),
        s!(-5, -8),
        s!(-3, 1),
        s!(6, 0),
        s!(13, 4),
        s!(26, 2),
        s!(35, 6),
        s!(43, 7),
        s!(49, 12),
        s!(52, 13),
        s!(79, -2),
    ],
    queen_mobility: [
        s!(0, 0),
        s!(-95, -28),
        s!(-159, -30),
        s!(-71, -101),
        s!(-44, -78),
        s!(-35, -102),
        s!(-29, -70),
        s!(-26, -46),
        s!(-25, -12),
        s!(-18, -26),
        s!(-18, 7),
        s!(-13, 7),
        s!(-6, 17),
        s!(-3, 18),
        s!(0, 24),
        s!(3, 28),
        s!(-2, 44),
        s!(8, 36),
        s!(0, 49),
        s!(-2, 56),
        s!(12, 48),
        s!(19, 53),
        s!(6, 53),
        s!(70, 11),
        s!(97, 4),
        s!(38, 36),
        s!(126, -16),
        s!(167, -40),
    ],
    passed_pawn_table: [
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(-14, -8),
        s!(-22, 9),
        s!(-6, -5),
        s!(-23, -23),
        s!(-10, 1),
        s!(10, -7),
        s!(51, -6),
        s!(-11, 1),
        s!(-10, -1),
        s!(-14, 4),
        s!(-11, 3),
        s!(-42, 4),
        s!(-5, 0),
        s!(21, 2),
        s!(12, 7),
        s!(11, -1),
        s!(-4, 20),
        s!(-16, 19),
        s!(-25, 21),
        s!(-29, 22),
        s!(-27, 20),
        s!(-38, 25),
        s!(-72, 40),
        s!(-12, 25),
        s!(-1, 42),
        s!(-2, 46),
        s!(-8, 37),
        s!(-23, 35),
        s!(-16, 30),
        s!(11, 30),
        s!(-17, 46),
        s!(-40, 44),
        s!(15, 98),
        s!(0, 73),
        s!(3, 48),
        s!(13, 19),
        s!(-6, 32),
        s!(-15, 70),
        s!(-62, 72),
        s!(-95, 109),
        s!(36, 7),
        s!(87, -12),
        s!(8, 59),
        s!(18, 5),
        s!(-3, -17),
        s!(-7, 26),
        s!(-13, 93),
        s!(-45, 33),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
        s!(0, 0),
    ],
    piece_tables: PieceTables([
        [
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(-22, -23),
            s!(7, -29),
            s!(-8, -27),
            s!(1, -21),
            s!(9, -30),
            s!(31, -33),
            s!(55, -45),
            s!(2, -47),
            s!(-29, -29),
            s!(-8, -32),
            s!(-7, -40),
            s!(-5, -32),
            s!(12, -37),
            s!(-14, -36),
            s!(34, -44),
            s!(-6, -44),
            s!(-36, -24),
            s!(-15, -26),
            s!(-13, -42),
            s!(1, -46),
            s!(1, -44),
            s!(-2, -46),
            s!(-4, -39),
            s!(-36, -41),
            s!(-26, -10),
            s!(-17, -17),
            s!(-21, -27),
            s!(-7, -37),
            s!(-1, -41),
            s!(-12, -37),
            s!(-11, -27),
            s!(-25, -28),
            s!(-35, 7),
            s!(-20, 20),
            s!(-16, 26),
            s!(-29, 30),
            s!(-4, 7),
            s!(41, -21),
            s!(1, 4),
            s!(-7, -13),
            s!(-24, 141),
            s!(-28, 147),
            s!(-14, 74),
            s!(-11, 96),
            s!(26, 108),
            s!(36, 78),
            s!(-7, 56),
            s!(-42, 111),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
            s!(0, 0),
        ],
        [
            s!(-27, -23),
            s!(16, -15),
            s!(-21, -7),
            s!(-7, 0),
            s!(0, -7),
            s!(-2, 0),
            s!(10, -19),
            s!(-41, 0),
            s!(10, -25),
            s!(-7, -12),
            s!(4, -16),
            s!(21, -8),
            s!(21, -9),
            s!(21, -9),
            s!(19, -15),
            s!(20, -19),
            s!(0, -15),
            s!(-3, -1),
            s!(5, -3),
            s!(0, 16),
            s!(14, 13),
            s!(11, -5),
            s!(23, -15),
            s!(0, -18),
            s!(11, -6),
            s!(4, 0),
            s!(7, 17),
            s!(14, 18),
            s!(17, 21),
            s!(25, 6),
            s!(12, -8),
            s!(6, 0),
            s!(27, -9),
            s!(17, 7),
            s!(5, 15),
            s!(47, 19),
            s!(18, 17),
            s!(28, 16),
            s!(9, 6),
            s!(46, -15),
            s!(0, -18),
            s!(12, -14),
            s!(1, 17),
            s!(43, 10),
            s!(67, -11),
            s!(96, -9),
            s!(50, -22),
            s!(4, -11),
            s!(-46, -13),
            s!(-24, -4),
            s!(72, -27),
            s!(22, -10),
            s!(81, -33),
            s!(66, -30),
            s!(17, -18),
            s!(15, -35),
            s!(-204, 17),
            s!(-39, -47),
            s!(-44, -10),
            s!(-60, -4),
            s!(27, -24),
            s!(-99, -11),
            s!(-112, -19),
            s!(-102, -45),
        ],
        [
            s!(59, -27),
            s!(27, -10),
            s!(46, -19),
            s!(30, -6),
            s!(26, -6),
            s!(20, -4),
            s!(48, -28),
            s!(50, -20),
            s!(32, -9),
            s!(58, -22),
            s!(38, -16),
            s!(39, -10),
            s!(37, -7),
            s!(62, -15),
            s!(68, -17),
            s!(50, -18),
            s!(55, -20),
            s!(44, -8),
            s!(43, -6),
            s!(34, 1),
            s!(44, 0),
            s!(43, -7),
            s!(33, -19),
            s!(47, -16),
            s!(25, -14),
            s!(24, -9),
            s!(28, 1),
            s!(46, -3),
            s!(48, -2),
            s!(28, 0),
            s!(28, -15),
            s!(23, -13),
            s!(-3, 2),
            s!(23, 0),
            s!(29, -3),
            s!(35, 5),
            s!(37, 2),
            s!(8, -2),
            s!(37, -13),
            s!(13, -10),
            s!(2, 0),
            s!(18, -6),
            s!(51, -9),
            s!(16, 4),
            s!(59, -11),
            s!(54, 0),
            s!(52, -10),
            s!(53, -14),
            s!(-6, -9),
            s!(16, -9),
            s!(0, -7),
            s!(4, -16),
            s!(17, -9),
            s!(59, -23),
            s!(9, -4),
            s!(37, -34),
            s!(-13, -8),
            s!(-36, -17),
            s!(-14, -14),
            s!(-39, -4),
            s!(-83, -1),
            s!(-15, -9),
            s!(-10, -15),
            s!(-46, 0),
        ],
        [
            s!(-9, 0),
            s!(-3, 0),
            s!(11, -4),
            s!(17, -1),
            s!(25, -12),
            s!(10, -6),
            s!(-4, -7),
            s!(13, -31),
            s!(-27, -1),
            s!(-16, -2),
            s!(-16, 3),
            s!(0, -3),
            s!(2, -6),
            s!(4, -7),
            s!(30, -16),
            s!(-32, -5),
            s!(-31, -2),
            s!(-22, 0),
            s!(-12, -3),
            s!(5, -8),
            s!(4, -7),
            s!(2, -11),
            s!(22, -22),
            s!(10, -19),
            s!(-30, 5),
            s!(-34, 6),
            s!(-34, 10),
            s!(-17, 8),
            s!(-11, 4),
            s!(-11, 0),
            s!(8, -11),
            s!(-4, -12),
            s!(-33, 10),
            s!(-9, 2),
            s!(4, 5),
            s!(15, 0),
            s!(1, 1),
            s!(14, -1),
            s!(39, -11),
            s!(27, -10),
            s!(-7, 7),
            s!(0, 6),
            s!(-1, 5),
            s!(35, -3),
            s!(43, -10),
            s!(58, -11),
            s!(84, -16),
            s!(59, -16),
            s!(-11, 10),
            s!(-24, 23),
            s!(9, 13),
            s!(41, 0),
            s!(8, 2),
            s!(67, -8),
            s!(82, -12),
            s!(38, -8),
            s!(15, 12),
            s!(27, 5),
            s!(26, 7),
            s!(25, 2),
            s!(62, -8),
            s!(102, -20),
            s!(84, -17),
            s!(17, 0),
        ],
        [
            s!(26, -36),
            s!(21, -41),
            s!(26, -43),
            s!(35, -53),
            s!(26, -33),
            s!(9, -34),
            s!(-1, -32),
            s!(44, -67),
            s!(11, -16),
            s!(16, -23),
            s!(16, -24),
            s!(23, -26),
            s!(26, -33),
            s!(41, -58),
            s!(38, -58),
            s!(36, -32),
            s!(-2, -34),
            s!(13, -42),
            s!(0, 6),
            s!(10, -15),
            s!(7, 4),
            s!(12, -1),
            s!(13, 9),
            s!(6, -4),
            s!(-2, -12),
            s!(-3, -1),
            s!(-2, 0),
            s!(-9, 30),
            s!(2, 18),
            s!(6, 6),
            s!(11, 14),
            s!(2, 8),
            s!(-20, -10),
            s!(-7, 5),
            s!(-15, 6),
            s!(-16, 32),
            s!(-9, 50),
            s!(-6, 56),
            s!(-2, 38),
            s!(24, 15),
            s!(-14, -20),
            s!(-19, -3),
            s!(4, 16),
            s!(11, 10),
            s!(32, 45),
            s!(65, 4),
            s!(109, -32),
            s!(72, -16),
            s!(-18, 5),
            s!(-38, 8),
            s!(-36, 23),
            s!(-65, 76),
            s!(-50, 58),
            s!(79, 31),
            s!(3, 47),
            s!(128, -69),
            s!(-15, -9),
            s!(-24, 14),
            s!(25, -7),
            s!(28, 8),
            s!(83, -25),
            s!(79, -12),
            s!(-28, 11),
            s!(-21, 35),
        ],
        [
            s!(-76, -17),
            s!(6, -18),
            s!(-14, -3),
            s!(-83, 6),
            s!(-17, -11),
            s!(-42, 0),
            s!(23, -28),
            s!(8, -49),
            s!(15, -22),
            s!(-46, 6),
            s!(-60, 21),
            s!(-88, 32),
            s!(-77, 30),
            s!(-60, 28),
            s!(-5, 8),
            s!(-4, -9),
            s!(-1, -23),
            s!(2, 0),
            s!(-84, 28),
            s!(-94, 37),
            s!(-97, 41),
            s!(-72, 35),
            s!(-29, 17),
            s!(-48, 5),
            s!(29, -30),
            s!(15, -3),
            s!(0, 16),
            s!(-70, 33),
            s!(-61, 36),
            s!(-82, 38),
            s!(-43, 20),
            s!(-81, 10),
            s!(4, -21),
            s!(16, 1),
            s!(37, 11),
            s!(1, 21),
            s!(-20, 24),
            s!(-9, 28),
            s!(11, 19),
            s!(-42, 11),
            s!(51, -19),
            s!(143, -5),
            s!(44, 8),
            s!(71, 5),
            s!(10, 17),
            s!(79, 19),
            s!(89, 21),
            s!(-6, 12),
            s!(50, -24),
            s!(123, -8),
            s!(88, -4),
            s!(62, -1),
            s!(66, 1),
            s!(114, 10),
            s!(17, 21),
            s!(-16, 7),
            s!(118, -63),
            s!(68, -23),
            s!(111, -29),
            s!(81, -18),
            s!(103, -19),
            s!(102, -9),
            s!(57, -9),
            s!(62, -36),
        ],
    ]),
};
